<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>自旋与二级相变(05)：二级相变的临界涨落与关联</title>
    <link href="/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(05)%EF%BC%9A%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98%E7%9A%84%E4%B8%B4%E7%95%8C%E6%B6%A8%E8%90%BD%E4%B8%8E%E5%85%B3%E8%81%94/"/>
    <url>/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(05)%EF%BC%9A%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98%E7%9A%84%E4%B8%B4%E7%95%8C%E6%B6%A8%E8%90%BD%E4%B8%8E%E5%85%B3%E8%81%94/</url>
    
    <content type="html"><![CDATA[<h2 id="修正的平均场的涨落与关联">修正的平均场的涨落与关联</h2><p>此前我们仅仅讨论了序参量在平衡态的取值, 从序参量实际的选取来看,无论是顺磁-铁磁相变的平均自旋, 还是气液相变的体积,都会围绕平衡态发生涨落, 并且在某些情况下, 涨落是不能忽略的.<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span></p><p>为了讨论涨落, 需要让体系能够出现非均匀的序参量取值, 但平均场理论中,单一标量<span class="math inline">\(m\)</span>作为序参量总是一致的.因此, 有必要将<span class="math inline">\(m\)</span>推广为标量场 <spanclass="math display">\[F[m(\vec{r})]=\intd^D\vec{r}\left(f_0+\frac{a(T)}{2}m^2+\frac{d(T)}{2}(\nablam)^2+\frac{b(T)}{4}m^4 \right)\]</span> 称为 <strong>Landau-Ginzburg 自由能</strong>. 显然,平移不变的极小值解会 cancel 梯度项, 与最普通的 Landau 理论没什么区别:<span class="math display">\[m_0(\vec{r})=\begin{aligned}\begin{cases}\sqrt{-a/b} &amp; T&lt;T_c\\0 \quad&amp;T&gt;T_c\end{cases}\end{aligned}\]</span></p><h3 id="序参量的涨落">序参量的涨落</h3><p>现在考虑涨落, 则 <span class="math display">\[m(\vec{r})=m_0(\vec{r})+m&#39;(\vec{r})\]</span> 代入自由能泛函, 得到 <span class="math display">\[F[m(\vec{r})]=\begin{aligned}\begin{cases}\displaystyle\intd^D\vec{r}\left(f_0+\frac{a(T)}{2}m&#39;^2+\frac{d(T)}{2}(\nablam&#39;)^2\right) &amp; T&gt;T_c\\\displaystyle\intd^D\vec{r}\left(f_0-\frac{a^2}{4b}-a(T)m&#39;^2+\frac{d(T)}{2}(\nablam&#39;)^2\right) &amp; T&lt;T_c\end{cases}\end{aligned}\]</span> 其中, <spanclass="math inline">\(m&#39;\)</span>高于二次的项都被认为是小量,从而略去. 引入涨落的 Fourier 变换: <span class="math display">\[m&#39;(\vec{r})=\sum_{\vec{k}}\mu_\vec{k} e^{i\vec{k}\cdot\vec{r}}\qquad\mu_\vec{k}=\intm&#39;(\vec{r})e^{-i\vec{k}\cdot\vec{r}}\frac{d^D\vec{r}}{(2\pi)^D}\]</span> 根据 Parseval 定理, 有 <span class="math display">\[\begin{aligned}\intm&#39;(\vec{r})^2d^D\vec{r}&amp;=(2\pi)^D\sum_\vec{k}|\mu_\vec{k}|^2\\\int(\nablam&#39;)^2d^D\vec{r}&amp;=(2\pi)^D\sum_\vec{k}k^2|\mu_\vec{k}|^2\end{aligned}\]</span> 由此, 自由能泛函可以用频域的量表出(略去不重要的<spanclass="math inline">\((2\pi)^D\)</span>系数) <spanclass="math display">\[F(\mu_\vec{k})=\begin{aligned}\begin{cases}\displaystyle F_0 + \sum_{\vec{k}}\frac{a(T)+d(T)k^2}{2}|\mu_\vec{k}|^2&amp; T&gt;T_c\\\displaystyle F_0&#39; +\sum_{\vec{k}}\frac{-2a(T)+d(T)k^2}{2}|\mu_\vec{k}|^2 &amp; T&lt;T_c\end{cases}\end{aligned}\]</span> 由于配分函数与自由能的关系, 配分函数关于<spanclass="math inline">\(\mu\)</span>的表达式为(以对称相为例) <spanclass="math display">\[Z=\exp(-\frac{F}{k_BT})\sim\prod_{\vec{k}}\exp(-\frac{a+dk^2}{2k_BT}|\mu_{\vec{k}}|^2)\]</span> 表现出 Gauss 分布. 因此, 任意一个<spanclass="math inline">\(\vec{k}\)</span>模的<spanclass="math inline">\(\mu\)</span>的系综均方值可以计算: <spanclass="math display">\[\langle|\mu_{\vec{k}}|^2\rangle=\begin{aligned}\begin{cases}\displaystyle\frac{k_BT}{a(T)+d(T)k^2} &amp; T&gt;T_c\\\displaystyle\frac{k_BT}{-2a(T)+d(T)k^2} \quad &amp; T&lt;T_c\end{cases}\end{aligned}\]</span></p><h3 id="关联函数-关联长度">关联函数, 关联长度</h3><p>为了表现出系统中两个位置的关联性, 引入 <strong>关联函数(correlationfunction)</strong> <span class="math display">\[C(\vec{r}_1,\vec{r}_2):=\langle(m(\vec{r}_1)-m_0)(m(\vec{r}_2)-m_0)\rangle\]</span> 对于具有平移不变性的系统, 关联函数值应当只与相对位置有关,令<span class="math inline">\(\vec{r}_1=\vec{r},\vec{r}_2=0\)</span>, 有<span class="math display">\[C(\vec{r}):=C(\vec{r}_1=\vec{r},\vec{r}_2=0)=\sum_{\vec{k},\vec{p}}\langle\mu_\vec{k}\mu_{\vec{p}}\ranglee^{i\vec{k}\cdot\vec{r}}\]</span> 上面的系综平均是对两个复数随机变量的乘积平均,它们中的每一个模长都服从 Gauss 分布, 相位均匀分布. 不难验证,均值取非零当且仅当<span class="math inline">\(\vec{p}=-\vec{k}\)</span>,从而<spanclass="math inline">\(\mu_\vec{p}=\mu_{-\vec{k}}=\mu_\vec{k}^*\)</span>,则 <span class="math display">\[C(\vec{r})=\sum_{\vec{k}}\frac{k_BT e^{i\vec{k}\cdot\vec{r}}}{a(T)+d(T)k^2}\]</span> 当体积足够大时(热力学极限), 合法的波模式在动量空间中变得稠密,离散求和可以用连续的积分代替, 最终得到 <span class="math display">\[\boxed{C(\vec{r})=\frac{k_BT}{4\pi d(T)}\frac{e^{-\frac{r}{\xi}}}{r}}\]</span> 其中, <span class="math inline">\(\xi\)</span>被称作<strong>关联长度(correlation length)</strong> <spanclass="math display">\[\xi=\begin{aligned}\begin{cases}\displaystyle\sqrt{\frac{d(T)}{a_0(T-T_c)}}&amp;T&gt;T_c\\\displaystyle\sqrt{\frac{d(T)}{2a_0(T_c-T)}}\quad&amp;T&lt;T_c\end{cases}\end{aligned}\]</span> <span class="math inline">\(T\ne T_c\)</span>时, 关联函数<spanclass="math inline">\(C\sim e^{-r}/r\)</span>, 表现为短程关联; <spanclass="math inline">\(T\)</span>接近<spanclass="math inline">\(T_c\)</span>时, 关联长度<spanclass="math inline">\(\xi\sim|T-T_c|^{-1/2}\)</span>, 不断增大; 当<spanclass="math inline">\(T=T_c\)</span>时, <spanclass="math inline">\(\xi\)</span>发散, 关联函数<spanclass="math inline">\(C\sim1/r\)</span>, 表现为长程关联. 因此可以说,<strong>二级相变的本质就是涨落增大、关联长度发散、体系中出现长程关联.</strong>在二级相变点附近, 关联函数和临界温度具有关系 <spanclass="math display">\[\xi\sim |t|^{-\nu}\]</span> 这里<spanclass="math inline">\(\nu\)</span>是我们新引入的临界指数, 对于 L-G自由能, <span class="math inline">\(\nu=1/2\)</span>.</p><h2 id="真实系统的关联-临界指数">真实系统的关联, 临界指数</h2><h3 id="无外场-ising-链的关联">无外场 Ising 链的关联</h3><p>考虑一维 Ising 模型的严格解, 并且外场为<spanclass="math inline">\(0\)</span>, 则 <span class="math display">\[\langle\sigma_1\sigma_{n+1}\rangle=\frac{2^N\cosh^NK}{Z}\sum_{\{\sigma_j\}}\sigma_1\sigma_{n+1}\prod_{&lt;ij&gt;}(1+\sigma_i\sigma_j\tanhK)\]</span> 这里我们仿照了二维 Ising 模型高温展开的形式, 因为我们知道,一维 Ising 模型<span class="math inline">\(T_c=0\)</span>,任何正温度都是"高温".</p><p>现在同样可以讨论求和项中的贡献. 由于每一项都乘上<spanclass="math inline">\(\sigma_1\sigma_{n+1}\)</span>,第一项本来是常数<span class="math inline">\(1\)</span>, 但现在被 cancel;本来构成闭合回路的项, 现在引入了额外的一条边.因此原有的非零贡献全部取<span class="math inline">\(0\)</span>.要得到非零贡献, 只有两条本来不闭合的路径(注意到<spanclass="math inline">\(\sigma_1=\sigma_{N+1}\)</span>): <spanclass="math display">\[\sigma_1\sigma_2\cdot\sigma_2\sigma_3\cdots\sigma_{n}\sigma_{n+1}\quad\sigma_1\sigma_{N}\cdot\sigma_{N}\sigma_{N-1}\cdots\sigma_{n+2}\sigma_{n+1}\]</span> 它们本来都是不闭合的路径, 但是引入了<spanclass="math inline">\(\sigma_1\sigma_{n+1}\)</span>因子,相当于几何上强行添加了这一条边, 所以它们添加边后是闭合的,能够对结果有贡献.</p><p>总而言之, 可以把结果写为 <span class="math display">\[\langle\sigma_1\sigma_{n+1}\rangle=\frac{\tanh^nK+\tanh^{N-n}K}{1+\tanh^N K}\]</span> 现在取热力学极限(<spanclass="math inline">\(N\rightarrow+\infty\)</span>), 考虑到<spanclass="math inline">\(\tanh K\)</span>在有限温下都是小于<spanclass="math inline">\(1\)</span>的, 得到 <span class="math display">\[\langle\sigma_1\sigma_{n+1}\rangle\approx\tanh^n K=e^{-\frac{n}{\xi}}\]</span> 其中关联长度为 <span class="math display">\[\xi=\frac{-1}{\log\tanhK}=\frac{-1}{\log\displaystyle\frac{1-e^{-\frac{2J}{k_BT}}}{1+e^{-\frac{2J}{k_BT}}}}\]</span> 低温极限下, <spanclass="math inline">\(e^{-\frac{2J}{k_BT}}\ll1\)</span>, 得到 <spanclass="math display">\[\xi=\frac{\exp(\frac{2J}{k_BT})}{2}\]</span> 此时无法定义临界指数<span class="math inline">\(\nu\)</span>,遑论<span class="math inline">\(\nu=1/2\)</span>.这也说明了平均场近似的临界指数值不适用于严格的、实际的系统.</p><h3 id="连续相变的标度分析">连续相变的标度分析</h3><p>此前, 我们已经定义了一系列临界指数, 例如<spanclass="math inline">\(\alpha,\beta,\gamma,\delta\)</span>.它们并不是相互独立的, 而是遵循一定的约束条件,通过对各种热力学量在相变点附近发散行为的 <strong>标度分析</strong> 得到,因此称为 <strong>标度关系</strong>. 此处省略标度分析过程,只给出最终结果: <span class="math display">\[\begin{aligned}\begin{cases}\displaystyle\text{Rushbrooke: }\quad&amp;\alpha +2\beta+\gamma=2\\\displaystyle\text{Widom:}&amp;\gamma=\beta(\delta-1)\end{cases}\end{aligned}\]</span> 对于一维 Ising 的平均场近似, <spanclass="math inline">\((\alpha,\beta,\gamma,\delta)=(0,1/2,1,3)\)</span>;对于二维 Ising 的严格解, 为<spanclass="math inline">\((0,1/8,7/4,15)\)</span>, 它们都满足这些结果.</p><p>还有一些标度关系, 它们基于 <strong>超标度假设(hyperscalinghypothesis)</strong> 得到, 即 <span class="math display">\[f(t,\mathcal{H})=\left(\frac{L}{\xi}\right)^Dg_1(t,\mathcal{H})+\left(\frac{L}{a}\right)^Dg_2(t,\mathcal{H})\]</span> 含义是: 无量纲化了的自由能函数, 可以利用广延性写成右侧形式,其中<span class="math inline">\(g_{1,2}\)</span>是强度量函数, <spanclass="math inline">\(L,\xi,a\)</span>分别是系统的尺度、关联长度和晶格常数,<span class="math inline">\(D\)</span>是维数. 满足超标度假设的标度关系,称为 <strong>超标度关系</strong>.</p><p>值得注意的是, 平均场近似和 Landau 理论计算得到的临界温度<spanclass="math inline">\(T_c=qJ/k_B\)</span>, 与维度无关,各种临界指数也与维度无关,因此超标度关系<strong>不一定适用于</strong>平均场近似的结果,但它们适用于真实的、严格的系统.</p><p>常用的超标度关系如下: <span class="math display">\[\begin{aligned}\begin{cases}\displaystyle\text{Fisher: }\quad&amp;\gamma=\nu(2-\eta)\\\displaystyle\text{Josephson:}&amp;\alpha=2-D\nu\end{cases}\end{aligned}\]</span> 其中, <spanclass="math inline">\(\eta\)</span>是新定义的临界指数,它描述了关联函数在临界温度处的标度: <span class="math display">\[C(r;T=T_c)\sim\frac{1}{r^{D-2+\eta}}\]</span></p><p>下表列出了我们迄今为止使用的所有临界指数,以及它们在平均场近似和真实系统中的值.</p><table><thead><tr><th style="text-align: center;">临界指数</th><th style="text-align: center;">定义</th><th style="text-align: center;">MFA值</th><th style="text-align: center;">二维 Ising 真实值</th></tr></thead><tbody><tr><td style="text-align: center;"><spanclass="math inline">\(\alpha\)</span></td><td style="text-align: center;"><spanclass="math inline">\(C_V\sim(-t)^{-\alpha}\)</span></td><td style="text-align: center;"><spanclass="math inline">\(0\)</span></td><td style="text-align: center;"><spanclass="math inline">\(0\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\beta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(m(\mathcal{H}=0)\sim(-t)^\beta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1/2\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1/8\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\gamma\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\chi_T(\mathcal{H}=0)\sim|t|^{-\gamma}\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1\)</span></td><td style="text-align: center;"><spanclass="math inline">\(7/4\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\delta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\mathcal{H}(t=0)\sim |m|^\delta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(3\)</span></td><td style="text-align: center;"><spanclass="math inline">\(15\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\eta\)</span></td><td style="text-align: center;"><span class="math inline">\(C(r;t=0)\simr^{-D+2-\eta}\)</span></td><td style="text-align: center;"><spanclass="math inline">\(0\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1/4\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\nu\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\xi\sim|t|^{-\nu}\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1/2\)</span></td><td style="text-align: center;"><spanclass="math inline">\(1\)</span></td></tr></tbody></table><ul><li>平均场近似值满足两种普通标度关系, 以及超标度关系中的 Fisher 关系,不满足 Josephson 关系;</li><li>真实解满足所有普通标度关系和超标度关系.</li></ul>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>自旋与二级相变</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平均场近似</tag>
      
      <tag>临界指数</tag>
      
      <tag>高温展开</tag>
      
      <tag>Landau 理论</tag>
      
      <tag>Landau-Ginzburg 自由能</tag>
      
      <tag>关联函数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自旋与二级相变(04)：相变的 Landau 理论</title>
    <link href="/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(04)%EF%BC%9A%E7%9B%B8%E5%8F%98%E7%9A%84%20Landau%20%E7%90%86%E8%AE%BA/"/>
    <url>/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(04)%EF%BC%9A%E7%9B%B8%E5%8F%98%E7%9A%84%20Landau%20%E7%90%86%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h2id="二级相变的-landau-理论newcommandkmathbbknewcommandrmathbbrnewcommandcmathbbcnewcommandbmathbfnewcommandbiboldsymbolnewcommandrank1textrankleft1-rightnewcommanddim1textdimleft1-rightnewcommanddiag1textdiagleft1-rightnewcommanddet1textdetleft1-rightnewcommanddet1leftbeginmatrix-1-endmatrixrightnewcommandset1left-1-rightnewcommandabs1left-1-rightnewcommandnorm1leftleft1rightright">二级相变的Landau 理论<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span></h2><p>假设自由能函数可以根据某种 <strong>序参量(order parameter)</strong>刻画, 并且是序参量的偶函数: <span class="math display">\[f(m)=f_0+\frac{a(T)}{2}m^2+\frac{b}{4}m^4\]</span> 其中<span class="math inline">\(b&gt;0\)</span>. Landau理论认为, 系统的平衡态处在自由能极小值处. 如果<spanclass="math inline">\(a&gt;0\)</span>, 那么极小值点显然为<spanclass="math inline">\(0\)</span>; 如果<spanclass="math inline">\(a&lt;0\)</span>, 则极小值点满足方程 <spanclass="math display">\[\frac{\partial f}{\partial m}=m(a(T)+bm^2)=0\quad\frac{\partial^2f}{\partial m^2}=a(T)+3bm^2&gt;0\]</span> 这时, <span class="math inline">\(m=0\)</span>是增根,极小值点为 <span class="math display">\[m^2=-\frac{a(T)}{b}\]</span> 当<span class="math inline">\(T\)</span>从<spanclass="math inline">\(T_c^+\)</span>减小为<spanclass="math inline">\(T_c^-\)</span>时, <spanclass="math inline">\(a(T)\)</span>由正变为负, 序参量<spanclass="math inline">\(m\)</span>从<spanclass="math inline">\(0\)</span>变为<spanclass="math inline">\(\pm\sqrt{-a(T)/b}\)</span>.如果希望序参量不发生突变, 关于<spanclass="math inline">\(a(T)\)</span>的比较自然的取法为: <spanclass="math inline">\(a(T)=a_0(T-T_c)\)</span>. 这样, 自由能不发生突变,相变是连续相变.</p><h3 id="landau-理论的临界指数">Landau 理论的临界指数</h3><p><span class="math inline">\(m\)</span>和<spanclass="math inline">\(T-T_c\)</span>的关系为 <spanclass="math display">\[m=\pm\sqrt{\frac{a_0}{b}(T_c-T)}\]</span> 序参量临界指数<spanclass="math inline">\(\beta\)</span>是<spanclass="math inline">\(1/2\)</span>.</p><p>现在考虑引入外场<span class="math inline">\(\mathcal{H}\)</span>,加入了响应的自由能函数是 <span class="math display">\[f(m)=f_0-m\mathcal{H}+\frac{a(T)}{2}m^2+\frac{b}{4}m^4\]</span> 同样, 平衡点由极小值点给出: <span class="math display">\[\mathcal{H}=a_0(T-T_c)m+bm^3\]</span> 它同时给出两个指数.</p><ul><li><p>磁化率临界指数<span class="math inline">\(\gamma\)</span>: <spanclass="math display">\[\chi_T\Big|_{\mathcal{H}=0}\sim|T-T_c|^{-\gamma}\]</span> 极小值方程可以反解出 <span class="math display">\[m\approx\frac{\mathcal{H}}{a_0(T-T_c)}+b&#39;\mathcal{H}^3\]</span> 则一次项系数约为磁化率, <spanclass="math inline">\(\gamma=-1\)</span>.</p></li><li><p>序参量对磁场的临界指数<spanclass="math inline">\(\delta\)</span>: <span class="math display">\[\mathcal{H}\Big|_{T=T_c}\sim m^\delta\]</span> 立即得到<spanclass="math inline">\(\delta=3\)</span>.</p></li></ul><p>这些结果与平均场近似的结果完全一致.</p><h3 id="平均场近似与-landau-理论的等价性">平均场近似与 Landau理论的等价性</h3><p>我们写出平均场近似的对数配分函数: <span class="math display">\[\log(Z_{MF})=N\log(2\cosh(\beta(qJm+\mathcal{H})))-\frac{qN}{2}\betaJm^2\]</span> 应当记得关系: <span class="math inline">\(F_{MF}=-k_BT\logZ_{MF}\)</span>, 利用 mathematica 展开上式, 可得 <spanclass="math display">\[F_{MF}=-Nk_BT\log2-N\mathcal{H}m+\frac{N(k_BT-qJ)}{2}m^2+\frac{NqJ}{12}m^4+O(\mathcal{H}^2,tm,\mathcal{H}m^3,\mathcal{H}^2m^2)\]</span> 这个形式与 Landau 自由能完全一样,两者能够给出相同的临界指数不足为奇.</p><h2 id="临界指数的普适性">临界指数的普适性</h2><p>我们用 vdW 方程来说明临界指数的普适性, 其基本形式为 <spanclass="math display">\[(p+\frac{a}{v^2})(v-b)=RT\]</span> 在临界温度以下, 存在一段失稳区间, 失稳条件为 <spanclass="math display">\[\left(\frac{\partial p}{\partialv}\right)_T=-\frac{RT}{(v-b)^2}+\frac{2a}{v^3}\ge0\]</span> 区间端点取等: <span class="math display">\[2a(v-b)^2=RTv^3\]</span> 应当指出, 物理的区间是<spanclass="math inline">\([b,+\infty)\)</span>, 可能有两根、一根或者无解,分别对应<span class="math inline">\(T_c^-, T_c,T_c^+\)</span>.可以定义如下序参量: <span class="math display">\[m:=v/v_c-1=\frac{v}{3b}-1\]</span> 约化后的方程为 <span class="math display">\[\left(1+\mu+\frac{3}{(1+m)^2}\right)(2+3m)=8(1+t)\]</span> 令<spanclass="math inline">\(\partial{\mu}/\partial{m}=0\)</span>, 得 <spanclass="math display">\[\frac{24(1+t)}{(2+3m)^2}=\frac{6}{(1+m)^3}\]</span> 当<span class="math inline">\(t&lt;0\)</span>但<spanclass="math inline">\(|t|\ll1\)</span>时, 可以认为<spanclass="math inline">\(v=3b(1+m)\)</span>, 有 <spanclass="math display">\[4(1 + t)m^3 + (3 + 12t)m^2 +12tm + 4t =0\]</span> 解得 <span class="math display">\[m\approx\pm2\sqrt{-\frac{t}{3}}\sim(-t)^{1/2}\]</span> 等温压缩系数的倒数为 <span class="math display">\[\frac{1}{\kappa_T}=-v\left(\frac{\partial p}{\partialv}\right)_T=\frac{2a}{v^2}-\frac{RTv}{(v-b)^2}=\frac{2}{9(1+m)^2}-\frac{8(1+m)(1+t)}{9(2+3m)^2}\]</span> 再令<span class="math inline">\((\mu,m)=(0,0)\)</span>, 有<span class="math display">\[\kappa_T=-\frac{9}{2t}\sim(-t)^{-1}\]</span> <span class="math inline">\(T_c\)</span>等温线上,体积偏差和压强偏差的关系: <span class="math display">\[\begin{aligned}\mu&amp;=\frac{8}{2+3m}-\frac{3}{(1+m)^2}-1\\&amp;=-\frac{3}{2}m^3+\frac{21}{4}m^4+O(m^5)\end{aligned}\]</span> 从而 <span class="math display">\[\mu\sim m^3\]</span> Ising 模型(以及 Landau 理论)和 vdW 气体的相似性见表,这些模型和理论可以统一地归入平均场近似的 <strong>普适类</strong>.</p><table><thead><tr><th style="text-align: center;">物理量和临界指数</th><th style="text-align: center;">在 Ising 模型中</th><th style="text-align: center;">在 vdW 气体中</th></tr></thead><tbody><tr><td style="text-align: center;"><spanclass="math inline">\(m\)</span>(序参量)</td><td style="text-align: center;">平均自旋</td><td style="text-align: center;">体积对临界值的偏离</td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\mathcal{H}\)</span>(外场, 广义力)</td><td style="text-align: center;">磁场</td><td style="text-align: center;">压强对临界值的偏离</td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\chi\)</span>(广义磁化率, 广义响应)</td><td style="text-align: center;">等温磁化率</td><td style="text-align: center;">等温压缩系数</td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\beta=1/2\)</span></td><td style="text-align: center;"><spanclass="math inline">\(m\sim(-t)^\beta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(v-v_c\sim(-t)^\beta\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\gamma=1\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\chi_T\sim|t|^{-\gamma}\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\kappa_T\sim|t|^{-\gamma}\)</span></td></tr><tr><td style="text-align: center;"><spanclass="math inline">\(\delta=3\)</span></td><td style="text-align: center;"><spanclass="math inline">\(\mathcal{H}\sim m^\delta\)</span></td><td style="text-align: center;"><spanclass="math inline">\(p-p_c\sim(v-v_c)^\delta\)</span></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>自旋与二级相变</category>
      
    </categories>
    
    
    <tags>
      
      <tag>van der Waals 方程</tag>
      
      <tag>平均场近似</tag>
      
      <tag>临界指数</tag>
      
      <tag>Landau 理论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自旋与二级相变(03)：二维 Ising 模型的渐近展开</title>
    <link href="/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(03)%EF%BC%9A%E4%BA%8C%E7%BB%B4%20Ising%20%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%B8%90%E8%BF%91%E5%B1%95%E5%BC%80/"/>
    <url>/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(03)%EF%BC%9A%E4%BA%8C%E7%BB%B4%20Ising%20%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%B8%90%E8%BF%91%E5%B1%95%E5%BC%80/</url>
    
    <content type="html"><![CDATA[<p>对于更高维的 Ising 模型, 解析求解任意外场的配分函数是困难的.针对零外场的二维 Ising 模型, 人们发展出了两种渐近展开的方法,分别在零温和无穷高温附近适用.<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{#1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span></p><h2 id="低温展开">低温展开</h2><p>可以想象, 严格零温的系统处在完全有序态, 即自旋要么全部向上,要么全部向下. 如果偏离零温一点呢? 系统仍有较高概率处在完全有序态,也有小概率产生一定的激发,表现为偶尔出现一些与整体自旋取向不同的格点.</p><p>为了简化, 令<span class="math inline">\(K=\beta J\)</span>.则系统的配分函数为 <span class="math display">\[Z=\sum_{\{\sigma_j\}}\exp(K\sum_{&lt;ij&gt;}\sigma_i\sigma_j)\]</span> 取四角晶格, 能量较低的一些状态示意图如下.</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="../img/2d-ising-es1.png" alt="第一激发态" /></div><div class="group-image-wrap"><imgsrc="../img/2d-ising-es2.png" alt="第二激发态" /></div></div><div class="group-image-row"><div class="group-image-wrap"><imgsrc="../img/2d-ising-es3a.png" alt="第三激发态的一种结构" /></div></div></div><p>低温展开下的配分函数具体表达式为 <span class="math display">\[Z=2e^{2NK}\left(1+Ne^{-8K}+2Ne^{-12K}+\frac{N(N+9)}{2}e^{-16K}+\cdots\right)\]</span></p><h2 id="高温展开">高温展开</h2><p>配分函数的另一种形式为 <span class="math display">\[Z=\sum_{\{\sigma_j\}}\exp(K\sum_{&lt;ij&gt;}\sigma_i\sigma_j)=\sum_{\{\sigma_j\}}\prod_{&lt;ij&gt;}\cosh(K\sigma_i\sigma_j)+\sinh(K\sigma_i\sigma_j)\]</span> 注意到<spanclass="math inline">\(\sigma_i\sigma_j=\pm1\)</span>, 因此 <spanclass="math display">\[Z=\sum_{\{\sigma_j\}}\prod_{&lt;ij&gt;}\cosh K+\sigma_i\sigma_j\sinhK=2^N\cosh^{2N}K\sum_{\{\sigma_j\}}\prod_{&lt;ij&gt;}\left(1+\sigma_i\sigma_j\tanhK\right)\]</span> 数学上取<span class="math inline">\(K=0\)</span>表示无穷高温,对应的配分函数为<span class="math inline">\(2^N\cosh^{2N}K\)</span>,它代表自旋取向相互独立且完全随机. 稍稍偏离无穷高温时, <spanclass="math inline">\(K\ll1\)</span>, 需要将后面的连乘项作展开: <spanclass="math display">\[\frac{Z}{2^N\cosh^{2N}K}=1+\tanhK\sum_{\{\sigma_j\}}\sum_{&lt;ij&gt;}\sigma_i\sigma_j +\tanh^2K\sum_{\{\sigma_j\}}\sum_{&lt;ij&gt;,&lt;jk&gt;}\sigma_i\sigma_j^2\sigma_k + \cdots\]</span> 它非常像集团展开. 我们同样可以根据出现的自旋对绘制一些边,上式中, 一次项<spanclass="math inline">\(\sigma_i\sigma_j\)</span>代表一条边构成的图,二次项<spanclass="math inline">\(\sigma_i\sigma_j^2\sigma_k\)</span>代表两条共顶点的边构成的图,<spanclass="math inline">\(\sigma_i\sigma_j\sigma_k\sigma_l\)</span>代表两条不相连的边构成的图,以此类推. 代数上<spanclass="math inline">\(\sigma_j\)</span>出现了次数的奇偶性,代表了几何图中这个点的连通度.</p><p>和集团展开不同的是, 系数中任何<spanclass="math inline">\(\sigma\)</span>的奇数次项都会被 cancel, 因为<spanclass="math inline">\(\sigma_j\)</span>会取<spanclass="math inline">\(\pm1\)</span>然后求和. 想要有非零贡献,当且仅当每个<span class="math inline">\(\sigma\)</span>都是偶数次项,而偶数次可以约化为<span class="math inline">\(2\)</span>次,每个自旋的次数都是<span class="math inline">\(2\)</span>,说明这张图中的边构成了<strong>一个闭合回路</strong>. 当然,事实上要求更宽松,一张合法的图总可以分解为<strong>若干个闭合回路</strong>,并且存在分解方法使得回路之间<strong>只共顶点不共边</strong>.</p><p>基于上述讨论, 最低阶非零项对应单个最小闭合回路, 长度为<spanclass="math inline">\(4\)</span>; 由于四角晶格中,任何闭合回路都可以通过平移补全为矩形, 因此长度总是偶数,这样还存在次数为<span class="math inline">\(6,8,\cdots\)</span>的项.</p><h3 id="展开图">展开图</h3><p>用一些和低温展开示例类似的闭合回路来说明高温展开, 如下所示.</p><figure><img src="../img/high-temp-expansion.png" alt="高温展开图示例" /><figcaption aria-hidden="true">高温展开图示例</figcaption></figure><ol type="1"><li><p><span class="math inline">\(L=4\)</span>: 只有一种(如图),考虑左上角点位置不同, 简并度为<spanclass="math inline">\(N\)</span>.</p></li><li><p><span class="math inline">\(L=6\)</span>: 形状有一种,分为长边横向(如图)和长边纵向两类, 每一类简并度为<spanclass="math inline">\(N\)</span>, 共<spanclass="math inline">\(2N\)</span>.</p></li><li><p><span class="math inline">\(L=8\)</span>: 形状上有四种</p><ol type="1"><li>第一种是<span class="math inline">\(2\times2\)</span>正方形(如图),简并度为<span class="math inline">\(N\)</span>;</li><li>第二种是两个不共边的最小回路(如图, 相对位置可变).放下第一个正方形(左上角点<spanclass="math inline">\(A\)</span>标记位置)后, 第二个正方形<spanclass="math inline">\(A&#39;\)</span>不能放在<spanclass="math inline">\(A\)</span>的最近邻点(否则共边)或者<spanclass="math inline">\(A\)</span>本身(否则重合), 简并度为<spanclass="math inline">\(N(N-5)/2\)</span>;</li><li>第三种(未画出)是<span class="math inline">\(1\times3\)</span>矩形,考虑长边可以放在横向或纵向, 简并度为<spanclass="math inline">\(2N\)</span>;</li><li>第四种(未画出)从<spanclass="math inline">\(2\times2\)</span>正方形演变而来,把它的一个顶角折到中心, 构成"楼梯状", 用正方形中心标记位置,并且考虑缺口取向有四类, 简并度为<spanclass="math inline">\(4N\)</span>.</li></ol><p>综上, <span class="math inline">\(L=8\)</span>简并度为<spanclass="math inline">\(N(N+9)/2\)</span>.</p></li></ol><div class="note note-info">            <p>为什么不能把大正方形的两个对角都折叠到中心, 这样得到的图也是合法的?因为这样相当于两个小正方形具有对顶角, 已经包含在第二种了.</p>          </div><p>这样, 可以写出包含前四个最低阶的展开式: <span class="math display">\[Z=2^N\cosh^{2N} K\left(1+N\tanh^4K+2N\tanh^6 K +\frac{N(N+9)}{2}\tanh^8K+\cdots\right)\]</span></p><h2 id="晶格的自对偶性">晶格的自对偶性</h2><p>可以把低高温展开式整理到下面: <span class="math display">\[\begin{aligned}Z(K)&amp;=2e^{2NK}\left(1+Ne^{-8K}+2Ne^{-12K}+\frac{N(N+9)}{2}e^{-16K}+\cdots\right)\\\Xi(\kappa)&amp;=2^N\cosh^{2N}\kappa\left(1+N\tanh^4\kappa+2N\tanh^6\kappa+\frac{N(N+9)}{2}\tanh^8\kappa+\cdots\right)\end{aligned}\]</span> 我们发现它们具有极高的相似性. 如果强令 <spanclass="math display">\[\tanh\kappa=e^{-2K}\quad\cosh\kappa=\frac{1}{\sqrt{1-e^{-4K}}}\quad\sinh\kappa=\frac{e^{-2K}}{\sqrt{1-e^{-4K}}}\]</span> 则<spanclass="math inline">\(\Xi(\kappa)\)</span>零阶项可以用<spanclass="math inline">\(K\)</span>表为 <span class="math display">\[2^N\cosh^{2N}\kappa=\left(\frac{2}{1-e^{-4K}}\right)^N=\left(\frac{e^{2K}}{\sinh2K}\right)^N\]</span> 即 <span class="math display">\[\Xi[\kappa(K)]/Z(K)=\frac{1}{2\sinh^{2N}2K}\]</span> 类似地, 也可以用高温参量<spanclass="math inline">\(\kappa\)</span>表示低温参量<spanclass="math inline">\(K\)</span> <span class="math display">\[\tanhK=\frac{1-e^{-2K}}{1+e^{-2K}}=\frac{1-\tanh\kappa}{1+\tanh\kappa}=\frac{\cosh\kappa-\sinh\kappa}{\cosh\kappa+\sinh\kappa}=e^{-2\kappa}\]</span> 通过这个式子也能推导出另两个双曲函数 <spanclass="math display">\[\cosh K=\frac{1}{\sqrt{1-e^{-4\kappa}}}\quad\sinhK=\frac{e^{-2\kappa}}{\sqrt{1-e^{-4\kappa}}}\]</span> 两个参量的换算关系正反形式完全一样. 而对应的配分函数比值:<span class="math display">\[Z[K(\kappa)]/\Xi(\kappa)=2^{N+1}\sinh^NK\cosh^NK=2\left(\frac{2e^{-2\kappa}}{1-e^{-4\kappa}}\right)^N=\frac{2}{\sinh^{2N}2\kappa}\]</span> 比较可得 <span class="math display">\[\sinh 2K\sinh2\kappa=1\]</span> 这些方程说明了二维四角晶格上的 Ising 模型具有<strong>自对偶性(self-duality)</strong>, 由上式联系起来的高温参量<spanclass="math inline">\(\kappa\)</span>和低温参量<spanclass="math inline">\(K\)</span>具有相似的展开式.临界点的特点是关联长度发散, 那么</p><ul><li>高温展开中很长的闭合回路贡献也不能忽略, 高温展开发散;</li><li>低温展开中容易形成面积很大的磁畴, 低温展开发散.</li></ul><p>即<span class="math inline">\(\sinh 2K\sinh 2\kappa=1\)</span>,且<span class="math inline">\(K=\kappa=\beta_c J\)</span>. 解得 <spanclass="math display">\[\boxed{T_c=\frac{2J}{k_B\log(\sqrt{2}+1)}}\]</span> 利用自对偶性, 我们没有仔细计算配分函数和热力学量,就得到了严格的临界温度.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>自旋与二级相变</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ising 模型</tag>
      
      <tag>低温展开</tag>
      
      <tag>高温展开</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自旋与二级相变(02)：一维 Ising 模型的严格解</title>
    <link href="/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(02)%EF%BC%9A%E4%B8%80%E7%BB%B4%20Ising%20%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%A7%A3/"/>
    <url>/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(02)%EF%BC%9A%E4%B8%80%E7%BB%B4%20Ising%20%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2id="转移矩阵newcommandkmathbbknewcommandrmathbbrnewcommandcmathbbcnewcommandbmathbfnewcommandbiboldsymbolnewcommandrank1textrankleft1-rightnewcommanddim1textdimleft1-rightnewcommanddiag1textdiagleft1-rightnewcommanddet1textdetleft1-rightnewcommanddet1leftbeginmatrix-1-endmatrixrightnewcommandset1left-1-rightnewcommandabs1left-1-rightnewcommandnorm1leftleft1rightright">转移矩阵<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span></h2><p>在一维 Ising 模型中, 没有平均场近似的配分函数为 <spanclass="math display">\[Z=\sum_{\{\sigma_j\}}\exp(\betaJ\sum_{j}\sigma_j\sigma_{j+1}-\beta\mathcal{H}\sum_j\sigma_j)\]</span> 可以把后一项写成更加对称的形式: <span class="math display">\[\sum_j\sigma_j=\sum_j\frac{\sigma_j+\sigma_{j+1}}{2}\]</span> 对于周期边条件, 这个代换总是成立的; 对于开边界条件,在热力学极限下, 这个代换也是成立的. 我们采用周期边条件, <spanclass="math inline">\(\sigma_{N+1}=\sigma_1\)</span>. 配分函数变为 <spanclass="math display">\[Z=\sum_{\{\sigma_j\}}\prod_{j=1}^N\exp(\betaJ\sigma_j\sigma_{j+1}-\frac{\beta\mathcal{H}}{2}(\sigma_j+\sigma_{j+1}))\]</span> 引入一个<span class="math inline">\(2\times2\)</span>矩阵,称为 <strong>转移矩阵</strong>: <span class="math display">\[\b{T}=\begin{pmatrix}e^{\beta(J+H)} &amp; e^{-\beta J}\\e^{-\beta J} &amp; e^{\beta (J-H)}\end{pmatrix}\]</span> 如果它的行列指标也用<spanclass="math inline">\(\pm1\)</span>描述, 那么配分函数可以写作 <spanclass="math display">\[Z=\sum_{\{\sigma_j\}}\prod_{j=1}^N T_{\sigma_j\sigma_{j+1}}\]</span> 这个形式可能令人费解, 完全展开的形式为 <spanclass="math display">\[Z=\sum_{\sigma_1=\pm1}\sum_{\sigma_2=\pm1}\cdots\sum_{\sigma_N=\pm1}T_{\sigma_1\sigma_2}T_{\sigma_2\sigma_3}\cdotsT_{\sigma_{N-1}\sigma_N}T_{\sigma_N\sigma_1}\]</span> 可以看到, 指标<spanclass="math inline">\(\sigma_2,\sigma_3,\cdots,\sigma_{N-1},\sigma_N\)</span>是矩阵乘法的哑指标,上式可以整理成矩阵连乘形式: <span class="math display">\[Z=\sum_{\sigma_1=\pm1}\b{T}^{N}[\sigma_1,\sigma_1]=\text{tr}(\b{T}^N)\]</span> 最终表现为<spanclass="math inline">\(N\)</span>个转移矩阵乘积的迹. 注意到如果<spanclass="math inline">\(\b{T}\)</span>相似于对角矩阵<spanclass="math inline">\(\b{D}=\text{diag}(\lambda_1,\lambda_2)\)</span>,那么<span class="math inline">\(\b{T}^N\)</span>相似于<spanclass="math inline">\(\b{D}^N\)</span>, 两者迹相等. 因此 <spanclass="math display">\[Z=\lambda_1^N+\lambda_2^N\qquad(\lambda-e^{\beta(J+\mathcal{H})})(\lambda-e^{\beta(J-\mathcal{H})})=e^{-2\betaJ}\]</span> 得到 <span class="math display">\[\lambda_{1,2}=e^{\betaJ}(\cosh(\beta\mathcal{H})\pm\sqrt{\cosh^2(\beta\mathcal{H})-2e^{-2\betaJ}\sinh(2\beta J)})\]</span> 不难得到<spanclass="math inline">\(\lambda_1&gt;\lambda_2\)</span>, 在热力学极限下,可以略去<span class="math inline">\(\lambda_2\)</span>, 得到 <spanclass="math display">\[\log Z=N\log(\lambda_1)\]</span></p><h2 id="临界温度">临界温度</h2><p>之前定义的自旋均值<spanclass="math inline">\(m\)</span>本身就有磁化强度的含义 <spanclass="math display">\[m=\frac{\partial\logZ}{N\beta\partial\mathcal{H}}=\left(\frac{1}{\lambda_1}+\frac{1}{\lambda_1^2}\right)\sinh(\beta\mathcal{H})\]</span> 在有限温、零外场下, <spanclass="math inline">\(\beta\mathcal{H}\)</span>总是为<spanclass="math inline">\(0\)</span>, 除非<spanclass="math inline">\(T=0\)</span>使得<spanclass="math inline">\(\beta\mathcal{H}\)</span>构成未定式. 因此, Ising模型的一维严格解在任意有限温不存在自发磁化, 即<spanclass="math inline">\(T_c=0\)</span>.</p><p>可以找到一个非常漂亮的 argument 来说明这一点. 假设系统处在完全有序态,能量最低, 熵也很小; 现在让某一个自旋翻转, 能量增大</p><p><span class="math display">\[\Delta E=2\times 2J=4J\]</span></p><p>熵也增大了, 按照 Boltzmann 熵的定义, <spanclass="math inline">\(S\sim\log\Omega\)</span>, 系统的基态是二重简并,而这种激发态是<span class="math inline">\(2N\)</span>重简并, 因此</p><p><span class="math display">\[\Delta S=k_B\log N\]</span></p><p>自由能变化为</p><p><span class="math display">\[\Delta F=4J-k_BT\log N\]</span></p><p>有限温、热力学极限下, 熵变总会发散, 导致自由能减小,因此完全有序态受激后更加稳定, 系统不会处在铁磁态.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>自旋与二级相变</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ising 模型</tag>
      
      <tag>转移矩阵</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自旋与二级相变(01)：Ising 模型与平均场近似</title>
    <link href="/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(01)%EF%BC%9AIsing%20%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%B9%B3%E5%9D%87%E5%9C%BA%E8%BF%91%E4%BC%BC/"/>
    <url>/posts/%E8%87%AA%E6%97%8B%E4%B8%8E%E4%BA%8C%E7%BA%A7%E7%9B%B8%E5%8F%98(01)%EF%BC%9AIsing%20%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%B9%B3%E5%9D%87%E5%9C%BA%E8%BF%91%E4%BC%BC/</url>
    
    <content type="html"><![CDATA[<h2id="自旋相互作用的微观机制与抽象描述newcommandkmathbbknewcommandrmathbbrnewcommandcmathbbcnewcommandbmathbfnewcommandbiboldsymbolnewcommandrank1textrankleft1-rightnewcommanddim1textdimleft1-rightnewcommanddiag1textdiagleft1-rightnewcommanddet1textdetleft1-rightnewcommanddet1leftbeginmatrix-1-endmatrixrightnewcommandset1left-1-rightnewcommandabs1left-1-rightnewcommandnorm1leftleft1rightrightnewcommandave1leftlangle-1-rightrangle">自旋相互作用的微观机制与抽象描述<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\newcommand{\ave}[1]{\left\langle#1 \right\rangle}\)</span></h2><p>自旋模型的动力学自由度是定义在某个晶格的格点上的自旋变量(对于原子晶格,是原子的总磁矩或者总角动量), Hamiltonian 只包含这些自旋变量的相互作用.这种相互作用是一种与全同性有关的纯量子效应, 没有经典对应.交换相互作用在两体系统中可以简单地写为 <span class="math display">\[H_{exchange}=-J\vec{S}_1\cdot\vec{S}_2\]</span> 其中, <span class="math inline">\(\vec{S}\)</span>是自旋变量,<span class="math inline">\(J\)</span>叫做 <strong>交换积分</strong>,与两个原子的波函数交叠有关, 对于远离的两个原子, 可以认为<spanclass="math inline">\(J\)</span>迅速衰减为<spanclass="math inline">\(0\)</span>. 因此, 一种十分常见的假设是:交换相互作用是一种 <strong>最近邻相互作用(nearest neighboringinteraction, NNI)</strong>.</p><p>现在, 我们可以引入自旋-<span class="math inline">\(1/2\)</span> Ising模型了. 考虑一个关于自旋的多体 Hamiltonian, 只考虑 NNI 并且强度相等.由于自旋为<span class="math inline">\(1/2\)</span>, 所以可以用 Pauli变量描述, 并且同一个方向上只取<span class="math inline">\(\pm1\)</span>.如果系统还感受到匀强外场<spanclass="math inline">\(\mathcal{H}\)</span>, 则 <spanclass="math display">\[H=-J\sum_{&lt;ij&gt;}\sigma_i\sigma_j-\mathcal{H}\sum_j\sigma_j\]</span> 求和中的<spanclass="math inline">\(&lt;ij&gt;\)</span>表示只对最近邻的数对求和.如果我们希望无外场时, 系统在动力学上倾向于铁磁, 则<spanclass="math inline">\(J&gt;0\)</span>以使得自旋全部平行时能量最低.</p><h2 id="平均场近似">平均场近似</h2><p>对于单个自旋<span class="math inline">\(\sigma_j\)</span>而言,它感受到的等效场不止是<span class="math inline">\(\mathcal{H}\)</span>,还包括相邻自旋的效应 <span class="math display">\[\mathcal{H}_{eff}=\mathcal{H}+J\sum_{&lt;ij&gt;}\sigma_i\]</span> 主要的困难在于后一项, 它使得各个自旋变量高度耦合.平均场近似的思路是, 将实际的自旋变量<spanclass="math inline">\(\sigma_i\)</span>直接用系综平均<spanclass="math inline">\(\ave{\sigma_i}\)</span>表示,就可以把它当成常数处理了. 这样, 等效场为 <span class="math display">\[\mathcal{H}_{eff}\approx\mathcal{H}+qJ\ave{\sigma_i}\]</span> 其中<span class="math inline">\(q\)</span>是配位数,只和晶格的形状有关. <spanclass="math inline">\(\ave{\sigma_i}\)</span>根据晶格的平移对称性,与具体位置<span class="math inline">\(i\)</span>无关, 可以统一记作<spanclass="math inline">\(m\)</span>.</p><p>还有一种方法是对能量项进行平均: <span class="math display">\[\begin{aligned}\sigma_i\sigma_j&amp;=(m+\sigma_i-m)(m+\sigma_j-m)\\&amp;=m^2+m(\sigma_i+\sigma_j-2m)+\cancel{(\sigma_i-m)(\sigma_j-m)}\end{aligned}\]</span> Hamiltonian 为 <span class="math display">\[\begin{aligned}H_{MF}&amp;=-J\sum_{&lt;ij&gt;}m(\sigma_i+\sigma_j-m)-\mathcal{H}\sum_j\sigma_j\\&amp;=\frac{qN}{2}Jm^2-(qJm+\mathcal{H})\sum_j\sigma_j\end{aligned}\]</span> 两种近似的区别就在于上式第一项是否存在, 我们采用带有<spanclass="math inline">\(m^2\)</span>项的平均场 Hamiltonian.</p><h3 id="配分函数和热力学量">配分函数和热力学量</h3><p>根据<span class="math inline">\(H_{MF}\)</span>求得的正则配分函数为<span class="math display">\[\begin{aligned}Z_{MF}&amp;=\exp(-\frac{qN}{2}\betaJm^2)\sum_{\{\sigma_j\}}\exp(\beta(qJm+\mathcal{H})\sum_j\sigma_j)\\&amp;=\exp(-\frac{qN}{2}\betaJm^2)\left[2\cosh(\beta(qJm+\mathcal{H})) \right]^N\end{aligned}\]</span> 对数正则配分函数为 <span class="math display">\[\log(Z_{MF})=N\log(2\cosh(\beta(qJm+\mathcal{H})))-\frac{qN}{2}\betaJm^2\]</span> 考虑到<spanclass="math inline">\(m\)</span>是单个自旋变量的系综平均,它本身就可以用配分函数表示为 <span class="math display">\[m=\frac{1}{N}\frac{\partial}{\partial\mathcal{H}_{eff}}\log(Z_{MF})=\tanh(\beta(qJm+\mathcal{H}))\]</span> 这个方程称作 <strong>自洽方程</strong>, 它决定了<spanclass="math inline">\(m\)</span>的取值.</p><h3 id="三种温度下的自旋取值">三种温度下的自旋取值</h3><p>首先是任意外场、无穷高温, <spanclass="math inline">\(\beta\mathcal{H}_{eff}\approx0\)</span>,根据自洽方程可知: <span class="math inline">\(m=0\)</span>.</p><p>然后是任意外场、零温, <spanclass="math inline">\(\beta\mathcal{H}_{eff}\)</span>发散到无穷,正负性取决于有效场, 则<span class="math inline">\(m=\pm1\)</span>.</p><p>这两种情形完全可以通过定性分析得到.系统在动力学上倾向于能量最低(自旋全部平行),在热力学上倾向于完全随机排列, 因此在无穷高温下完全无序,在零温下完全有序.</p><p>最后一种情形是无外场的自洽方程: <span class="math display">\[m=\tanh(\beta qJm)\]</span> 它在<span class="math inline">\(\beta qJ\le1\)</span>时只有零解, 在<span class="math inline">\(\betaqJ&gt;1\)</span>时存在非零解. 引入 <strong>临界温度</strong> <spanclass="math display">\[T_c=\frac{qJ}{k_B}\]</span> 当<span class="math inline">\(T&gt;T_c\)</span>时, <spanclass="math inline">\(m\)</span>只有零解, 系统在无外场时也不存在分子场,在外场驱动下产生同向磁场, 处在顺磁相; <spanclass="math inline">\(T&lt;T_c\)</span>时, <spanclass="math inline">\(m\)</span>既有零解也有非零解,系统在无外场时可以进行 <strong>自发磁化</strong>,从无序的状态自发变为相对有序的状态, 处于铁磁相. <spanclass="math inline">\(T_c\)</span>恰好是这个顺磁-铁磁相变的临界温度.这个值是完全无关于维度的, 仅有的几何量是配位数<spanclass="math inline">\(q\)</span>. 有必要指明的是,<strong>这完全是近似解, 不是真实解.</strong></p><h2 id="近似解的临界指数">近似解的临界指数</h2><p>在临界温度附近, 各个热力学量的依赖关系是重要的.考虑无外场、温度略低于<span class="math inline">\(T_c\)</span>的情况,<span class="math inline">\(m\)</span>本身是小量,自洽方程可以展开为幂级数 <span class="math display">\[m=\frac{T_c}{T}m-\frac{T_c^3}{3T^3}m^3\]</span> 得到 <span class="math display">\[m^2=\frac{3T^3}{T_c^3}(\frac{T_c}{T}-1)\]</span> 当<span class="math inline">\(T\)</span>在<spanclass="math inline">\(T_c\)</span>附近时, <spanclass="math inline">\(T^3\)</span>因子不重要, 可以直接近似为<spanclass="math inline">\(T_c\)</span>, 则 <span class="math display">\[m\sim\begin{aligned}\begin{cases}0\qquad&amp;T&gt;T_c\\(T_c-T)^{\frac{1}{2}}&amp;T&lt;T_c\end{cases}\end{aligned}\]</span> 这个幂指数的一般记号为<spanclass="math inline">\(\beta\)</span>, 称作<strong>序参量临界指数</strong>.</p><p>还可以考虑磁化率 <span class="math display">\[\chi_T=\left(\frac{\partial m}{\partial\mathcal{H}}\right)_{\mathcal{H}=0}\]</span> 对自洽方程求偏导数, 得到 <span class="math display">\[1=\frac{\displaystyle\betaqJ+\beta\left(\frac{\partial\mathcal{H}}{\partial m}\right)}{\cosh^2(\beta(qJm+\mathcal{H}))}\Bigg|_{\mathcal{H}=0}=\frac{\beta}{\cosh^2(\betaqJm)}(qJ+1/\chi_T)\]</span> 在<span class="math inline">\(T_c\)</span>附近, <spanclass="math inline">\(\cosh(\beta qJm)\)</span>直接近似为<spanclass="math inline">\(1\)</span>, 则 <span class="math display">\[\chi_T=\frac{1}{qJ-k_BT}\sim(T_c-T)^{-1}\]</span> 这个幂指数一般记作<spanclass="math inline">\(-\gamma\)</span>, 称为<strong>磁化率临界指数</strong>.</p><p>当温度恰好为<span class="math inline">\(T_c\)</span>时, 自洽方程为<span class="math display">\[m=\tanh(m+\frac{\mathcal{H}}{k_BT})\]</span> <span class="math inline">\(m\)</span>和<spanclass="math inline">\(\mathcal{H}\)</span>都是无穷小量时,它们的依赖关系为 <span class="math display">\[m=m+\frac{\mathcal{H}}{k_BT}-\frac{1}{3}\left(m+\frac{\mathcal{H}}{k_BT}\right)^3\]</span> 整理可得: <span class="math display">\[\mathcal{H}\sim m^3\qquad T=T_c\]</span> 这个指数一般记作<span class="math inline">\(\delta\)</span>,称为 <strong>序参量对磁场的临界指数</strong>. <spanclass="math inline">\(\beta,\gamma,\delta\)</span>完整描述了临界点附近<spanclass="math inline">\(T,m,\mathcal{H}\)</span>的关系.</p><p>另一个重要的临界指数是热容和温度的关系: <span class="math display">\[C_\mathcal{H}\sim|T-T_c|^{-\alpha}\]</span> 平均场近似的 Ising 模型的热容不会发散, 只有间断点, 因此<spanclass="math inline">\(\alpha=0\)</span>.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>自旋与二级相变</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ising 模型</tag>
      
      <tag>平均场近似</tag>
      
      <tag>临界指数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(07)：匀强磁场中的电子气</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(07)%EF%BC%9A%E5%8C%80%E5%BC%BA%E7%A3%81%E5%9C%BA%E4%B8%AD%E7%9A%84%E7%94%B5%E5%AD%90%E6%B0%94/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(07)%EF%BC%9A%E5%8C%80%E5%BC%BA%E7%A3%81%E5%9C%BA%E4%B8%AD%E7%9A%84%E7%94%B5%E5%AD%90%E6%B0%94/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>考虑沿着<spanclass="math inline">\(z\)</span>轴外加均匀磁场<spanclass="math inline">\(B\)</span>, 则电子的能级为 <spanclass="math display">\[\begin{aligned}E(p_z,n,s)=&amp;\frac{p_z^2}{2m^*}+(n+\frac{1}{2})\frac{eB\hbar}{m^*}+\frac{seB\hbar}{2m}\\p_z\in\mathbb{R}\qquad &amp;n=0,1,2,\cdots\qquad s=\pm1\end{aligned}\]</span> 第二项是 Landau 能级, 第三项考虑了自旋引入的能级劈裂,对于这样一个能级, 简并度为 <span class="math display">\[\bar{G}=\frac{eBA(z)}{h}\]</span> 其中, <span class="math inline">\(A(z)\)</span>为体系在<spanclass="math inline">\(z\)</span>处的横截面积.</p><p>巨配分函数对数为 <span class="math display">\[\begin{aligned}\log\Xi&amp;=\int_{-\infty}^{+\infty}\frac{dp_zdz}{h}\sum_{n=0}^{+\infty}\sum_{s=\pm1}\frac{eBA(z)}{h}\cdot\log{[1+\exp(-\alpha-\beta E)]}\\&amp;=\frac{eBV}{h^2}\sum_{n=0}^{+\infty}\sum_{s=\pm1}\int_{-\infty}^{+\infty}dp_z\log{[1+\exp(-\alpha-\betaE)]}\end{aligned}\]</span> 令<span class="math inline">\(x=\beta p_z^2/2m^*\)</span>, 则<span class="math display">\[\begin{aligned}\log\Xi&amp;=\frac{eBV}{h^2}\sum_{n=0}^{+\infty}\sum_{s=\pm1}\int_0^{+\infty}2\cdot\sqrt{\frac{m^*}{2\beta}}x^{-\frac{1}{2}}dx\log{[1+z^*e^{-x}]}\\&amp;=\sqrt{\frac{2\pim^*}{\beta}}\frac{eBV}{h^2}\sum_{n=0}^{+\infty}\sum_{s=\pm1}f_{3/2}(z^*)\end{aligned}\]</span> 其中, <span class="math inline">\(z^*=\exp(-\alpha-\betaE_L-\beta E_S)\)</span>, <span class="math inline">\(E_L,E_S\)</span>分别表示轨道和自旋磁矩的能量.</p><p>有必要对本节的近似和 notation 作出声明. 采用这样一种近似: 温度远小于Fermi 温度, 因此满足强简并; 而磁场能级间隙又远小于<spanclass="math inline">\(k_BT\)</span>, 以至于 Landau 能级也很接近准连续,但连续性不够强, 需要在积分之外补充几项, 下面很快就会看到.</p><p>由于强简并, 后文中的化学势不再采用字母<spanclass="math inline">\(\mu\)</span>, 而是需要时直接写成<spanclass="math inline">\(\varepsilon_F\)</span>; <spanclass="math inline">\(\mu\)</span>这个符号暂且拿来表示磁矩, 即 Bohr磁子; 加上标<spanclass="math inline">\(^*\)</span>表示质量为有效质量时对应的磁矩: <spanclass="math display">\[\mu=\frac{e\hbar}{2m}\qquad\mu^*=\frac{e\hbar}{2m^*}\]</span></p><h2 id="landau-能级求和-euler-maclaurin-公式">Landau 能级求和,Euler-Maclaurin 公式</h2><p>这里再次引用无穷级数求和的近似公式<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="经典流体第1节中, 曾用该公式计算分子的转动配分函数">[1]</span></a></sup>,称为 <strong>Euler-Maclaurin 公式</strong>: <spanclass="math display">\[\sum_{n=0}^{+\infty}a(n)=\int_0^{+\infty}a(x)dx+\frac{a(0)}{2}-\frac{a&#39;(0)}{12}+\cdots\]</span> 待求项<span class="math inline">\(a(n)\)</span>在本问题中为<span class="math display">\[f_{3/2}(z^*)=f_{3/2}\left[z_L\exp(-\beta\mu^* B(2n+1))\right]\]</span></p><h3 id="零阶积分近似">零阶积分近似</h3><p>Fermi 函数的积分公式为 <span class="math display">\[\int f_m(z)d\log z=f_{m+1}(z)+C\]</span> 对于准连续的<span class="math inline">\(n\)</span>, 有 <spanclass="math display">\[\begin{aligned}dn&amp;=-\frac{1}{2\beta\mu^* B}d\log\left[\exp(-\beta \mu^*B(2n+1))\right]\\&amp;=-\frac{d\log z^*}{2\beta\mu^* B}\end{aligned}\]</span> 因此 <span class="math display">\[\int_0^{+\infty}f_{3/2}(z^*)dn=-\frac{f_{5/2}(z)}{2\beta\mu^*B}\Bigg|_{z^*=z_L\exp(-\beta\mu^* B)}^{z^*=0}=\frac{1}{2\beta\mu^*B}f_{5/2}\left[z_L\exp(-\beta\mu^*B)\right]\]</span></p><h3 id="一阶修正">一阶修正</h3><p><span class="math inline">\(a(0)/2\)</span>在本问题中相当于 <spanclass="math display">\[\frac{a(0)}{2}=\frac{1}{2}f_{3/2}(z_L\exp(-\beta\mu^* B))\]</span></p><h3 id="二阶修正">二阶修正</h3><p><span class="math inline">\(-a&#39;(0)/12\)</span>在本问题中相当于<span class="math display">\[-\frac{1}{12}\frac{d}{dn}f_{3/2}(z^*)\Bigg|_{n=0}=-\frac{1}{12}\frac{f_{1/2}(z^*)}{z^*}\frac{dz^*}{dn}\Bigg|_{n=0}=\frac{\beta\mu^*B}{6}f_{1/2}\left[z_L\exp(-\beta\mu^*B)\right]\]</span> 总结上述结果, <spanclass="math inline">\(n\)</span>的求和的近似计算式为 <spanclass="math display">\[\sum_{n=0}^{+\infty}f_{3/2}(z^*)=\frac{1}{2\beta\mu^*B}f_{5/2}(z^*)+\frac{1}{2}f_{3/2}(z^*)+\frac{\beta\mu^*B}{6}f_{1/2}(z^*)\Bigg|_{z^*=z_L\exp(-\beta\mu^*B)}\]</span></p><h2 id="自旋求和-两类磁化率">自旋求和, 两类磁化率</h2><p>现在的巨配分函数对数如下 <span class="math display">\[\begin{aligned}\log\Xi&amp;=\frac{V}{\lambda_T^3}\sum_{s=\pm1}f_{5/2}(z^*)+\beta\mu^*Bf_{3/2}(z^*)+\frac{(\beta\mu^*B)^2}{3}f_{1/2}(z^*)\Bigg|_{z^*=z_L\exp(-\beta\mu^*B)}\end{aligned}\]</span></p><p>其中, <span class="math inline">\(z_L=\exp(-\alpha-s\beta\muB)\)</span>. 再令<spanclass="math inline">\(z_S=\exp(-\alpha-\beta\mu^*B)\)</span>, 则 <spanclass="math display">\[\begin{aligned}\log\Xi&amp;=\frac{V}{\lambda_T^3}\sum_{s=\pm1}f_{5/2}(z^*)+\beta\mu^*Bf_{3/2}(z^*)+\frac{(\beta\mu^*B)^2}{3}f_{1/2}(z^*)\Bigg|_{z^*=z_S\exp(-s\beta\mu B)}\end{aligned}\]</span> 下面最好利用科学计算软件计算, 得到 <spanclass="math display">\[\log\Xi\approx\frac{2N\varepsilon_F}{5k_BT}+\frac{N(3\mu^2-\mu^*{^2})}{4\varepsilon_Fk_BT}B^2\]</span> 系统的磁化率为 <span class="math display">\[\chi=\frac{\partial^2}{\partial B^2}\frac{k_BT}{V}\log\Xi\]</span> 不难看到, 体系的磁性可以分为两类效应,它们来自不同的物理(以下两公式中的<spanclass="math inline">\(n\)</span>为电子数密度):</p><ul><li>Pauli 顺磁性: 来自电子自旋引发的能级劈裂, <spanclass="math inline">\(\chi_p=3n\mu^2/2\varepsilon_F\)</span></li><li>Landau 抗磁性: 来自电子轨道磁矩的能量, <spanclass="math inline">\(\chi_l=-n\mu{^*}^2/2\varepsilon_F\)</span></li></ul><p>前者是单纯自旋作用, 磁矩中的质量无需作有效修正;后者与几何空间中的运动有关, 磁矩中的质量应为有效质量. 对于自由电子,<span class="math inline">\(\mu^*=\mu\)</span>, 整体必然保持顺磁性;但是对于介质(例如半导体)中的电子, 有效质量<spanclass="math inline">\(m^*\)</span>有时可能下降到<spanclass="math inline">\(0.05m\)</span>左右, 这时整体磁性体现为抗磁性.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>经典流体第1节中,曾用该公式计算分子的转动配分函数<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Fermi 气体</tag>
      
      <tag>Landau 能级</tag>
      
      <tag>Pauli 顺磁性</tag>
      
      <tag>Landau 抗磁性</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(06)：强简并 Fermi 气体</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(06)%EF%BC%9A%E5%BC%BA%E7%AE%80%E5%B9%B6%20Fermi%20%E6%B0%94%E4%BD%93/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(06)%EF%BC%9A%E5%BC%BA%E7%AE%80%E5%B9%B6%20Fermi%20%E6%B0%94%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>公式回顾<span class="math display">\[\begin{aligned}\log\Xi&amp;=\frac{(2s+1)V}{\lambda_T^3}f_{5/2}(z)\\N&amp;=\frac{(2s+1)V}{\lambda_T^3}f_{3/2}(z)\\p&amp;=\frac{(2s+1)k_BT}{\lambda_T^3}f_{5/2}(z)\\U&amp;=\frac{3k_BT}{2}\frac{(2s+1)V}{\lambda_T^3}f_{5/2}(z)\end{aligned}\]</span></p><h2 id="sommerfeld-展开">Sommerfeld 展开</h2><p>Fermi 函数的定义如下 <span class="math display">\[f_m(z):=\frac{1}{\Gamma(m)}\int_0^{+\infty}\frac{x^{m-1}dx}{z^{-1}e^x+1}\]</span> 弱简并条件下, 可以直接把分式展开, 但强简并时, <spanclass="math inline">\(z^{-1}&lt;1\)</span>甚至<spanclass="math inline">\(z^{-1}\ll1\)</span>, <spanclass="math inline">\(z^{-1}e^x\)</span>会经历一个由小量增长到<spanclass="math inline">\(1\)</span>再无限增大的过程,幂级数展开并非对整个过程适用.</p><p>更一般地, 可以研究如下积分的近似计算公式 <spanclass="math display">\[I=\int_0^{+\infty}\frac{h(x)dx}{z^{-1}e^x+1}\]</span> 引入新参量<span class="math inline">\(x&#39;=x-\logz\)</span>, 并把<spanclass="math inline">\(I\)</span>的区间拆分为正负两部分 <spanclass="math display">\[I=\int_{-\log z}^0\frac{h(x&#39;+\logz)dx&#39;}{e^{x&#39;}+1}+\int_0^{+\infty}\frac{h(x&#39;+\logz)dx&#39;}{e^{x&#39;}+1}\]</span> 对于前一项, 令<spanclass="math inline">\(x&#39;\rightarrow-x&#39;\)</span>, 有 <spanclass="math display">\[I=\int_0^{\log z}h(\logz-x&#39;)\left(1-\frac{1}{e^{x&#39;}+1}\right)dx&#39;+\int_0^{+\infty}\frac{h(x&#39;+\logz)}{e^{x&#39;}+1}dx&#39;\]</span> 整理, 得 <span class="math display">\[I=\int_0^{\log z} h(x&#39;)dx&#39; + \int_0^{+\infty} \frac{h(\log z +x&#39;) - h(\log z - x&#39;)}{e^{x&#39;} + 1}dx&#39; + \int_{\logz}^{+\infty}\frac{h(\log z - x&#39;)}{e^{x&#39;} + 1}dx&#39;\]</span> 第三项是高阶项, 可以直接略去. 而第二项分子可以围绕<spanclass="math inline">\(\log z\)</span>展开: <span class="math display">\[h(\log z + x&#39;) - h(\log z -x&#39;)=\sum_{j=1}^{+\infty}\frac{2h^{(2j-1)}(\logz)}{(2j-1)!}x&#39;^{2j - 1}\]</span> 积分为 <span class="math display">\[I=\int_0^{\logz}h(x&#39;)dx&#39;+\sum_{j=1}^{+\infty}2f_{2j}(1)h^{(2j-1)}(\log z)\]</span> <spanclass="math inline">\(f_{2j}(1)\)</span>是可以用弱简并展开处理的 <spanclass="math display">\[\begin{aligned}f_{2j}(1)&amp;=\frac{1}{1^{2j}}-\frac{1}{2^{2j}}+\frac{1}{3^{2j}}-\frac{1}{4^{2j}}+\cdots\\&amp;=\left(\frac{1}{1^{2j}}+\frac{1}{2^{2j}}+\frac{1}{3^{2j}}+\frac{1}{4^{2j}}+\cdots\right) -2 \left(\frac{1}{2^{2j}}+\frac{1}{4^{2j}}+\cdots \right)\\&amp;=\zeta(2j)-\frac{2}{2^{2j}}\zeta(2j)\end{aligned}\]</span> 积分前几项为 <span class="math display">\[I=\int_0^{\log z}h(x&#39;)dx&#39;+\frac{\pi^2}{6}h&#39;(\log z) +\frac{7\pi^4}{360}h&#39;&#39;&#39;(\log z)+\cdots\]</span> 这就是所谓的 <strong>Sommerfeld 展开</strong>. 对于<spanclass="math inline">\(f_m(z)\)</span>, 零阶项为 <spanclass="math display">\[f_m(z)\approx\frac{(\log z)^m}{m!}\]</span></p><h2 id="强简并极限">强简并极限</h2><p>粒子数的自洽条件为 <span class="math display">\[\begin{aligned}N&amp;=(2s+1)V\left(\frac{2\pimk_BT}{h^2}\right)^{3/2}\frac{(\mu/k_BT)^{3/2}}{\Gamma(5/2)}\\&amp;=\frac{(2s+1)V}{6\pi^2}\left(\frac{2m\mu}{\hbar^2}\right)^{3/2}\end{aligned}\]</span> 即零温时的化学势(也常记作 <strong>Fermi 能</strong> <spanclass="math inline">\(\varepsilon_F\)</span>)为 <spanclass="math display">\[\varepsilon_F=\frac{\hbar^2}{2m}\left(\frac{6\pi^2N}{(2s+1)V}\right)^{2/3}\]</span> 零温下的 Fermion 并不会"冻结"运动或者凝聚, 而是具有显著的动能,<span class="math inline">\(0\sim\varepsilon_F\)</span>在<spanclass="math inline">\(k\)</span>空间中确定了一个 Fermi 球,单粒子态在球内外均匀分布, 而粒子实际占据的单粒子态是被 Fermi球包裹的那些态.</p><p>压强为 <span class="math display">\[\begin{aligned}p&amp;=\frac{Nk_BT}{V}\frac{f_{5/2}(\log z)}{f_{3/2}(\log z)}\\&amp;=\frac{Nk_BT}{V}\frac{2}{5}\frac{\mu}{k_BT}\\&amp;=\frac{2}{5}\frac{N}{V}\varepsilon_F\end{aligned}\]</span> 既然具有动能, 显然也具备显著的动理压强. 这个压强一般也叫 Fermi气体的 <strong>简并压</strong>.</p><p>内能为 <span class="math display">\[U=\frac{3}{2}pV=\frac{3}{5}N\varepsilon_F\]</span> 粒子的平均动能为<spanclass="math inline">\(3\varepsilon_F/5\)</span>.</p><h2 id="低温展开">低温展开</h2><p>利用低温展开可以类似地计算热力学量. 首先是粒子数自洽条件 <spanclass="math display">\[N=\frac{(2s+1)V}{6\pi^2}\left(\frac{2m\mu}{\hbar^2}\right)^{3/2}\left[1+\frac{\pi^2}{8}\left(\frac{k_BT}{\mu}\right)^2\right]\]</span> 这个式子确认近似的阶数, 以及相应精度下的化学势. 反解出化学势为<span class="math display">\[\mu=\varepsilon_F\left[1-\frac{\pi^2}{12}\left(\frac{k_BT}{\varepsilon_F}\right)^2\right]\]</span> 压强和内能为 <span class="math display">\[\begin{aligned}p&amp;=\frac{2N}{5V}\varepsilon_F\left[1+\frac{5\pi^2}{12}\left(\frac{k_BT}{\varepsilon_F}\right)^2\right]\\U&amp;=\frac{3}{2}pV\end{aligned}\]</span> 因此, 电子气热容的最低阶非零项为 <span class="math display">\[C_V\approx\frac{3}{2}\frac{\partial p}{\partialT}V=\frac{\pi^2}{2}\frac{Nk_B^2T}{\varepsilon_F}\]</span> 通常来说, 金属中的传导电子可以看成理想电子气, Fermi 能<spanclass="math inline">\(\varepsilon_F\sim 10^4\text{K}\cdot k_B\)</span>,比室温<span class="math inline">\(300\text{K}\)</span>高多了,因此金属中的传导电子可以当作强简并电子气处理,电子贡献的热容可以用上式计算, 再考虑晶格热容, 则固体低温热容为 <spanclass="math display">\[C_V\approxNk_B\left[\frac{\pi^2}{2}\frac{T}{\theta_F}+\frac{12\pi^4}{5}\left(\frac{T}{\theta_D}\right)^3\right]\]</span> 晶格热容的<spanclass="math inline">\(T^3\)</span>律在低温下就生效了,但电子热容要在极低温(通常<spanclass="math inline">\(\lesssim10\text{K}\)</span>)才会占主导.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Fermi 气体</tag>
      
      <tag>自由电子气</tag>
      
      <tag>Sommerfeld 展开</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(05)：弱简并 Fermi 气体</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(05)%EF%BC%9A%E5%BC%B1%E7%AE%80%E5%B9%B6%20Fermi%20%E6%B0%94%E4%BD%93/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(05)%EF%BC%9A%E5%BC%B1%E7%AE%80%E5%B9%B6%20Fermi%20%E6%B0%94%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>与讨论Bose 气体的情形类似, 我们假定所研究的理想 Fermi 气体是非相对论性的.同时, 粒子的平动动能可以看成准连续的, 单粒子态的求和换成积分, <spanclass="math inline">\(\text{spin-}s\)</span> Fermion构成的理想气体的巨配分函数为 <span class="math display">\[\log\Xi=\frac{2(2s+1)V}{\sqrt{\pi}\lambda_T^3}\int_0^{+\infty}\log(1+e^{-\alpha-x})\sqrt{x}dx\]</span> 积分同样可以利用分部积分消去对数 <span class="math display">\[Integral=\frac{2}{3}x^{3/2}\log(1+e^{-\alpha-x})\Bigg|_{0}^{+\infty}+\int_0^{+\infty}\frac{2}{3}x^{3/2}\frac{dx}{e^{\alpha+x}+1}\]</span> 引入所谓的 Fermi 函数 <span class="math display">\[f_m(z):=\frac{1}{\Gamma(m)}\int\frac{x^{m-1}dx}{z^{-1}e^x+1}\]</span> 积分<spanclass="math inline">\(Integral=2/3\times\Gamma(5/2)f_{5/2}(z)\)</span>,代入得 <span class="math display">\[\begin{aligned}\log\Xi&amp;=\frac{4(2s+1)V}{3\sqrt{\pi}\lambda_T^3}\Gamma(\frac{5}{2})f_{5/2}(z)\\&amp;=\frac{(2s+1)V}{\lambda_T^3}f_{5/2}(z)\end{aligned}\]</span> 热力学量为</p><p><span class="math display">\[\begin{aligned}N&amp;=\frac{(2s+1)V}{\lambda_T^3}f_{3/2}(z)\\p&amp;=\frac{(2s+1)k_BT}{\lambda_T^3}f_{5/2}(z)\end{aligned}\]</span></p><h2 id="弱简并展开">弱简并展开</h2><p>首先需要弄清<spanclass="math inline">\(f_m(z)\)</span>的单调性和取值范围. 显然,它是单调递增的, 并且总有 <span class="math display">\[\frac{1}{\Gamma(m)}\int_0^{+\infty}\frac{x^{m-1}dx}{z^{-1}e^x+1}&lt;\frac{1}{\Gamma(m)}\int_0^{+\infty}x^{m-1}ze^{-x}dx=z\]</span> 可见, 对任何有限的<span class="math inline">\(z\)</span>,<span class="math inline">\(f_m(z)\)</span>不会发散; 同时, <spanclass="math inline">\(f_m(z)\)</span>也没有上界(证明从略), 这样,对于如下粒子数自洽条件 <span class="math display">\[N=(2s+1)V\left(\frac{2\pi mk_BT}{h^2}\right)^{3/2}f_{3/2}(z)\]</span> 任意温度<spanclass="math inline">\(T\)</span>总能有对应的唯一解<spanclass="math inline">\(z\)</span>, 即不会产生类似 B-E 凝聚的现象; 同时,若温度取遍所有正实数, 则<spanclass="math inline">\(z\)</span>也取遍所有正实数.</p><p>对于弱简并体系而言, 可以取高温近似, 则相应地<spanclass="math inline">\(z\ll1\)</span>, 可以考虑围绕<spanclass="math inline">\(z=0\)</span>作幂级数展开. 在积分式中, <spanclass="math inline">\(z^{-1}e^x&gt;1\)</span>在<spanclass="math inline">\(z&lt;1\)</span>时恒成立,可以对分式展开然后逐项积分, 得到 <span class="math display">\[\begin{aligned}f_m(z)&amp;=\frac{z^1}{1^m}-\frac{z^2}{2^m}+\frac{z^3}{3^m}-\cdots\\&amp;=\sum_{j=1}^{+\infty}\frac{(-1)^{j+1}}{j^m}z^j\end{aligned}\]</span> 这是 Fermi 函数的弱简并展开. 这样, 就有<spanclass="math inline">\(N\)</span>和<spanclass="math inline">\(p\)</span>随<spanclass="math inline">\(z\)</span>的变化关系, 可以反解出<spanclass="math inline">\(z\)</span>和<spanclass="math inline">\(N/V\)</span>的关系并代入<spanclass="math inline">\(p\)</span>. 为了方便, 可以引入新变量 <spanclass="math display">\[y:=\frac{N\lambda_T^3}{(2s+1)V}\]</span> 然后对粒子数自洽条件的 Fermi 函数保留一定数目的项, 比如到三阶:<span class="math display">\[y=z-\frac{z^2}{2^{3/2}}+\frac{z^3}{3^{3/2}}\]</span> 用待定系数法可以反设出<spanclass="math inline">\(z\)</span>关于<spanclass="math inline">\(y\)</span>的形式, 然后代入并略去高阶项, 抵消<spanclass="math inline">\(1\sim3\)</span>阶项的系数, 得到 <spanclass="math display">\[z=y +\frac{\sqrt{2}}{4}y^2+\left(\frac{1}{4}-\frac{\sqrt{3}}{9}\right)y^3\]</span> 代入<span class="math inline">\(p\)</span>, 得到<spanclass="math inline">\(p-y\)</span>关系 <span class="math display">\[\frac{pV}{Nk_BT}=1+\frac{1}{2^{5/2}}y-\left(\frac{2}{3^{5/2}}−\frac{1}{8}\right)y^2+\left(\frac{3}{32}+\frac{5}{2^{11/2}}+\frac{3}{6^{3/2}}\right)y^3\]</span> 第一项是弱简并极限(经典极限), 第二项是量子效应的领头阶, Fermi气体的量子修正等效为斥力, 这可以很好地被理解为 Pauli不相容原理的效应.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Fermi 气体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(04)：固体热容</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(04)%EF%BC%9A%E5%9B%BA%E4%BD%93%E7%83%AD%E5%AE%B9/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(04)%EF%BC%9A%E5%9B%BA%E4%BD%93%E7%83%AD%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>在经典的Boltzmann 统计理论中, 一个重要的结果就是能均分定理.这个定理应用于固体热容量, 就得到了著名的 Dulong-Petit 定律:固体中若干原胞有<span class="math inline">\(N\)</span>个原子, 对应<spanclass="math inline">\(3N\)</span>个自由度, 每个振动自由度贡献能量<spanclass="math inline">\(k_BT\)</span>, 因此固体热容不随温度变化 <spanclass="math display">\[C_V=3Nk_B\]</span> 实际固体的热容在高温时都较好地满足这个定律, 但在低温时,所有固体几乎都不满足这个定律, 造成定律破坏的主要原因就是量子效应.</p><h2 id="einstein-的固体热容理论">Einstein 的固体热容理论</h2><p>Einstein 假设固体具有<spanclass="math inline">\(3N\)</span>个独立的振动简正模式, 并且频率都相等;晶格中的各个原子都是可分辨的. 因此可以使用正则配分函数计算.对于每个近独立子系, 有 <span class="math display">\[\begin{aligned}z&amp;=\sum_{n=0}^{+\infty}\exp\left[-\left(n+\frac{1}{2}\right)\beta\hbar\omega\right]\\&amp;=\left[2\sinh\frac{\beta\hbar\omega}{2} \right]^{-1}\end{aligned}\]</span> 求得内能 <span class="math display">\[\begin{aligned}U&amp;=-3N\frac{\partial\logz}{\partial\beta}=\frac{3N\hbar\omega}{2}\coth\frac{\beta\hbar\omega}{2}\\C_V&amp;=\frac{\partial U}{\partialT}=3Nk_B\left(\frac{\frac{\hbar\omega}{2k_BT}}{\sinh\frac{\hbar\omega}{2k_BT}}\right)^2\end{aligned}\]</span> 此即 Einstein 热容公式. 高温极限(<spanclass="math inline">\(T\rightarrow+\infty\)</span>), 回到了 Dulong-Petit定律.</p><p>低温极限下, <spanclass="math inline">\(\sinh\hbar\omega/2k_BT\approx\frac{1}{2}\exp(\hbar\omega/2k_BT)\)</span>,得到 <span class="math display">\[C_V\approx3Nk_B\left(\frac{\hbar\omega}{k_BT}\right)^2\exp\left(-\frac{\hbar\omega}{k_BT}\right)\]</span> 这个低温热容会衰减得很快,实际固体的热容并不会指数地衰减下去.</p><h2 id="debye-的固体热容理论">Debye 的固体热容理论</h2><p>Einstein 理论的主要问题在于忽略了简正频率的分布.固体晶格振动对应的准粒子是声子, 固体中的声子可以分为两类:有两个独立偏振态的横波声子, 以及无偏振现象的纵波声子,它们与光子的部分特性很像,因此也可以把声子气体处理为零化学势、不存在凝聚和零能基态的理想 Bose气体.</p><p>总而言之, 对于单个偏振态, 态密度为 <span class="math display">\[G(\omega)=\frac{V}{2\pi^2c^3}\omega^2\]</span> 其中<span class="math inline">\(c\)</span>是波速,考虑横波的两个偏振和纵波的一个偏振, 给出 <span class="math display">\[G(\omega)=\frac{V}{\pi^2}(\frac{1}{2c_l^3}+\frac{1}{c_t^3})\omega^2\]</span></p><h3 id="debye-截止频率">Debye 截止频率</h3><p>如果把上述态密度积分, 得到的全频带状态数是发散的.这个问题在黑体辐射中不算什么,没有任何物理限制认为电磁波振动自由度应当为多少. 但是在声子气中,简正模式数理应是<spanclass="math inline">\(3N\)</span><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="固体物理教材对此应有论述, 这个状态数包括光学支和声学支">[1]</span></a></sup>个,为此, 必须限制频率的取值.</p><p>可以考虑一维晶格的 Brillouin 区, 对于长度<spanclass="math inline">\(L=Na\)</span>的晶格, 波矢的取值为 <spanclass="math display">\[k=\frac{2s\pi}{L}\ , \ s=-\frac{N}{2},-\frac{N}{2}+1,\cdots,\frac{N}{2}-1\]</span> 如果只考虑第一 Brillouin 区, 那么频率就被限制在了<spanclass="math inline">\(0\sim\pi c/a\)</span>的区域内, 因此, 对于三维晶格,可以仿照这个条件进行限制 <span class="math display">\[\int_0^{\omega_D}G(\omega)d\omega=3N\]</span> 其中, <span class="math inline">\(\omega_D\)</span>被称作<strong>Debye 截止频率</strong>. 在 Brillouin 区边界处,边界效应可能导致态密度偏离前面导出的形式, 但这里为了简便,直接理解为截断. 这样就可以利用<spanclass="math inline">\(\omega_D\)</span>简化态密度谱 <spanclass="math display">\[G(\omega)=9N\frac{\omega^2}{\omega_D^3}\]</span> 于是, 全频带能量为 <span class="math display">\[U=U_0+\int_0^{\omega_D}\frac{9N\hbar\omega^3}{\omega_D^3}\cdot\frac{d\omega}{\exp(\beta\hbar\omega)-1}\]</span> 引入变量<spanclass="math inline">\(x=\beta\hbar\omega\)</span>, 对应的 Debye变量为<span class="math inline">\(x_D=\beta\hbar\omega_D\)</span>,内能被充分简化为 <span class="math display">\[U=U_0+\frac{9Nk_BT}{x_D^3}\int_0^{x_D}\frac{x^3dx}{e^x-1}\]</span> 高温极限下, <spanclass="math inline">\(x_D\rightarrow0\)</span>, 积分核近似为<spanclass="math inline">\(x^2\)</span>, 给出 <span class="math display">\[U\approx U_0+\frac{9Nk_BT}{x_D^3}\cdot\frac{x_D^3}{3}\]</span> 整理后, 热容为<span class="math inline">\(3Nk_B\)</span>, 和Dulong-Petit 定律一致.</p><p>低温极限下, <spanclass="math inline">\(x_D\rightarrow+\infty\)</span>, 积分值近似为<spanclass="math inline">\(\Gamma(4)\zeta(4)\)</span>, 即 <spanclass="math display">\[\begin{aligned}U&amp;\approx U_0 +\frac{9N(k_BT)^4}{\hbar^3\omega_D^3}\cdot\frac{\pi^4}{15}\\&amp;=U_0+\frac{3\pi^4}{5}N\hbar\omega_D\left(\frac{k_BT}{\hbar\omega_D}\right)^4\end{aligned}\]</span> 热容为 <span class="math display">\[C_V\approx\frac{12\pi^4}{5}Nk_B\cdot\left(\frac{k_BT}{\hbar\omega_D}\right)^3\]</span> 即固体热容在低温下近似服从的规律为<spanclass="math inline">\(C_V\sim T^3\)</span>. 这个规律和很多实际固体,特别是非金属非磁性的材料, 符合得相当好.对于非磁性的金属材料而言(后面将会涉及), 其中具有大量的巡游电子,电子贡献的热容为<span class="math inline">\(C_V\sim T\)</span>,在极低温下占主导.还有一些其它的材料会因为不同的效应出现其它的规律<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="例如, 一些绝缘的磁性材料中会产生自旋波, 极低温下的热容对温度的幂指数为3/2">[2]</span></a></sup>,此处不再详细推导.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>固体物理教材对此应有论述,这个状态数包括光学支和声学支<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>例如,一些绝缘的磁性材料中会产生自旋波, 极低温下的热容对温度的幂指数为3/2<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Bose 气体</tag>
      
      <tag>固体热容</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(03)：黑体辐射</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(03)%EF%BC%9A%E9%BB%91%E4%BD%93%E8%BE%90%E5%B0%84/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(03)%EF%BC%9A%E9%BB%91%E4%BD%93%E8%BE%90%E5%B0%84/</url>
    
    <content type="html"><![CDATA[<h2id="newcommandkmathbbknewcommandrmathbbrnewcommandcmathbbcnewcommandbmathbfnewcommandbiboldsymbolnewcommandrank1textrankleft1-rightnewcommanddim1textdimleft1-rightnewcommanddiag1textdiagleft1-rightnewcommanddet1textdetleft1-rightnewcommanddet1leftbeginmatrix-1-endmatrixrightnewcommandset1left-1-rightnewcommandabs1left-1-rightnewcommandnorm1leftleft1rightright系综理论求解"><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>系综理论求解</h2><p>考虑一个封闭的恒温空窖, 空窖内有辐射电磁场与空窖的壁达成平衡,称为黑体辐射系统, 实际上就是光子气系统. 只用热力学也能得到很多性质,包括所有热力学量之间的依赖, 但是系数因子无法确定.统计物理能够同时确认两者.</p><p>从光子气的角度出发, 只要知道光子的性质就能进行统计处理.</p><ol type="1"><li>光子是 spin-1 boson;</li><li>光子具有极端相对论形式的色散关系;</li></ol><ul><li><strong>腔壁在不停地吸收和发射光子, 因此光子气的粒子数不守恒,这种不守恒导致<span class="math inline">\(\mu=0\)</span></strong>;</li><li><strong>由于规范对称性, 光子自旋投影只能取<spanclass="math inline">\(\pm1\)</span>, 无法取<spanclass="math inline">\(0\)</span></strong>.</li></ul><p>由此, 可以对一般的巨配分函数形式进行简化: <spanclass="math display">\[\begin{aligned}\log\Xi&amp;=-\log(1-e^{-\alpha})\eta(n-\nu)+\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}V}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu+1}(z)\\&amp;\Downarrow \alpha\approx0,n=3,\nu=1\\&amp;=-\log(1-e^{-\alpha})+\frac{\Gamma(4)V}{\Gamma(5/2)(2\sqrt{\pi}\hbarc\beta)^3}\zeta(4)\end{aligned}\]</span> 第一项表示零能, 对于光子气可以直接舍去, 反正它没有变化,而且还会发散. 考虑自旋自由度为<span class="math inline">\(2\)</span>,得到 <span class="math display">\[\log\Xi=\frac{8\pi^5 V}{45}\left(\frac{k_BT}{hc}\right)^{3}\]</span> 可以计算内能 <span class="math display">\[U=k_BT^2\frac{\partial\log\Xi}{\partialT}=\frac{8\pi^5k_B^4}{15h^3c^3}T^4V\]</span> 相应地, 能流密度为 <span class="math display">\[J=\frac{c}{4}\frac{U}{V}=\frac{2\pi^5k_B^4}{15h^3c^2} T^4\]</span> 正是 Stefan-Boltzmann 公式. 压强和熵为 <spanclass="math display">\[\begin{aligned}p &amp;= \frac{k_BT}{V}\log\Xi=\frac{4\sigma}{3c}T^4\\S&amp;=k_BT(\log\Xi+\beta U)=\frac{16\sigma}{3c}T^4V\end{aligned}\]</span></p><h2 id="分布求解">分布求解</h2><p>根据 Bose 分布同样可以计算热力学量. 假设单位频率里存在的状态数为<spanclass="math inline">\(G(\omega)\)</span>, 则对应的实际粒子数为 <spanclass="math display">\[N(\omega) = \frac{G(\omega)}{\exp(\beta\hbar\omega)-1}\]</span> 其中简并度可以通过<spanclass="math inline">\(k\)</span>空间计算. 不失一般性,考虑位形空间为<spanclass="math inline">\(L^3\)</span>立方体<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="结果应当是与具体形状无关的, 选用方形箱模型有利于计算">[1]</span></a></sup>,则 <span class="math display">\[k_{x,y,z}=\frac{2\pi n_{x,y,z}}{L}\ ,\ n_{x,y,z}\in\mathbb{Z}\]</span> 即<spanclass="math inline">\(k\)</span>空间的态密度(略去自旋)是均匀的, 为 <spanclass="math display">\[\bar{G}=\frac{V}{(2\pi)^3}\]</span> 因此可以求出用频率表示的态密度 <span class="math display">\[\begin{aligned}G(\omega)d\omega&amp;=2\bar{G}\cdot 4\pi k^2dk\\&amp;\Downarrow\\G(\omega)&amp;=\frac{8\pi\bar{G}}{c^3}\omega^2\end{aligned}\]</span> 对于实际粒子数分布, 改用<spanclass="math inline">\(x=\beta\hbar\omega\)</span>来衡量, 得到 <spanclass="math display">\[\begin{aligned}N(x)&amp;=\frac{8\pi\bar{G}}{\beta\hbar c^3}\omega^2\cdot\frac{1}{e^x-1}\\&amp;=\frac{8\pi V}{(\beta hc)^3}\cdot\frac{x^2}{e^x-1}\end{aligned}\]</span> 这种分布(或者其频率表示形式)对应的能量密度分布, 通常称为Planck 公式, 它是由 Planck 最早通过插值法凑出来的. 全频带的能量密度为<span class="math display">\[u=\frac{8\pi k_BT}{(\beta hc)^3}\int_0^{+\infty}\frac{x^3dx}{e^x-1}\]</span> 积分项恰好是<spanclass="math inline">\(\Gamma(4)\zeta(4)\)</span>, 具体计算表明,它和系综解一致.</p><h3 id="短波近似-wien-公式">短波近似, Wien 公式</h3><p>令<span class="math inline">\(x\rightarrow+\infty\)</span>, 能谱为<span class="math display">\[u(x)\approx\frac{8\pi k_BT}{(\beta hc)^3}x^3e^{-x}\]</span> 此即 Wien 公式, 它等价于把光子气看成 Boltzmann分布下的粒子.</p><h3 id="长波近似-rayleigh-jeans-公式">长波近似, Rayleigh-Jeans 公式</h3><p>令<span class="math inline">\(x\rightarrow0\)</span>, 能谱为 <spanclass="math display">\[u(x)\approx\frac{8\pi k_BT}{(\beta hc)^3}x^2\]</span> 此即 Rayleigh-Jeans公式<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="Jeans 的主要贡献是引入了被 Rayleigh 忽略的电磁波的偏振(自旋)自由度.">[2]</span></a></sup>.它等价于把光子气看成经典的电磁波并运用能均分定理.它在短波区符合得非常差, 并且全频带积分发散, 史称"紫外灾难".</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>结果应当是与具体形状无关的,选用方形箱模型有利于计算<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>Jeans 的主要贡献是引入了被Rayleigh 忽略的电磁波的偏振(自旋)自由度.<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Bose 气体</tag>
      
      <tag>黑体辐射</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(02)：强简并和 Bose-Einstein 凝聚</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(02)%EF%BC%9A%E5%BC%BA%E7%AE%80%E5%B9%B6%E5%92%8C%20Bose-Einstein%20%E5%87%9D%E8%81%9A/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(02)%EF%BC%9A%E5%BC%BA%E7%AE%80%E5%B9%B6%E5%92%8C%20Bose-Einstein%20%E5%87%9D%E8%81%9A/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>将上节公式抄录如下<span class="math display">\[\log\Xi=-\log(1-e^{-\alpha})\eta(n-\nu)+\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}V}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu+1}(z)\]</span></p><p><span class="math display">\[N=\frac{z}{1-z}\eta(n-\nu)+\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}V}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu}(z)\]</span></p><p><span class="math display">\[p=\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}k_BT}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu+1}(z)\]</span></p><p>本节我们主要考虑具有经典动能的体系, 即<spanclass="math inline">\(\nu=2,A_\nu=\frac{\hbar^2}{2m}\)</span>. 代入可得<span class="math display">\[\begin{aligned}\log\Xi&amp;=-\log(1-e^{-\alpha})\eta(n-2)+\frac{V}{\lambda_T^n}g_{n/2+1}(z)\\N&amp;=\frac{z}{1-z}\eta(n-2)+\frac{V}{\lambda_T^n}g_{n/2}(z)\\p&amp;=\frac{k_BT}{\lambda_T^n}g_{n/2+1}(z)\end{aligned}\]</span> 上节表明, <span class="math inline">\(z\in(0,1]\)</span>,趋于<span class="math inline">\(0\)</span>是弱简并区域.当温度慢慢下降时, 为了保证<span class="math inline">\(N\)</span>守恒,<span class="math inline">\(z\)</span>会逐渐增大. 直到零温下, <spanclass="math inline">\(z=1-N^{-1}\)</span>, 相当接近<spanclass="math inline">\(1\)</span>, 此时弱简并条件明显失效.</p><h2 id="nle2的情形"><spanclass="math inline">\(n\le2\)</span>的情形</h2><p><span class="math inline">\(n\le 2\)</span>时, 阶跃函数取<spanclass="math inline">\(0\)</span>, 因此 <span class="math display">\[N=\frac{V}{\lambda_T^n}g_{n/2}(z)\]</span> 当<span class="math inline">\(z\rightarrow 1^-\)</span>时,<spanclass="math inline">\(g_{n/2}(z)\rightarrow\zeta(\frac{n}{2})\)</span>,又<span class="math inline">\(n/2\le1\)</span>, 因此发散. 故<spanclass="math inline">\(g_{n/2}(z)\)</span>在<spanclass="math inline">\((0,1)\)</span>上能取遍正实数,粒子数自洽条件总能得到满足, 任何时候都不需要考虑基态,这与上一节的分析一致(只有<spanclass="math inline">\(n&gt;\nu\)</span>才需单独写出基态项).</p><h2 id="n3的情形"><span class="math inline">\(n=3\)</span>的情形</h2><p>此时阶跃函数取<span class="math inline">\(1\)</span>, 从而 <spanclass="math display">\[N=\frac{z}{1-z}+\frac{V}{\lambda^3_T}g_{3/2}(z)\]</span> 随着温度降低, <span class="math inline">\(z\)</span>缓慢增大,但第二项<span class="math inline">\(g_{3/2}(z)\)</span>必定不超过<spanclass="math inline">\(\zeta(\frac{3}{2})\approx2.61238\)</span>,单凭第二项无法满足粒子数的自洽条件, 这时候第一项就是必要的.</p><p>最终<span class="math inline">\(z\)</span>必然是取到<spanclass="math inline">\(1^-\)</span>的, <spanclass="math inline">\(g_{3/2}(z)\approx\zeta(\frac{3}{2})\)</span>, 因此<span class="math display">\[N_{\epsilon&gt;0}=\frac{V\zeta(\frac{3}{2})}{\lambda_T^3}=N(\frac{T}{T_c})^{\frac{3}{2}}\]</span> 其中, <span class="math inline">\(T_c\)</span>满足<spanclass="math inline">\(n\lambda_{T_c}^3=\zeta(\frac{3}{2})\)</span>,注意这里<span class="math inline">\(n\)</span>为粒子数密度. 相应地 <spanclass="math display">\[N_{\epsilon=0}=\frac{z}{1-z}=N\left[1-\left(\frac{T}{T_c}\right)^\frac{3}{2}\right]\]</span> 可见, <span class="math inline">\(T&gt;T_c\)</span>时,略去基态项是完全合理的, 只有<spanclass="math inline">\(T&lt;T_c\)</span>时, 基态粒子数才能和<spanclass="math inline">\(N\)</span>相比拟. 当<spanclass="math inline">\(T=0\)</span>时, 所有粒子在动量空间都处于基态,这种<strong>动量空间</strong>的凝聚现象, 称作 <strong>Bose-Einstein凝聚(B-E凝聚, BEC)</strong>. 总结下来, 只有<spanclass="math inline">\(n&gt;\nu\)</span>且<spanclass="math inline">\(T&lt;T_c\)</span>的 Bose 气体, 需要特地考虑基态项,并且系统出现 B-E 凝聚, 其它条件下都不会有凝聚发生.</p><h2 id="内能与热容">内能与热容</h2><p>可以基于巨配分函数计算能量 <span class="math display">\[U=-\frac{\partial\log\Xi}{\partial\beta}=-\frac{\partial}{\partial\beta}\frac{V}{\lambda_T^3}g_{5/2}(z)\]</span> 其中仅有<spanclass="math inline">\(\lambda_T\propto\beta^\frac{1}{2}\)</span>, 得到<span class="math display">\[U=\frac{3}{2}k_BT\frac{V}{\lambda_T^3}g_{5/2}(z)\]</span> 显然, 它在相变点<spanclass="math inline">\(T_c\)</span>是连续的.</p><h3 id="凝聚相热容">凝聚相热容</h3><p>热容就需要分开计算了. <spanclass="math inline">\(T&lt;T_c\)</span>是容易计算的, 因为可以直接取<span class="math display">\[U=\frac{3}{2}k_BT\frac{V}{\lambda_T^3}\zeta(\frac{5}{2})\]</span> 因此热容为 <span class="math display">\[C_V=\left(\frac{\partial U}{\partialT}\right)_V=\frac{15}{4}k_B\frac{V}{\lambda_T^3}\zeta(\frac{5}{2})\]</span> 或者把<span class="math inline">\(N\)</span>和<spanclass="math inline">\(T_c\)</span>代入, 得到 <spanclass="math display">\[C_V=\frac{15}{4}\frac{\zeta(\frac{5}{2})}{\zeta(\frac{3}{2})}Nk_B\left(\frac{T}{T_c}\right)^\frac{3}{2}\]</span></p><h3 id="正常相热容">正常相热容</h3><p>正常相热容, 求导时还要考虑到<spanclass="math inline">\(z\)</span>的变化. <span class="math display">\[C_V=\left(\frac{\partial U}{\partialT}\right)_V=\frac{15}{4}k_B\frac{V}{\lambda_T^3}g_{5/2}(z)+\frac{3}{2}k_BT\frac{V}{\lambda_T^3}\frac{g_{3/2}(z)}{z}\frac{\partialz}{\partial T}\]</span> <spanclass="math inline">\(z\)</span>对温度的偏导数可以通过粒子数自洽条件求解:<span class="math display">\[N=\frac{V}{\lambda_T^3}g_{3/2}(z)\Rightarrow\frac{g_{1/2}(z)}{z}\frac{\partial z}{\partialT}=-\frac{3}{2}\frac{N\lambda_T^3}{VT}\]</span> 消去<span class="math inline">\(V\)</span>和<spanclass="math inline">\(\partial z\)</span>项, 得到 <spanclass="math display">\[C_V=\frac{15}{4}Nk_B\frac{g_{5/2}(z)}{g_{3/2}(z)}-\frac{9}{4}Nk_B\frac{g_{3/2}(z)}{g_{1/2}(z)}\]</span></p><h3 id="相变类型">相变类型</h3><p>对于<span class="math inline">\(C_V(T&gt;T_c)\)</span>取<spanclass="math inline">\(T\rightarrow T_c^+, z\rightarrow1^-\)</span>极限,考虑到<span class="math inline">\(1/g_{1/2}(z)\)</span>为<spanclass="math inline">\(0\)</span>, 得到 <span class="math display">\[C_V=\frac{15}{4}\frac{\zeta(\frac{5}{2})}{\zeta(\frac{3}{2})}Nk_B\]</span> 和<span class="math inline">\(T&lt;T_c\)</span>结果一致,说明热容量仍然是连续的. 所以这个相变至少是三级相变. 事实上,它的确是三级相变, 热容量导数的非连续性证明从略.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Bose 气体</tag>
      
      <tag>Bose-Einstein 凝聚</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>量子理想气体(01)：Bose 气体和弱简并</title>
    <link href="/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(01)%EF%BC%9ABose%20%E6%B0%94%E4%BD%93%E5%92%8C%E5%BC%B1%E7%AE%80%E5%B9%B6/"/>
    <url>/posts/%E9%87%8F%E5%AD%90%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93(01)%EF%BC%9ABose%20%E6%B0%94%E4%BD%93%E5%92%8C%E5%BC%B1%E7%AE%80%E5%B9%B6/</url>
    
    <content type="html"><![CDATA[<h2id="求解巨配分函数对数newcommandkmathbbknewcommandrmathbbrnewcommandcmathbbcnewcommandbmathbfnewcommandbiboldsymbolnewcommandrank1textrankleft1-rightnewcommanddim1textdimleft1-rightnewcommanddiag1textdiagleft1-rightnewcommanddet1textdetleft1-rightnewcommanddet1leftbeginmatrix-1-endmatrixrightnewcommandset1left-1-rightnewcommandabs1left-1-rightnewcommandnorm1leftleft1rightright">求解巨配分函数对数<spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span></h2><p>这一节中我们利用 Bose 分布来讨论一般的理想 Bose 气体,随后计算弱简并情形. 不失一般性, 只考虑 spinless boson, 因为无外场时,近独立自旋只会在简并度中引入常系数因子. 在这样的前提下, 巨配分函数为<span class="math display">\[\Xi(T,V,\mu)=\prod_{s}(1-e^{-\alpha-\beta\epsilon_s})^{-1}\]</span> 一般来讲, 色散关系的形式为 power law <spanclass="math display">\[\epsilon(k)=A_\nu\abs{k}^\nu\]</span> 并且是连续或准连续的能带, 这样就能将求和近似替代为积分. 即<span class="math display">\[\sum_s\rightarrow\int\frac{Vd^n\vec{p}}{h^n}=\int\frac{2\pi^{\frac{n}{2}}V}{\Gamma(\frac{n}{2})h^n}p^{n-1}dp=\int\frac{(n/\nu)VA_\nu^{-n/\nu}}{\Gamma(\frac{n}{2}+1)(2\sqrt{\pi})^n}\epsilon^{n/\nu-1}d\epsilon\]</span> 其中<span class="math inline">\(n\)</span>是系统的几何维数,第一个等号表示动量空间的角坐标积分完毕, 第二个等号代入了色散关系.</p><p>然而, 并不能简单地直接替换, 原因是一旦<spanclass="math inline">\(n&gt;\nu\)</span>, 积分便会筛去零能. 如果<spanclass="math inline">\(\epsilon=0\)</span>上粒子数很少或者在准连续分布的意义下为<spanclass="math inline">\(0\)</span>, 那筛去零能是无所谓的; 反之,如果基态粒子数和总粒子数能够比拟, 略去基态项是不正确的.我们事先并不知道是哪种情况, 先予以保留, 得到 <spanclass="math display">\[\log\Xi=-\log(1-e^{-\alpha})\eta(n-\nu)-\frac{(n/\nu)VA_\nu^{-n/\nu}}{\Gamma(\frac{n}{2}+1)(2\sqrt{\pi})^n}\int_0^{+\infty}\log(1-e^{-\alpha-\beta\epsilon})\epsilon^{n/\nu-1}d\epsilon\]</span></p><p>其中, <span class="math inline">\(\eta\)</span>是 Heaviside 阶跃函数,对于正自变量取<span class="math inline">\(1\)</span>, 其余取<spanclass="math inline">\(0\)</span>.</p><h3 id="bose-函数">Bose 函数</h3><p>下面重点研究积分项. 引入活度<spanclass="math inline">\(z=e^{-\alpha}\)</span>, 无量纲能量<spanclass="math inline">\(x=\beta\epsilon\)</span>. 有 <spanclass="math display">\[Integral=\beta^{-n/\nu}\int_0^{+\infty}\log(1-ze^{-x})x^{n/\nu-1}dx\]</span> 如果不喜欢处理对数函数, 可以利用分部积分消去之, 给出 <spanclass="math display">\[\beta^{n/\nu}Integral=\frac{\nu}{n}\log(1-ze^{-x})x^{n/\nu}\Bigg|_0^{+\infty}-\frac{\nu}{n}\int_0^{+\infty}\frac{x^{n/\nu}dx}{z^{-1}e^x-1}\]</span> 第一项, <span class="math inline">\(x=0\)</span>时自然为<spanclass="math inline">\(0\)</span>; <spanclass="math inline">\(x\gg1\)</span>时, 近似为<spanclass="math inline">\(x^{n/\nu}e^{-x}\)</span>, 也收敛到<spanclass="math inline">\(0\)</span>.</p><p>对于第二项, 引入所谓的 Bose 函数 <span class="math display">\[g_m(z):=\frac{1}{\Gamma(m)}\int_0^{+\infty}\frac{x^{m-1}dx}{z^{-1}e^x-1}\]</span> 则积分重写为 <span class="math display">\[Integral =-\frac{\nu\Gamma(\frac{n}{\nu}+1)}{n}\beta^{-n/\nu}g_{n/\nu+1}(z)\]</span> 很显然, <span class="math inline">\(g_m(1)=\zeta(m)\)</span>,给出 Riemann Zeta 函数; 另外, 它还具有如下性质 <spanclass="math display">\[\begin{aligned}g_{m+1}&#39;(z)&amp;=\int_0^{+\infty}\frac{x^{m}e^xdx}{z^2\Gamma(m+1)(z^{-1}e^x-1)^2}\\&amp;=\int_0^{+\infty}\frac{x^{m}z^{-1}d(z^{-1}e^x-1)}{\Gamma(m+1)(z^{-1}e^x-1)^2}\\&amp;=-\frac{z^{-1}x^m}{\Gamma(m+1)(z^{-1}e^x-1)}\Bigg|_0^{+\infty}+\frac{1}{\Gamma(m+1)}\int_0^{+\infty}\frac{z^{-1}d(x^m)}{z^{-1}e^x-1}\end{aligned}\]</span> 第一项仍为<span class="math inline">\(0\)</span>,第二项是<span class="math inline">\(z^{-1}g_m(z)\)</span>, 因此 <spanclass="math display">\[g&#39;_{m+1}(z)=z^{-1}g_m(z)\]</span></p><h3 id="热力学函数">热力学函数</h3><p>回到巨配分函数对数, 用 Bose 函数可以重写为 <spanclass="math display">\[\begin{aligned}\log\Xi&amp;=-\log(1-e^{-\alpha})\eta(n-\nu)+\frac{(n/\nu)VA_\nu^{-n/\nu}}{\Gamma(\frac{n}{2}+1)(2\sqrt{\pi})^n}\frac{\nu\Gamma(\frac{n}{\nu}+1)}{n}\beta^{-n/\nu}g_{n/\nu+1}(z)\\&amp;=-\log(1-e^{-\alpha})\eta(n-\nu)+\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}V}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu+1}(z)\end{aligned}\]</span> 给出 <span class="math display">\[N=-\frac{\partial\log\Xi}{\partial\alpha}=\frac{z}{1-z}\eta(n-\nu)+\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}V}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu}(z)\]</span></p><p><span class="math display">\[p=k_BT\frac{\partial\log\Xi}{\partial V}=\frac{\Gamma(n/\nu+1)(\betaA_\nu)^{-n/\nu}k_BT}{\Gamma(n/2+1)(2\sqrt{\pi})^n}g_{n/\nu+1}(z)\]</span></p><p>首先看<span class="math inline">\(N\)</span>. 对于第二项, <spanclass="math inline">\(g_{n/\nu}(z)\)</span>在<spanclass="math inline">\(z&gt;1\)</span>时, 定义中的积分具有瑕点<spanclass="math inline">\(x=\log z\)</span>, 并且会让瑕积分发散, 因此<spanclass="math inline">\(z\)</span>总取<span class="math inline">\((0,1]\)</span>上的实数.</p><p>所谓弱简并情形, 就是指热波长远小于系统尺寸(温度远大于特定值),并且在无限高温下, Bose 气体预期上和经典理想气体完全一致, 即<spanclass="math inline">\(\mu\rightarrow-\infty\)</span>, <spanclass="math inline">\(z=e^{\beta\mu}\rightarrow0^+\)</span>. 因此,弱简并下, <span class="math inline">\(z\)</span>应该会取一小量, 即<spanclass="math inline">\(z\ll1\)</span>. <span class="math display">\[\begin{aligned}\frac{z}{1-z}\approx g_m(z)\approx z\quad(z\ll 1)\\(\beta A_\nu)^{-n/\nu}V\gg1\quad(T\gg T_c)\end{aligned}\]</span> 这样, 我们总可以略去<spanclass="math inline">\(N\)</span>的第一项(特别注意到它不是广延的),最终给出状态方程 <span class="math display">\[\frac{pV}{Nk_BT}=\frac{g_{n/\nu+1}(z)}{g_{n/\nu}(z)}\]</span> 其中, 活度可以通过<spanclass="math inline">\(N\)</span>反解得到, 总之右侧的最低阶为<spanclass="math inline">\(1\)</span>, 正是经典理想气体.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>量子理想气体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理想 Bose 气体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典流体(03)：位力展开和位力系数</title>
    <link href="/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(03)%EF%BC%9A%E4%BD%8D%E5%8A%9B%E5%B1%95%E5%BC%80%E5%92%8C%E4%BD%8D%E5%8A%9B%E7%B3%BB%E6%95%B0/"/>
    <url>/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(03)%EF%BC%9A%E4%BD%8D%E5%8A%9B%E5%B1%95%E5%BC%80%E5%92%8C%E4%BD%8D%E5%8A%9B%E7%B3%BB%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="回顾">回顾</h2><p>上节已经定义了<span class="math inline">\(l\)</span>-集团的集团积分<span class="math display">\[b_l:=\frac{1}{V}\int\prod_{i=1}^ld^3\vec{r}_i\sum_{c\in C_l}\prod_{p\inc}f_{p}\]</span> 以及位形积分 <span class="math display">\[Q_N=\sum_{\{m_l\}}&#39;\prod_l\frac{1}{m_l!}\left(\frac{Vb_l}{l!}\right)^{m_l}\]</span> 那么巨配分函数为 <span class="math display">\[\begin{aligned}\Xi&amp;=\sum_N\left(\frac{e^{-\alpha}}{\lambda_T^3}\right)^NQ_N\\&amp;=\sum_N\left(\frac{e^{-\alpha}}{\lambda_T^3}\right)^N\sum_{\{m_l\}}&#39;\prod_l\frac{1}{m_l!}\left(\frac{Vb_l}{l!}\right)^{m_l}\end{aligned}\]</span> 这里需要运用之前提及的技巧. 对所有满足<spanclass="math inline">\(\sum_lm_ll=N\)</span>的<spanclass="math inline">\(\{m_l\}\)</span>求和, 再对<spanclass="math inline">\(N\)</span>求和, 等价于对所有独立的<spanclass="math inline">\(m_l\)</span>在自然数上求和. 即 <spanclass="math display">\[\Xi=\sum_{\{m_l\}}\prod_l\frac{1}{m_l!}\left(\frac{e^{-\alphal}Vb_l}{l!\lambda^{3l}_T}\right)^{m_l}\]</span> 由于各个<span class="math inline">\(m_l\)</span>独立,类似重积分化为累次积分, 可以拆成各个累次求和再连乘: <spanclass="math display">\[\begin{aligned}\Xi&amp;=\prod_l\sum_{m_l=0}^{+\infty}\frac{1}{m_l!}\left(\frac{e^{-\alphal}Vb_l}{l!\lambda^{3l}_T}\right)^{m_l}\\&amp;=\prod_l\exp(\frac{e^{-\alpha l}Vb_l}{l!\lambda_T^{3l}})\end{aligned}\]</span> 根据巨势的定义, 立即得到 <span class="math display">\[pV=k_BT\sum_l\frac{e^{-\alpha l}Vb_l}{l!\lambda_T^{3l}}\]</span> 根据平均粒子数的定义, 立即得到 <span class="math display">\[N=\sum_l\frac{le^{-\alpha l}Vb_l}{l!\lambda_T^{3l}}\]</span> 引入<spanclass="math inline">\(x=\exp(-\alpha)/\lambda_T^3\)</span>, 有</p><blockquote><p>集团展开求状态方程的方法 <span class="math display">\[  p=k_BT\left(x+\sum_{l=2}\frac{b_l}{l!}x^l \right)  \]</span></p><p><span class="math display">\[  n=x+\sum_{l=2}\frac{b_l}{(l-1)!}x^l  \]</span></p></blockquote><p>其中, 求和的上限实际上是<span class="math inline">\(N\)</span>,但是对于热力学极限直接取作<spanclass="math inline">\(+\infty\)</span>即可.</p><h2 id="位力系数">位力系数</h2><p>上述方程组的求解可以用如下示例. 例如, 设 <spanclass="math display">\[x=n+a_2n^2+a_3n^3\]</span> 代入<span class="math inline">\(n(x)\)</span>中, 得到 <spanclass="math display">\[n=n+(a_2+b_2)n^2+(a_3+2a_2b_2+\frac{b_3}{2})n^3+o(n^3)\]</span> 考虑低阶项左右一致, 得到 <span class="math display">\[a_2=-b_2, a_3=2b_2^2-\frac{b_3}{2}\]</span> 再把已经解得系数的<spanclass="math inline">\(x(n)\)</span>代回到状态方程, 有 <spanclass="math display">\[\frac{p}{k_BT}=n-\frac{b_2}{2}n^2+\left(b_2^2-\frac{b_3}{3}\right)n^3+o(n^3)\]</span> 由此, 得到了前几个位力系数 <span class="math display">\[\begin{aligned}B_2(T)&amp;=-\frac{b_2}{2}\\B_3(T)&amp;=b_2^2-\frac{b_3}{3}\end{aligned}\]</span> <spanclass="math inline">\(l=2,3\)</span>的集团积分还是比较容易写出的 <spanclass="math display">\[\begin{aligned}b_2&amp;=\frac{1}{V}\int d^3\vec{r}_1d^3\vec{r}_2 f_{12}\\b_3&amp;=\frac{1}{V}\intd^3\vec{r}_1d^3\vec{r}_2d^3\vec{r}_3\left(f_{12}f_{23}+f_{12}f_{13}+f_{13}f_{23}+f_{12}f_{23}f_{13}\right)\\&amp;=\frac{1}{V}\intd^3\vec{r}_1d^3\vec{r}_2d^3\vec{r}_3\left(3f_{12}f_{13}+f_{12}f_{23}f_{13}\right)\end{aligned}\]</span> 换元到相对坐标, 可得 <span class="math display">\[\begin{aligned}b_2&amp;=\int d^3\vec{r}_{12} f_{12}\\b_3&amp;=3\int d^3\vec{r}_{12}d^3\vec{r}_{13}f_{12}f_{13}+\frac{1}{V}\intd^3\vec{r}_1d^3\vec{r}_2d^3\vec{r}_3f_{12}f_{23}f_{13}\end{aligned}\]</span> <spanclass="math inline">\(b_3\)</span>的第一项积分刚好是<spanclass="math inline">\(b_2^2\)</span>, 因此 <span class="math display">\[\begin{aligned}B_2(T)&amp;=-\frac{1}{2}\int d^3\vec{r}_{12} f_{12}\\B_3(T)&amp;=-\frac{1}{3V}\intd^3\vec{r}_1d^3\vec{r}_2d^3\vec{r}_3f_{12}f_{23}f_{13}\end{aligned}\]</span> 这给出了前两阶的位力系数.</p><h2 id="van-der-waals-方程">van der Waals 方程</h2><p>为得到非理想气体最常见的状态方程——van der Waals 方程,只需要第二位力系数. 为了计算更简便, 可以把 Lennard-Jones 势简化处理:其中的<span class="math inline">\(12\)</span>次反比排斥势直接改成刚球势,吸引势能不变, 因此得到 <span class="math display">\[\phi(r)=\begin{aligned}\begin{cases}\displaystyle+\infty\qquad\qquad&amp; r&lt;\sigma\\\displaystyle-4\varepsilon\left(\frac{\sigma}{r}\right)^6 &amp;r&gt;\sigma\end{cases}\end{aligned}\]</span> 从而 <span class="math display">\[\begin{aligned}B_2(T)&amp;=-\frac{1}{2}\left(-\frac{4\pi\sigma^3}{3}+\int_\sigma^{+\infty}4\pir^2dr\left\{\exp\left[4\beta\varepsilon\left(\frac{\sigma}{r}\right)^6\right]-1\right\}\right)\\&amp;\approx\frac{2\pi\sigma^3}{3}-2\pi\int_\sigma^{+\infty}4\beta\varepsilon\frac{\sigma^6}{r^4}dr\\&amp;=\frac{2\pi\sigma^3}{3}-\frac{8\pi\beta\varepsilon\sigma^3}{3}\end{aligned}\]</span> 代入位力展开可得 <span class="math display">\[\frac{p}{k_BT}=n+\frac{2\pi\sigma^3}{3}n^2-\frac{8\pi\varepsilon\sigma^3}{3k_BT}n^2\]</span> 即 <span class="math display">\[(p+\frac{8\pi\varepsilon\sigma^3}{3}n^2)\cdot\frac{1}{1+\frac{2\pi\sigma^3}{3}n}=nk_BT\]</span> 对分式 Taylor 展开, 即得到 <span class="math display">\[\left(p+\frac{8\pi\varepsilon\sigma^3}{3}n^2\right)\left(1-\frac{2\pi\sigma^3}{3}n\right)=nk_BT\]</span> 这正是 van der Waals 方程.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>经典流体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实际气体</tag>
      
      <tag>Mayer 集团展开</tag>
      
      <tag>位力展开</tag>
      
      <tag>van der Waals 方程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典流体(02)：实际气体的集团展开</title>
    <link href="/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(02)%EF%BC%9A%E5%AE%9E%E9%99%85%E6%B0%94%E4%BD%93%E7%9A%84%E9%9B%86%E5%9B%A2%E5%B1%95%E5%BC%80/"/>
    <url>/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(02)%EF%BC%9A%E5%AE%9E%E9%99%85%E6%B0%94%E4%BD%93%E7%9A%84%E9%9B%86%E5%9B%A2%E5%B1%95%E5%BC%80/</url>
    
    <content type="html"><![CDATA[<h2 id="实际气体的有关概念">实际气体的有关概念</h2><p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>理想气体是实际气体的高温稀薄极限,真正的气体只是近似满足理想的状态方程. 一般来说,实际气体从字面上就是指"所有现实中的气体",但对于临近相变或临界点的稠密气体,以理想气体为出发点作逐级近似未免过于复杂和不便,所以我们希望讨论的对象是稍加偏离理想状态的气体. 此外还有一些约定:</p><ul><li>组分是全同的单原子分子, 多原子分子的其余自由度的处理方法,此前已经讨论过;</li><li>分子间相互作用是两体相互作用, 并且是有心势, 只与距离有关,与任何空间取向无关.</li><li>这个有心势是一种短程相互作用,以至于系统可以看作带有微扰的近独立子系.</li></ul><p>第三点其实和"稍加偏离理想状态"类似, 都是希望从理想气体出发逐级展开.分子间相互作用(化学家常称为 Van der Waals 相互作用)的常见经验公式是Lennard-Jones 势: <span class="math display">\[\phi(r_{ij})=4\epsilon\left[\left(\frac{\sigma}{r_{ij}}\right)^{12}-\left(\frac{\sigma}{r_{ij}} \right)^6\right]\]</span> 它恰恰是满足上述要求的势能.</p><h2 id="位形积分">位形积分</h2><p>先计算正则配分函数 <span class="math display">\[\begin{aligned}Z(N)&amp;=\frac{1}{N!h^{3N}}\int\prod_j\exp(-\frac{\betap_j^2}{2m})d^3\vec{p}_j\int\prod_{i&lt;j}\exp(-\beta\phi(r_{ij}))\prod_jd^3\vec{r}_j\\&amp;=\left(\frac{2\pi m}{\betah^2}\right)^{\frac{3}{2}N}\frac{1}{N!}\int\prod_{i&lt;j}\exp(-\beta\phi(r_{ij}))\prod_jd^3\vec{r}_j\end{aligned}\]</span> 定义</p><blockquote><p>位形积分 <span class="math display">\[  Q_N:=\frac{1}{N!}\int\prod_{i&lt;j}\exp(-\beta\phi(r_{ij}))\prod_jd^3\vec{r}_j  \]</span></p></blockquote><p>并引入热波长, 可以充分简化正则配分函数和巨配分函数 <spanclass="math display">\[\begin{aligned}Z(N)&amp;=\frac{Q_N}{\lambda_T^{3N}}\\\Xi&amp;=\sum_N\left(\frac{e^{-\alpha}}{\lambda_T^3}\right)^NQ_N\end{aligned}\]</span></p><h2 id="势能部分的展开">势能部分的展开</h2><p>现在全部工作变成求解位形积分. 从微扰的角度出发, 似乎应该作 Taylor展开 <span class="math display">\[\exp(-\beta\phi)=1-\beta\phi+\frac{\beta^2}{2}\phi^2+\cdots\]</span> 问题是, <spanclass="math inline">\(\phi\)</span>在力程以内很大,这个展开能收敛于原函数上, 但收敛速度太慢了.</p><p>Mayer 考虑的方案是定义一个函数 <span class="math display">\[f_{ij}:=\exp(-\beta\phi(r_{ij}))-1\]</span> 则可以对<span class="math inline">\(f\)</span>作展开 <spanclass="math display">\[\begin{aligned}Q_N&amp;=\frac{1}{N!}\int\prod_id^3\vec{r}_i\prod_{j&lt;k}(1+f_{jk})\\&amp;=\frac{1}{N!}\int\prod_id^3\vec{r}_i\left[1+\sum_{j&lt;k}f_{jk}+\sum_{j&lt;k,l&lt;m}^{(j,k)\ne(l,m)}f_{jk}f_{lm}+\cdots\right]\end{aligned}\]</span> <span class="math inline">\(N\)</span>个粒子按编号,可以形成<span class="math inline">\(C_N^2\)</span>个无序数对,<strong>上面各项是无序数对的排列</strong></p><ul><li><p><span class="math inline">\(0\)</span>个数对排列: 只有一种排列,并且含零个数对, 因此是<span class="math inline">\(1\)</span>.</p></li><li><p><span class="math inline">\(1\)</span>个数对排列: 含一个数对,因此是<span class="math inline">\(f_{jk}\)</span>;同时用求和包含所有可能的排列.</p></li><li><p><span class="math inline">\(2\)</span>个数对排列: 含两个数对,因此是<span class="math inline">\(f_{jk}f_{lm}\)</span>;同时用求和包含所有可能的排列.</p></li><li><p>...</p></li></ul><h2 id="mayer-集团展开">Mayer 集团展开</h2><p>一种更为几何(图论)的方法是作图. 把<spanclass="math inline">\(N\)</span>个编号写出, 积分核可以拆成很多单项式,每一项中的一个<spanclass="math inline">\(f_{ij}\)</span>因子可以用点<spanclass="math inline">\(i\)</span>到点<spanclass="math inline">\(j\)</span>的连线表示, 这样一项和一张图一一对应.例如, 下图展示了<span class="math inline">\(N=8\)</span>的两张图.上子图表示项<span class="math inline">\(f_{34}f_{68}\)</span>的积分,下子图表示项<spanclass="math inline">\(f_{12}f_{14}f_{67}\)</span>的积分.</p><figure><img src="..\img\mayer_cluster.png" alt="mayer-cluster" /><figcaption aria-hidden="true">mayer-cluster</figcaption></figure><p>事实上, 从图中可以看出的是, 图并非最小的单元结构.图中还有更小的单元结构, 即按照联通性区分的各个子图, 我们通常称之为<strong>集团</strong>. 显然, 一个集团的积分值不依赖于标号本身,只依赖于集团的拓扑结构. 如果我们把这个拓扑结构记作<spanclass="math inline">\(c\)</span>, 并且定义</p><blockquote><p>集团积分 <span class="math display">\[  b_c:=\frac{1}{n_c!V}\int\prod_{i=1}^{n_c}d^3\vec{r}_i\cdot\prod_{p\inc}f_p  \]</span></p></blockquote><p>其中, <span class="math inline">\(n_c\)</span>表示集团<spanclass="math inline">\(c\)</span>中的点的个数, 这样定义对后面有方便;<span class="math inline">\(p\)</span>表示集团中存在的数对, 对<spanclass="math inline">\(p\)</span>的连乘就是集团涉及的所有<spanclass="math inline">\(f\)</span>项. 任何单张图总能分解为集团的乘积.假设一张图中, 集团<span class="math inline">\(c\)</span>出现<spanclass="math inline">\(m_c\)</span>次, 则对应积分为<spanclass="math inline">\((n_c!Vb_c)^{m_c}\)</span>. 但问题在于, 全套<spanclass="math inline">\(\{m_c\}\)</span>相同的图不止一张.</p><blockquote><p>最简单地, 考虑<span class="math inline">\(N=3\)</span>系统, 只有<spanclass="math inline">\(1,2\)</span>相连或者只有<spanclass="math inline">\(1,3\)</span>相连是两张图,但它们都只有一个单粒子集团和一个双粒子集团.</p></blockquote><p>如果考虑<span class="math inline">\(W(\{m_c\})\)</span>是这套<spanclass="math inline">\(\{m_c\}\)</span>对应的图张数, 则位形积分可以写为<span class="math display">\[Q_N=\sum_{\{m_c\}}&#39;\frac{W(\{m_c\})}{N!}\prod_c(Vn_c!b_c)^{m_c}\]</span> 带 prime 的求和仍是表示约束<spanclass="math inline">\(\sum_{c}m_cn_c=N\)</span>. <spanclass="math inline">\(W(\{m_c\})\)</span>实际上是不难求的. 全排列为<spanclass="math inline">\(N!\)</span>, <spanclass="math inline">\(m_c\)</span>个集团<spanclass="math inline">\(c\)</span>, 每个集团的内部交换数为<spanclass="math inline">\(n_c!\)</span>, 集团间的交换数为<spanclass="math inline">\(m_c!\)</span>, 因此 <span class="math display">\[W(\{m_c\})=\frac{N!}{\prod_cm_c!(n_c!)^{m_c}}\]</span> 从而求出位形积分为 <span class="math display">\[Q_N=\sum_{\{m_c\}}&#39;\prod_c\frac{(Vb_c)^{m_c}}{m_c!}\]</span></p><h2 id="另一种集团展开表示">另一种集团展开表示</h2><p>上面的集团展开是很"纯粹的"集团, 按照集团求和. 求和时应当注意,不同拓扑结构的集团可能具有相同的粒子数.</p><blockquote><p>例如<span class="math inline">\(N=3\)</span>集团, <spanclass="math inline">\(1,2\)</span>和<spanclass="math inline">\(1,3\)</span>分别相连是一种拓扑结构,这个集团内包含两个<span class="math inline">\(f\)</span>项;三个点两两相连是另一种拓扑结构, 这个集团内包含三个<spanclass="math inline">\(f\)</span>项.</p></blockquote><p>有时候, 我们希望按照不同的粒子数求和, 每个粒子数可能对应一种集团,也可能对应多种. 因此, 需要把<spanclass="math inline">\(c\)</span>进行一定合并, 形成对<spanclass="math inline">\(l\)</span>的求和或者连乘.</p><p>从比较简单的情形开始考虑, 假设集团<spanclass="math inline">\(c\)</span>和集团<spanclass="math inline">\(s\)</span>的粒子数都为<spanclass="math inline">\(l\)</span>, 并且其它集团粒子数都不为<spanclass="math inline">\(l\)</span>. 则 <span class="math display">\[Q_N=\sum_{\{m_a\}}^{a\neqc,s}\sum_{m_c+m_s}\sum_{m_c,m_s}&#39;\frac{(Vb_c)^{m_c}}{m_c!}\frac{(Vb_s)^{m_s}}{m_s!}\prod_{a}^{a\neqc,s}\frac{(V b_a)^{m_a}}{m_a!}\]</span> 这里用<span class="math inline">\(a\)</span>表示任意其它集团.约束条件现在只对<span class="math inline">\(m_c,m_s\)</span>的求和成立:<span class="math display">\[\sum_am_an_a+m_cl+m_sl=N\]</span> 总之, 约束条件表明, 若先对<spanclass="math inline">\(c,s\)</span>求和, 则<spanclass="math inline">\(m_c,m_s\)</span>之和为定值(以后还要对定值取一定的值并求和).这种约束对于先把<spanclass="math inline">\(c,s\)</span>的和项求出是有利的, 因为二项式定理为<span class="math display">\[(x+y)^{m_c+m_s}=\sum_{m_c,m_s}&#39;\frac{(m_c+m_s)!}{m_c!m_s!}x^{m_c}y^{m_s}\]</span> 因此容易写出对<span class="math inline">\(c,s\)</span>的求和,位形积分改写为 <span class="math display">\[Q_N=\sum_{\{m_a\}}^{a\nec,s}\sum_{m_c+m_s}\frac{[V(b_c+b_s)]^{(m_c+m_s)}}{(m_c+m_s)!}\prod_{\{m_a\}}^{a\nec,s}\frac{(V b_a)^{m_a}}{m_a!}\]</span> <spanclass="math inline">\(m_c+m_s\)</span>实际上就是所有<spanclass="math inline">\(l\)</span>个粒子的集团总数, 可以记作<spanclass="math inline">\(m_l\)</span>, 它不应与<spanclass="math inline">\(m_c\)</span>混淆, 因为已经对集团结构<spanclass="math inline">\(c\)</span>(或者<spanclass="math inline">\(s\)</span>, <spanclass="math inline">\(a\)</span>)和粒子数<spanclass="math inline">\(l\)</span>采用了不同的记号; <spanclass="math inline">\(b_c+b_s\)</span>也对应着所有<spanclass="math inline">\(l\)</span>个粒子的可能拓扑结构的贡献.</p><p>读者不难发现, 这个推导过程容易推广到任何情况,以至于可以把所有对拓扑结构的求和改写为对<spanclass="math inline">\(l\)</span>的求和: <span class="math display">\[Q_N=\sum_{\{m_l\}}&#39;\prod_l\frac{(Vb_l)^{m_l}}{m_l!}\]</span> 有时候, 也常把<spanclass="math inline">\(b_l\)</span>中的系数<spanclass="math inline">\(l!\)</span>提出:</p><blockquote><p><span class="math inline">\(l\)</span>-集团的集团积分 <spanclass="math display">\[  b_l:=\frac{1}{V}\int\prod_{i=1}^ld^3\vec{r}_i\sum_{c\inC_l}\prod_{p\in c}f_{p}  \]</span> 则位形积分写为 <span class="math display">\[  Q_N=\sum_{\{m_l\}}&#39;\prod_l\frac{1}{m_l!}\left(\frac{Vb_l}{l!}\right)^{m_l}  \]</span></p></blockquote><p>其中, <span class="math inline">\(C_l\)</span>表示<spanclass="math inline">\(l\)</span>-集团的集合族, <spanclass="math inline">\(c\)</span>表示<spanclass="math inline">\(C_l\)</span>中的一个集团, <spanclass="math inline">\(p\)</span>表示<spanclass="math inline">\(c\)</span>中的一个数对.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>经典流体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实际气体</tag>
      
      <tag>Mayer 集团展开</tag>
      
      <tag>位形积分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典流体(01)：经典理想气体</title>
    <link href="/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(01)%EF%BC%9A%E7%BB%8F%E5%85%B8%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93/"/>
    <url>/posts/%E7%BB%8F%E5%85%B8%E6%B5%81%E4%BD%93(01)%EF%BC%9A%E7%BB%8F%E5%85%B8%E7%90%86%E6%83%B3%E6%B0%94%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<h2 id="单原子分子理想气体">单原子分子理想气体</h2><p>我们首先考虑由单原子分子组成的经典理想气体. 一般来说,惰性元素原子组成的稀薄气体在常温下通常可以看成是单原子分子的理想气体.这类系统的能量仅仅包含所有粒子的平动动能, 即单粒子配分函数为 <spanclass="math display">\[z=\sum_se^{-\beta\varepsilon_s}\approx\int_0^{+\infty} e^{-\frac{\betap^2}{2m}}\frac{4\pi V}{h}p^2dp=\left(\frac{2\pi m}{\betah^2}\right)^{\frac{3}{2}}V\]</span> 其中运用了连续近似, 一般来说,粒子的动量可能会满足一定的驻波条件 <span class="math display">\[\Delta p\sim\frac{h}{L}\]</span> 如果它远小于"热动量" <span class="math display">\[\frac{h}{L}\ll\sqrt{2\pi mk_BT}\]</span> 则可以作这个连续近似, 把求和看作相空间的积分.常温下的宏观系统, 这个关系总是满足的, 这是经典理想气体的基础,否则必须考虑量子关联. 总的配分函数为 <span class="math display">\[Z=\frac{z^N}{N!}\]</span> 求得内能、压强和熵为 <span class="math display">\[\begin{aligned}U&amp;=-N\frac{\partial\log z}{\partial\beta}=\frac{3}{2}Nk_BT\\p&amp;=\frac{N\partial\log z}{\beta\partial V}=\frac{Nk_BT}{V}\\S&amp;=k_B(N\log z-N\beta\frac{\partial\log z}{\partial\beta}-\log N!)\\&amp;\approx\frac{5}{2}Nk_B+Nk_B\log\left[\left(\frac{2\pimk_BT}{h^2}\right)^{\frac{3}{2}}\frac{V}{N}\right]\end{aligned}\]</span> 与微正则系综和热力学的结果一致.</p><h2 id="双原子分子理想气体及其热容">双原子分子理想气体及其热容</h2><p>双原子分子构成的气体具有更复杂的能级, 包含以下三部分: <spanclass="math display">\[H=H_{com}+H_{vib}+H_{rot}\]</span>三项分别是平动动能(形式上就是单原子分子的能量)、振动能量和转动动能.由此, 配分函数是三项的连乘 <span class="math display">\[Z=Z_{com}\cdot Z_{vib}\cdot Z_{rot}\]</span> 需要强调的是, 理想气体状态方程依赖于<spanclass="math inline">\(Z(V)\)</span>, 只要相应的幂次为<spanclass="math inline">\(N\)</span>, 状态方程就不变. 后两项,从量子力学上看, 并不会引入<span class="math inline">\(V\)</span>.它们分别是<spanclass="math inline">\(N\)</span>个近独立一维谐振子和<spanclass="math inline">\(N\)</span>个(三维)轨道角动量, 单粒子配分函数为<span class="math display">\[\begin{aligned}z_{vib}&amp;=\sum_s\exp(-(s+\frac{1}{2})\beta\hbar\omega)\\z_{rot}&amp;=\sum_{l,m}\exp(-\frac{l(l+1)\beta\hbar^2}{2I})\end{aligned}\]</span> 完全是和<span class="math inline">\(V\)</span>无关的项,因此并不会改变状态方程. 当然, 内能还是会改变的, 这需要我们稍加计算.</p><h3 id="振动能量和热容">振动能量和热容</h3><p>振动配分函数相当好求, 就是一个等比数列 <span class="math display">\[z_{vib}=\frac{\exp(-\frac{\beta\hbar\omega}{2})}{1-\exp(-\beta\hbar\omega)}=\frac{1}{2\sinh\frac{\beta\hbar\omega}{2}}\]</span> 由此给出振动引入的内能为 <span class="math display">\[U_{vib}=-N\frac{\partial\logz_{vib}}{\partial\beta}=\frac{N\hbar\omega}{2}\coth\frac{\hbar\omega}{2k_BT}\]</span> 高温极限下(<spanclass="math inline">\(k_BT\gg\hbar\omega\)</span>), 给出 <spanclass="math display">\[U_{vib}\approx Nk_BT\]</span> 和能均分定理的结果一致, 能均分定理认为,一个振动自由度引入的能量为<span class="math inline">\(k_BT\)</span>.</p><p>低温近似(<span class="math inline">\(k_BT\ll\hbar\omega\)</span>)<span class="math display">\[U_{vib}\approx\frac{N\hbar\omega}{2}\left[1+2\exp(-\frac{\hbar\omega}{k_BT})\right]\]</span> 它可以拆分为两项: 第一项是低温极限(零温),认为全部振子取基态能; 第二项是最低阶非零项近似, 只需要考虑第一激发态,它和基态的粒子数分布服从 Boltzmann 分布.</p><p>对于热容, 我们选用普遍公式分析 <span class="math display">\[C_{vib}=Nk_B\left(\frac{x}{\sinh x}\right)^2\qquadx=\frac{\hbar\omega}{2k_BT}\]</span> 不难看出, 它随<span class="math inline">\(T\)</span>单调递增,可以定义振动温度 <span class="math display">\[\theta_{vib}:=\frac{\hbar\omega}{k_B}\]</span> 它的典型值为<span class="math inline">\(10^3\text{K}\)</span>,因此室温(<span class="math inline">\(300\text{K}\)</span>)算低温,振动自由度没有被充分地"解锁", 可以略去这个自由度; 只有在<spanclass="math inline">\(10^3\sim10^4\text{K}\)</span>时, 振动才体现为<spanclass="math inline">\(Nk_B\)</span>的附加热容. <spanclass="math inline">\(C_V-T\)</span>图中, 低温和高温各有一个平台,而<span class="math inline">\(10^3\text{K}\)</span>附近有一个上升的坡,使热容抬升了<span class="math inline">\(Nk_B\)</span>.</p><h3 id="转动动能和热容">转动动能和热容</h3><p>转动能量比较复杂. 可以先对<span class="math inline">\(m\)</span>求和<span class="math display">\[z_{rot}=\sum_l(2l+1)\exp(-\frac{l(l+1)\theta_{rot}}{T})\]</span> 其中<spanclass="math inline">\(\theta_{rot}=\hbar^2/2Ik_B\)</span>.这个求和没有解析的表达, 但我们可以利用 Euler-Maclaurin 公式: <spanclass="math display">\[\sum_{n=0}^{+\infty}f(n)=\int_0^{+\infty}f(x)dx+\frac{f(0)}{2}-\frac{f&#39;(0)}{12}+\frac{f&#39;&#39;&#39;(0)}{720}+\cdots\]</span> 注意这个公式并不是普适的, 其中一些项如<spanclass="math inline">\(f(+\infty)\)</span>和<spanclass="math inline">\(f^{(2k-1)}(+\infty)\)</span>被略去,因为这些项都为<span class="math inline">\(0\)</span>.近似的出发点是求和项间隙很小, 可以用积分替代, 也就要求高温极限.</p><p>总而言之, 可以计算配分函数的近似: <span class="math display">\[\begin{aligned}z_{rot}&amp;\approx\frac{T}{\theta_{rot}}+\frac{1}{3}+\frac{\theta_{rot}}{15T}+\frac{1}{60}\left(\frac{\theta_{rot}}{T}\right)^2-\frac{1}{720}\left(\frac{\theta_{rot}}{T}\right)^3\\\logz_{rot}&amp;\approx\log\frac{T}{\theta_{rot}}+\frac{\theta_{rot}}{3T}+\frac{1}{90}\left(\frac{\theta_{rot}}{T}\right)^2\end{aligned}\]</span> 因此, 转动附加的内能和热容为为 <span class="math display">\[\begin{aligned}U_{rot}&amp;\approxNk_B\left[T-\frac{\theta_{rot}}{3}-\frac{\theta_{rot}^2}{45T}\right]\\C_{rot}&amp;\approxNk_B\left[1+\frac{1}{45}\left(\frac{\theta_{rot}}{T}\right)^2\right]\end{aligned}\]</span> 同样在高温下给出能均分定理加上一个最低阶非零项.低温系统并不服从这样的近似, 正确的近似结果类似振动热容.多数双原子分子的<span class="math inline">\(\theta_{rot}\sim10^1\text{K}\)</span>, 因此室温就算得上高温,这就是热力学中总是考虑双原子分子转动自由度的原因.</p><h2 id="总结">总结</h2><p>在分子能级中, 能级差最大的是电子, <spanclass="math inline">\(\Delta\varepsilon_{elec}\sim10^{0\sim1}\text{eV}\)</span>;其次是分子的振动, <spanclass="math inline">\(\Delta\varepsilon_{vib}\sim10^{-1}\text{eV}\)</span>, 再次是分子的转动, <spanclass="math inline">\(\Delta\varepsilon_{rot}\sim10^{-4\sim-3}\text{eV}\)</span>.当温度远大于特征温度(用能级差估算)时, 这种运动可以进行经典近似,按照能均分定理处理; 否则只能使用量子化的求和计算,甚至在低温下"冻结"这个自由度. 这就是为什么在经典理想气体的问题中,我们总是考虑平动和转动, 有时考虑振动, 从不考虑电子运动.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>经典流体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则系综</tag>
      
      <tag>经典理想气体</tag>
      
      <tag>能均分定理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系综理论(05)：近独立子系的分布</title>
    <link href="/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(05)%EF%BC%9A%E8%BF%91%E7%8B%AC%E7%AB%8B%E5%AD%90%E7%B3%BB%E7%9A%84%E5%88%86%E5%B8%83/"/>
    <url>/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(05)%EF%BC%9A%E8%BF%91%E7%8B%AC%E7%AB%8B%E5%AD%90%E7%B3%BB%E7%9A%84%E5%88%86%E5%B8%83/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>本节中,我们将利用前面建立起来的统计系综理论来讨论最为简单的系统:由几乎无相互作用的子系统构成的宏观系统, 这类系统又被称为<strong>近独立子系</strong>. 一个近独立子系的总能量<spanclass="math inline">\(E\)</span>可以表达为组成系统的各个子系统(我们姑且称之为粒子)的能量之和<span class="math display">\[E\approx\sum_{i=1}^N\varepsilon_i\]</span> 近独立子系, 一是要求相互作用很弱但不能完全没有,否则压根无法热化; 二是它仅要求子系之间的相互作用很弱,但和外界当然可以有(甚至可以是很强的)相互作用. 总而言之,近独立子系可以视为单粒子的广延情形, 不管有多少个粒子,可以认为每个粒子总处于单粒子的那些能级上.</p><p>接下来就需要考虑粒子的全同性问题. 如果粒子可以分辨,那么可以按照编号<spanclass="math inline">\(i=1,2,\cdots,N\)</span>标记每个粒子的态<spanclass="math inline">\(s_i\)</span>, 并且<spanclass="math inline">\((s_i,s_j)\)</span>为<spanclass="math inline">\((\lambda,\mu)\)</span>和<spanclass="math inline">\((\mu,\lambda)\)</span>是不等价的两种分布,这样后续的任何针对<spanclass="math inline">\(s_i\)</span>的求和总是独立于<spanclass="math inline">\(s_j\)</span>. 如果粒子不可分辨,那么这两种分布是不等价的, 用<spanclass="math inline">\(s_i\)</span>研究问题非常不便,可以改用每个单粒子态<spanclass="math inline">\(s\)</span>上的粒子数<spanclass="math inline">\(a_s\)</span>来研究问题, 因为粒子具有全同性,所以同一套<span class="math inline">\(\{a_s\}\)</span>都是等价的.不同于很多热统/平统讲法, 我们总认为粒子是不可分辨的, 即便推导 Boltzmann分布.</p><h2 id="巨正则系综和-fermibose-分布">巨正则系综和 Fermi/Bose 分布</h2><p>在巨正则系综中, 近独立子系的巨配分函数为 <spanclass="math display">\[\Xi=\sum_N\sum_{\{a_s\}}&#39;e^{-\beta \sum_sa_s\varepsilon_s-\alpha N}\]</span> 其中带 prime 的求和符号表示它受到约束——总粒子数为<spanclass="math inline">\(N\)</span>. 但最终需要对<spanclass="math inline">\(N\)</span>求和, 会消去这个约束,可以把两重求和代之以单重求和: <span class="math display">\[\sum_N\sum_{\{a_s\}}&#39;\Rightarrow\sum_{\{a_s\}}\]</span> 并且将求和式中剩下的<spanclass="math inline">\(N\)</span>全部用<spanclass="math inline">\(\sum_sa_s\)</span>代替, 因此有 <spanclass="math display">\[\Xi=\sum_{\{a_s\}}\prod_s\exp[-a_s(\beta\varepsilon_s+\alpha)]\]</span> 两重求和化为单重的原因很简单, 对具有粒子数<spanclass="math inline">\(N\)</span>的态求和, 再对<spanclass="math inline">\(N\)</span>求和,自然可以用一次性对所有态求和代替.</p><p>另外, 无约束的对整个分布<spanclass="math inline">\(\{a_s\}\)</span>求和,可以分解为先后对每个单态分布<spanclass="math inline">\(a_s\)</span>求和(类似累次积分的概念), 于是 <spanclass="math display">\[\Xi=\sum_{a_1}\exp[-a_1(\beta\varepsilon_1+\alpha)]\cdot\sum_{a_2}\exp[-a_2(\beta\varepsilon_2+\alpha)]\cdots=\prod_s\sum_{a_s}\exp[-a_s(\beta\varepsilon_s+\alpha)]\]</span> 接下来就和粒子的统计性质有关了, 它们可以分为两大类:费米子和玻色子<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="实际上, 有些准粒子无法归入费米子或者玻色子的一种, 可以更广泛地使用任意子统计.">[1]</span></a></sup>,前者受 Pauli 不相容原理控制, <spanclass="math inline">\(a_s=0或1\)</span>; 后者的<spanclass="math inline">\(a_s\)</span>可以取遍自然数. 于是 <spanclass="math display">\[\Xi=\prod_s(1\pm e^{-\alpha-\beta\varepsilon_s})^{\pm1}\]</span> 其中正负号分别对应费米子和玻色子. 相应地, 可以求出 <spanclass="math display">\[\bar{a}_s=\frac{1}{e^{\alpha+\beta\varepsilon_s}\pm1}\]</span> 即 <strong>Fermi 分布</strong> 与 <strong>Bose分布</strong>.</p><h2 id="正则系综和-boltzmann-分布">正则系综和 Boltzmann 分布</h2><p>近独立子系的正则系综可以直接用前述结果得到. 事实上,正则系综极少被用于研究"量子性"非常强的系统, 例如简并 Fermi 气体.所谓"量子性", 可以用简并性去判断, 即<spanclass="math inline">\(e^\alpha\)</span>这个值是大还是小. 如果<spanclass="math inline">\(e^\alpha\gg 1\)</span>, 那么总有<spanclass="math inline">\(\bar{a}_s\ll1\)</span>, 粒子数非常少,不太可能发生两个粒子占据或者争夺同一个单粒子态的情形,量子性的分布退回到经典分布.</p><p>需要注意的是, 全同性和非简并条件<spanclass="math inline">\(e^\alpha\gg1\)</span>没有关系,尽管全同性是量子力学的一大特点, 但是大可将它借用到经典统计中, 以解决Gibbs 佯谬. 这样, 我们只需要取非简并近似即可, 全同性不需要改变. 因此<span class="math display">\[\log\Xi\approx\sum_s e^{-\alpha-\beta\varepsilon_s}\]</span> 即 <span class="math display">\[\Xi=\exp(e^{-\alpha}\sum_se^{-\beta\varepsilon_s})=\sum_N\frac{e^{-\alphaN}}{N!}\left(\sum_se^{-\beta\varepsilon_s}\right)^N\]</span> 后一步是 Taylor 展开, 但它恰好和巨配分函数的定义相契合,比对后可以得到 <span class="math display">\[\begin{aligned}Z(T,V,N)&amp;=\frac{z^N}{N!}\\z(T,V,N)&amp;=\sum_se^{-\beta\varepsilon_s}\end{aligned}\]</span> 它的物理意义是非常明确的. <spanclass="math inline">\(z\)</span>相当于单粒子的配分函数,总的配分函数是各个子系的连乘, 再除以全同性引入的交换数.</p><p>至于分布的形式, 可以直接从量子分布近似过来: <spanclass="math display">\[\bar{a}_s\approx e^{-\alpha-\beta\varepsilon_s}\]</span> 称为 <strong>Boltzmann 分布</strong>.</p><h2 id="粒子数分布的涨落">粒子数分布的涨落</h2><p>上述分布是每个态上的粒子数均值, 在热力学极限下也是最概然的值.可以求出每个态上的粒子数涨落为 <span class="math display">\[\text{Var}[a_s]=-\frac{\partial\bar{a}_s}{\partial\alpha}\]</span> 从而 <span class="math display">\[\text{Var}[a_s]=\bar{a}_s(1\pm\bar{a}_s)\]</span> 其中正负号分别对应费米子和玻色子. 取近似<spanclass="math inline">\(\bar{a}_s\ll1\)</span>, 有 <spanclass="math display">\[\text{Var}[a_s]\approx\bar{a}_s\]</span> 这是 Boltzmann 分布的粒子数涨落.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>实际上,有些准粒子无法归入费米子或者玻色子的一种, 可以更广泛地使用任意子统计.<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>系综理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平衡态统计物理</tag>
      
      <tag>正则系综</tag>
      
      <tag>巨正则系综</tag>
      
      <tag>Boltzmann 分布</tag>
      
      <tag>Fermi 分布</tag>
      
      <tag>Bose 分布</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系综理论(04)：巨正则系综</title>
    <link href="/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(04)%EF%BC%9A%E5%B7%A8%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/"/>
    <url>/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(04)%EF%BC%9A%E5%B7%A8%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>巨正则系综进一步解开了系统的自由度,它对应一个一般的开放系统, 同时允许能量和粒子交换. 与正则系综的讨论类似,为了导出巨正则分布<span class="math inline">\(\rho_{N,S}\)</span>,我们可以讨论一个与大热源兼大粒子源接触的系统的统计性质.这时系统可以与源交换能量和粒子数, 所以只有总能量<spanclass="math inline">\(E_0\)</span>和总粒子数<spanclass="math inline">\(N_0\)</span>是守恒的: <spanclass="math display">\[\Omega_{tot}\approx\sum_N\sum_S\Omega_0(E_0,N_0)\Omega(E_S^{(N)},N)e^{-\betaE_S^{(N)}-\alpha N}\]</span> 其中量子态的标记<spanclass="math inline">\(S\)</span>显然也和<spanclass="math inline">\(N\)</span>有关, 但我们一概略去, 只在<spanclass="math inline">\(E_S\)</span>的上标中体现; <spanclass="math inline">\(\alpha=-\mu/k_BT\)</span>是无量纲化的负化学势.容易得到巨正则分布为 <span class="math display">\[\rho_{N,S}=\frac{1}{\Xi}\exp(-\alpha N-\beta E_S^{(N)})\]</span> 类似地, 归一化系数称作 <strong>巨配分函数</strong>: <spanclass="math display">\[\Xi(T,V,\mu)=\sum_Ne^{-\alpha N}\sum_Se^{-\beta E_S^{(N)}}\]</span></p><h2 id="热力学公式">热力学公式</h2><p>巨配分函数同样能很方便地推导热力学公式, 此处省略部分细节, 直接给出<span class="math display">\[\begin{aligned}\bar{N}&amp;=-\frac{\partial\log\Xi}{\partial\alpha}\\U&amp;=-\frac{\partial\log\Xi}{\partial\beta}\\p&amp;=\frac{\partial\log\Xi}{\beta\partial V}\\S&amp;=k_B\left(\log\Xi-\alpha\frac{\partial\log\Xi}{\partial\alpha}-\beta\frac{\partial\log\Xi}{\partial\beta}\right)\end{aligned}\]</span> 这些公式大体上和正则系综的热力学公式类似.</p><h3 id="巨势">巨势</h3><p>巨配分函数直接对应的热力学函数不再是自由能. 考虑熵的公式: <spanclass="math display">\[-k_BT\log\Xi=-TS-\mu N+U=F-G=-pV\]</span> 由此可以定义新的热力学函数</p><blockquote><p>巨势</p><p>PVT 系统的巨热力学势(简称巨势)可以定义为 <spanclass="math display">\[  J:=-pV  \]</span></p></blockquote><p>这样, 巨配分函数也能直接对应上热力学函数: <spanclass="math display">\[J\equiv-k_BT\log\Xi\]</span> 这也提示我们可以直接约去状态方程的偏导数符号,直接相除求结果.</p><h3 id="粒子数涨落">粒子数涨落</h3><p>巨正则分布下, 粒子数允许涨落: <span class="math display">\[\text{Var}[N]=\frac{\partial^2\log\Xi}{\partial\alpha^2}=-\frac{\partialN}{\partial\alpha}=k_BT\left(\frac{\partial N}{\partial\mu}\right)_{T,V}\]</span> 进一步化简有赖于热力学关系 <span class="math display">\[\begin{aligned}\left(\frac{\partial\mu}{\partial N}\right)_{T,V}&amp;=\left(\frac{\partial\mu}{\partialN}\right)_{T,p}+\left(\frac{\partial\mu}{\partialp}\right)_{T,N}\left(\frac{\partial p}{\partial N}\right)_{T,V}\\&amp;=0+\frac{V}{N}\cdot(-\frac{V}{N}) \left(\frac{\partial p}{\partialV}\right)_{T,N}\\&amp;=\frac{V}{N^2\kappa_T}\end{aligned}\]</span> 代回可得 <span class="math display">\[\frac{\sqrt{\text{Var}[N]}}{N}=\sqrt{\frac{k_BT\kappa_T}{V}}\]</span> 由于<span class="math inline">\(V\)</span>是广延量,再次得到相对涨落正比于<spanclass="math inline">\(1/\sqrt{N}\)</span>的规律. 有一个例外:在系统趋于临界点时, 如果具有发散的等温压缩系数<spanclass="math inline">\(\kappa_T\)</span>,即使是宏观系统也能具有可观的涨落, 此处暂且按下不表.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>系综理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平衡态统计物理</tag>
      
      <tag>巨正则系综</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系综理论(03)：正则系综</title>
    <link href="/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(03)%EF%BC%9A%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/"/>
    <url>/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(03)%EF%BC%9A%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left|#1\right|\!\right|}\)</span>上一节中讨论的微正则系综是对应于能量E、体积 V 和粒子数 N 的系综.一旦系统微观状态数(或者说系统的熵)计算出来以后,我们就可以得到系统的所有热力学性质.但是微正则系综在实际运用上并不十分便利, 在多数实际应用中,我们需要知道系统在固定温度和粒子数时的热力学性质.这就对应于我们现在要讨论的正则系综.</p><h2 id="正则分布的导出">正则分布的导出</h2><p>从物理上讲, 微正则系综对应孤立系统, 即没有物质和能量交换;而正则系综对应的是一般的封闭系统, 即没有物质交换, 但是允许能量交换.这样的系统独自拿出来分析, 显然不具有一个守恒的内能.</p><p>为了导出它以特定态<spanclass="math inline">\(S\)</span>出现的概率<spanclass="math inline">\(\rho_S\)</span>, 我们借助一个大热源来分析.所谓大热源, 就是能量远大于<span class="math inline">\(E_S\)</span>,总可以展开到最低阶非零项; 并且热容趋于无穷大,因而与系统的任何热量交换不会改变温度<spanclass="math inline">\(T\)</span>. 两者能量之和记作<spanclass="math inline">\(E_0\)</span>, 则总状态数为 <spanclass="math display">\[\Omega_{tot}=\sum_{E_S}\Omega_0(E_0-E_S)\cdot\Omega(E_S)\]</span> 两个因子分别是热源状态数和系统状态数, 能量之外的宗量被略写.因为<span class="math inline">\(E_S\ll E_0\)</span>,可以把热源的熵函数展开 <span class="math display">\[\log\Omega_0(E_0-E_S)=\log\Omega_0(E_0)-\frac{\partial\log\Omega(E)}{\partialE}\Bigg|_{E=E_0}E_S=\log\Omega_0(E_0)-\beta E_S\]</span> 其中<spanclass="math inline">\(\beta=1/k_BT\)</span>是具有能量倒数量纲的温度倒数.代回总状态数公式可以得知 <span class="math display">\[\Omega_{tot}=\Omega_0(E_0)\sum_{E_S}\Omega(E_S)e^{-\beta E_S}\]</span> 从这个公式, 立即求得系统处于能量<spanclass="math inline">\(E_S\)</span>的概率为 <span class="math display">\[\rho_S=\frac{\Omega(E_S)e^{-\betaE_S}}{\displaystyle\sum_{E_S}\Omega(E_S)e^{-\beta E_S}}\]</span> 需要注意的是, 能量<spanclass="math inline">\(E_S\)</span>和量子态<spanclass="math inline">\(S\)</span>不是一一对应的关系,一个总能量可能对应多个量子态, 即简并性, <spanclass="math inline">\(\Omega(E_S)\)</span>就是能级的简并度.如果我们不按能量求和, 而是按态求和, 就有</p><blockquote><p>正则分布和配分函数</p><p>具有给定的<span class="math inline">\(T,V,N\)</span>的系统,处于态<span class="math inline">\(S\)</span>的概率为 <spanclass="math display">\[  \rho_S=\frac{e^{-\beta E_S}}{Z}  \]</span> 其中<spanclass="math inline">\(Z(T,V,N)\)</span>是归一化系数, 称为配分函数.</p></blockquote><h2 id="热力学公式">热力学公式</h2><p>所谓热力学公式, 就是用微观的、统计的配分函数,推导宏观热力学函数的公式. 我们全部的出发点, 一是 Gibbs 假设,即宏观量是相应微观量的系综平均; 二是概率分布公式和配分函数的定义: <spanclass="math display">\[\rho_S=\frac{e^{-\beta E_S}}{Z} \qquad Z(T,V,N)=\sum_Se^{-\beta E_S}\]</span></p><h3 id="能量">能量</h3><p>宏观内能<span class="math inline">\(U\)</span>对应于微观量子态<spanclass="math inline">\(S\)</span>的能量<spanclass="math inline">\(E_S\)</span>, 因此 <span class="math display">\[U=\frac{1}{Z}\sum_SE_Se^{-\betaE_S}=\frac{-1}{Z}\frac{\partial}{\partial\beta}\sum_Se^{-\betaE_S}=-\frac{\partial\log Z}{\partial\beta}\]</span></p><h3 id="状态方程-化学势">状态方程, 化学势</h3><p>宏观的做功表现为 <span class="math display">\[-pdV=\frac{1}{Z}\sum_S\frac{\partial E_S}{\partial V}dV e^{-\betaE_S}=-\frac{1}{\beta}\frac{\partial\log Z}{\partial V}dV\]</span> 得到状态方程为 <span class="math display">\[p=\frac{\partial\log Z}{\beta\partial V}\]</span> 对于普遍的做功<span class="math inline">\(Ydy\)</span>,只需要认为<span class="math inline">\(-pdV=Ydy\)</span>, 代换即可.</p><p>类比状态方程的推导, 很容易得到化学势的公式 <spanclass="math display">\[\mu=-\frac{1}{\beta}\frac{\partial\log Z}{\partial N}\]</span></p><h3 id="熵和信息熵">熵和信息熵</h3><p>有了内能和做功, 就能求出熵的公式. 利用 <span class="math display">\[\begin{aligned}dS&amp;=k_B\beta(dU+pdV-\mu dN)\newline&amp;=k_B\left[-\beta d\left(\frac{\partial\logZ}{\partial\beta}\right)+\frac{\partial\log Z}{\partialV}dV+\frac{\partial\log Z}{\partial N}dN\right]\\&amp;=k_B\left[-d\left(\beta\frac{\partial\logZ}{\partial\beta}\right)+d\log Z \right]\end{aligned}\]</span> 求得 <span class="math display">\[S=k_B\left(\log Z-\beta\frac{\partial\log Z}{\partial\beta}\right)\]</span> 基于熵的一般公式, 还可以推导另一种主要用<spanclass="math inline">\(\rho_S\)</span>表出的形式, 注意到 <spanclass="math display">\[\begin{aligned}-\beta\frac{\partial\log Z}{\partial\beta}&amp;=\beta U=\sum_S\betaE_S\rho_S\\\log Z&amp;=\sum_S\rho_S\log Z\end{aligned}\]</span> 代入熵公式可得 <span class="math display">\[S=k_B\sum_S\rho_S\log(Ze^{\beta E_S})=-k_B\sum_S\rho_S\log\rho_S\]</span> 这种表示常见于熵在其它学科的推广, 即信息熵.</p><h3 id="自由能">自由能</h3><p>根据熵的表达式立即得到 <span class="math display">\[k_BT\log Z=TS-U=-F\]</span> 即, 系统的配分函数直接和自由能相关,配分函数的基本变量正好使得<spanclass="math inline">\(F\)</span>构成特性函数.</p><h3 id="能量涨落">能量涨落</h3><p>显然, 根据配分函数和概率分布, 可以定义任意阶的能量期望, 因此 <spanclass="math display">\[\text{Var}[U]=\frac{1}{Z}\frac{\partial^2Z}{\partial\beta^2}-\frac{1}{Z^2}\left(\frac{\partialZ}{\partial\beta}\right)^2=\frac{\partial^2\logZ}{\partial\beta^2}=-\frac{\partial U}{\partial\beta}\]</span> 注意到这个偏导数是保持<spanclass="math inline">\(V,N\)</span>不变的, 因此结果中包含等容热容 <spanclass="math display">\[\frac{\sqrt{\text{Var}[U]}}{U}=\frac{\sqrt{k_BT^2C_V}}{U}\]</span> 由于<span class="math inline">\(C_V\)</span>和<spanclass="math inline">\(U\)</span>都是广延量, 因此内能的相对涨落关于<spanclass="math inline">\(N\)</span>的变化规律为 <spanclass="math display">\[\frac{\sqrt{\text{Var}[U]}}{U}=\frac{\sqrt{k_BT^2C_V}}{U}\sim\frac{1}{\sqrt{N}}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>系综理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平衡态统计物理</tag>
      
      <tag>系综</tag>
      
      <tag>正则系综</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系综理论(02)：微正则系综</title>
    <link href="/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(02)%EF%BC%9A%E5%BE%AE%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/"/>
    <url>/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(02)%EF%BC%9A%E5%BE%AE%E6%AD%A3%E5%88%99%E7%B3%BB%E7%BB%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="等概率原理和状态数的计算">等概率原理和状态数的计算</h2><p>微正则系综考虑的是<spanclass="math inline">\(\rho_{eq}\)</span>分段取常数的情况, 宏观上,这样的系统通常是孤立系统, 即能量和粒子数与外界都不交换的系统.从能量守恒可以得知, 代表点必然处在等能曲面上 <spanclass="math display">\[\rho_{eq}=0\ ,\ 除非 E\le H(q,p)\le E+\Delta\]</span> 其中的<spanclass="math inline">\(\Delta\)</span>是给等能曲面加的一个展宽,因为宏观的总能量<span class="math inline">\(E\)</span>总被看作连续变量,这样有助于计算上的简便. 相应地, 等能曲面可以改称为"能壳".</p><p>能量守恒并不能指出能壳上的分布, 为了解决这个问题,需要引入独立的假设:</p><blockquote><p>等概率原理</p><p>平衡态孤立系统有若干可能出现的态, 它们出现的概率是相等的.</p></blockquote><p>等概率原理认为, 平衡态的孤立系统在能壳上具有均匀的代表点密度. 因此,为了求解概率分布, 只需要计算如下的总状态数 <span class="math display">\[\Omega(E)=\frac{1}{N!}\int_{E\le H\le E+\Delta}d\Omega\]</span> 其中<span class="math inline">\(N!\)</span>来自粒子全同性,注意区分状态数<spanclass="math inline">\(\Omega\)</span>和相空间体积元<spanclass="math inline">\(d\Omega\)</span>, 后者为 <spanclass="math display">\[d\Omega=\prod_{i=1}^r\frac{dq_idp_i}{h}\]</span> 每一对正则坐标都用 Planck 常量<spanclass="math inline">\(h\)</span>消去量纲, <spanclass="math inline">\(r\)</span>是总的自由度. 这是连续变量的求法,有许多量子力学能级是离散的, 此时不需要积分, 例如转动动能为 <spanclass="math display">\[E_{rot}=\frac{l(l+1)\hbar^2}{2I}\]</span> 其中对于任何自然数<span class="math inline">\(l\)</span>,对应能级的状态数为<span class="math inline">\(2l+1\)</span>,这是量子力学直接指出的.</p><h2 id="理想惰性气体的状态数">理想惰性气体的状态数</h2><p>所谓理想惰性气体, 指相互作用很弱的全同单原子分子组成的气体,只用考虑平动动能, 维数取我们最熟悉的三维, 因此<spanclass="math inline">\(r=3N\)</span>: <span class="math display">\[\Omega(E)=\frac{1}{N!}\int_{E\le\sum\frac{p_i^2}{2m}\leE+\Delta}\prod_{i=1}^{3N}\frac{dq_idp_i}{h}\]</span> 其中的坐标部分不受能壳限制, 只与位形空间的约束有关,即每三个广义坐标积分得到一个体积<span class="math inline">\(V\)</span>:<span class="math display">\[\Omega(E)=\frac{V^N}{N!h^{3N}}\int_{E\le\sum\frac{p_i^2}{2m}\leE+\Delta}\prod_{i=1}^{3N}dp_i\]</span> 现在积分部分就是在<spanclass="math inline">\(3N\)</span>维空间中的超球壳体积, 得到 <spanclass="math display">\[\begin{aligned}\Omega(E,V,N)&amp;=\frac{V^N}{N!h^{3N}}\frac{\sqrt{\pi}^{3N}}{\Gamma(\frac{3N}{2}+1)}\left(\sqrt{2m(E+\Delta)}^{3N}-\sqrt{2mE}^{3N}\right)\newline&amp;=\left(\frac{(2\pi mE)^{\frac{3}{2}}V}{h^3}\right)^N\frac{3N\Delta/2E}{N!\Gamma(\frac{3N}{2}+1)}\end{aligned}\]</span> 其中已经把<spanclass="math inline">\(\Omega\)</span>的宗量写全为<spanclass="math inline">\(E,V,N\)</span>, 这也正好对应PVT孤立系统的行为:能量守恒, 不做功, 不与外界交换粒子.</p><h3 id="boltzmann-关系与熵的计算">Boltzmann 关系与熵的计算</h3><p>Boltzmann 认为, 统计物理可以定义与热力学相对应的熵函数.</p><blockquote><p>Boltzmann 关系 <span class="math display">\[  S(E,V,N)=k_B\log\Omega(E,V,N)  \]</span></p></blockquote><p>按照 Boltzmann 关系, 以及 Stirling 公式: <spanclass="math display">\[\log\Gamma(x+1)\approx x\log x-x+\frac{\log(2\pi x)}{2}\qquad\text{for}x\gg1\]</span> 可以求出单原子分子的熵函数 <span class="math display">\[S=Nk_B\log\left[\frac{V}{N}\left(\frac{4\pimE}{3Nh^2}\right)^{\frac{3}{2}}\right]+\frac{5Nk_B}{2}+k_B\log\frac{3N\Delta}{2E}\]</span> 可以看出, 含能壳展宽<spanclass="math inline">\(\Delta\)</span>的项随<spanclass="math inline">\(N\)</span>的增长远远慢于其它项,因此在热力学极限下可以舍去, 得到了一个广延量.</p><h3 id="验证统计熵和热力学熵的等价性">验证统计熵和热力学熵的等价性</h3><p>热力学中, 熵函数满足微分关系 <span class="math display">\[dS=\frac{1}{T}dE+\frac{p}{T}dV-\frac{\mu}{T}dN\]</span> 假设统计熵也满足这个关系, 则可以定义统计的温度倒数 <spanclass="math display">\[\frac{1}{T}=\left(\frac{\partial S}{\partialE}\right)_{V,N}=\frac{3Nk_B}{2E}\]</span> 只要<span class="math inline">\(k_BN_A=R\)</span>,它就回到热力学给出的理想惰性气体内能公式.</p><p>类似地, 可以定义统计的压强 <span class="math display">\[\frac{p}{T}=\left(\frac{\partial S}{\partialV}\right)_{E,N}=\frac{Nk_B}{V}\]</span> 同样地, 只要<span class="math inline">\(k_BN_A=R\)</span>,它就回到热力学给出的理想气体状态方程.</p><p>因此对于理想惰性气体, 从微正则系综出发, 利用 Boltzmann关系定义的统计熵等价于热力学熵, 偏导数关系给出相同的热力学方程.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>系综理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平衡态统计物理</tag>
      
      <tag>微正则系综</tag>
      
      <tag>等概率原理</tag>
      
      <tag>Boltzmann 关系</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系综理论(01)：相空间和概率密度</title>
    <link href="/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(01)%EF%BC%9A%E7%9B%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6/"/>
    <url>/posts/%E7%B3%BB%E7%BB%BC%E7%90%86%E8%AE%BA(01)%EF%BC%9A%E7%9B%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="基本概念">基本概念</h2><p>我们首先讨论一个经典多自由度的描述方法. 一个包含<spanclass="math inline">\(N\)</span>个全同粒子的经典系统可以用一个<strong>相空间(phase space)</strong>去描述, 相空间的坐标为正则坐标,即全体广义坐标<spanclass="math inline">\(\{\vec{q}_i\}\)</span>和广义动量<spanclass="math inline">\(\{\vec{p}_i\}\)</span>(<spanclass="math inline">\(i=1,2,\cdots,N\)</span>).系统任意时刻的运动状态可以用相空间中的一个点描述, 称为<strong>代表点</strong>, 代表点随着时间演化划出的轨迹叫作<strong>相轨道</strong>.</p><p>在经典力学特别是单体和两体问题中, 不少相轨道是明确且可解析的;然而统计物理关心的体系自由度(相空间维数)<spanclass="math inline">\(D\sim N_A\)</span>. 对于这种问题,即便初值极端精确地给定, 我们也无力计算确切的相轨道,只能代之以概率密度:</p><p><span class="math display">\[\rho(q,p,t)=\frac{\Delta P}{\Delta\Omega}\]</span> 表示系统代表点出现在<spanclass="math inline">\((q,p)\)</span>附近单位相空间体积内的概率,其中<span class="math inline">\(q,p\)</span>是正则坐标的简写.</p><p>按照概率的经典诠释(频率诠释), 概率等价于样本数趋于无穷的频率,因此考虑概率, 相当于考虑大量具有同样宏观性质的系统,它们在相空间中可以画出很多代表点, 在<spanclass="math inline">\((q,p)\)</span>处的密度为<spanclass="math inline">\(\rho(q,p,t)\)</span>, 像是流体一样.这个大量类似系统的集合就是所谓的 <strong>系综(ensemble)</strong>.</p><p>到现在为止, 系综理论只是强硬地把力学观念套用到统计物理上而已,它做不到任何事情, 例如求出一个宏观的物理量. 为了解决这个问题, Gibbs引入了假设:</p><blockquote><p>系综平均假设:</p><p>系统的宏观量总能写成相应微观量的系综平均, 即 <spanclass="math display">\[  \hat{O}_{ens}(t)=\int d\Omega\rho(q,p,t)\hat{o}(q,p)  \]</span></p></blockquote><h2 id="liouville-定理">Liouville 定理</h2><p>概率密度随时间的演化满足 <span class="math display">\[\frac{d\rho}{dt}=\frac{\partial\rho}{\partial t}+[\rho,H]\]</span> 其中<span class="math inline">\([,]\)</span>是经典 Poisson括号, 尽管它更常写作<span class="math inline">\(\{,\}\)</span>.另一方面, 连续性方程给出 <span class="math display">\[\frac{\partial \rho}{\partial t}+\sum_i\frac{\partial }{\partialq_i}(\rho\dot{q}_i)+\sum_i\frac{\partial}{\partial p_i}(\rho\dot{p}_i)=0\]</span> 代入正则方程, 可以得到 <span class="math display">\[\frac{\partial\rho}{\partial t}+\sum_i\frac{\partial }{\partialq_i}\left(\rho\frac{\partial H}{\partialp_i}\right)-\sum_i\frac{\partial }{\partial p_i}\left(\rho\frac{\partialH}{\partial q_i}\right)=0\]</span> 不难看出, 求和的两项正是<spanclass="math inline">\([\rho,H]\)</span>, 于是立刻得到</p><blockquote><p>Liouville 定理</p><p>系综的代表点"流体"不可压缩, 即 <span class="math display">\[  \frac{d\rho}{dt}=0  \]</span></p></blockquote><p>需要注意的是, 全导数为<spanclass="math inline">\(0\)</span>不代表<spanclass="math inline">\(\rho(q,p,t)\)</span>不显含时间<spanclass="math inline">\(t\)</span>, 这只是偏导数的逻辑,全导数还要考虑<span class="math inline">\(q,p\)</span>随时间的演化.然而, 我们在热力学中常说的 <strong>平衡态</strong>,显然具有不显含时间的宏观量: <span class="math display">\[\hat{O}_{eq}=\int d\Omega\rho_{eq}(q,p)\hat{o}(q,p)\]</span> 或者说, 平衡态分布的偏导数为<spanclass="math inline">\(0\)</span>. 和 Liouville 定理联立, 立即得到 <spanclass="math display">\[[\rho_{eq},H]=0\Rightarrow\rho_{eq}=C\ or\ f(H)\]</span> 稍后可以得知, 前者对应微正则系综,后者对应正则与巨正则系综.</p>]]></content>
    
    
    <categories>
      
      <category>统计物理</category>
      
      <category>系综理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>平衡态统计物理</tag>
      
      <tag>系综</tag>
      
      <tag>Liouville 定理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(09)：实对称矩阵的本征值求法</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(09)%EF%BC%9A%E5%AE%9E%E5%AF%B9%E7%A7%B0%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%AC%E5%BE%81%E5%80%BC%E6%B1%82%E6%B3%95/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(09)%EF%BC%9A%E5%AE%9E%E5%AF%B9%E7%A7%B0%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%AC%E5%BE%81%E5%80%BC%E6%B1%82%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\det}[1]{\text{det}\left(#1\right)}\newcommand{\Det}[1]{\left|\begin{matrix} #1\end{matrix}\right|}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\newcommand{\norm}[1]{\left|\!\left| #1\right|\!\right|}\)</span>本节针对实对称矩阵这一特殊形式,讨论其本征值如何求解. 任何一本线代教材都会提到实对称矩阵的对角化方案,本文的求解办法就从这里开始.</p><h2 id="一般实对称矩阵的jacobi-算法">一般实对称矩阵的Jacobi 算法</h2><p>由于任何实对称矩阵原则上都能对角化, 所以直接利用 Givens变换逐渐地消去非对角元. 假设<spanclass="math inline">\(\b{A}\in\R^{n\times n}\)</span>是实对称矩阵,对于一对指标<span class="math inline">\(p,q\)</span>(不妨设<spanclass="math inline">\(p&lt;q\)</span>), 用 Givens 变换设法消去交叉项:<span class="math display">\[\begin{align}&amp;\begin{pmatrix}c &amp; -s\\s &amp; c\end{pmatrix}\begin{pmatrix}a_{pp} &amp; a_{pq}\\a_{pq} &amp; a_{qq}\end{pmatrix}\begin{pmatrix}c &amp; s\\-s &amp; c\end{pmatrix}\\=&amp;\begin{pmatrix}c^2a_{pp}+s^2a_{qq}-2csa_{pq} &amp; cs(a_{pp}-a_{qq})+(c^2-s^2)a_{pq}\\cs(a_{pp}-a_{qq})+(c^2-s^2)a_{pq} &amp; c^2a_{pp}+s^2a_{qq}+2csa_{pq}\end{pmatrix}\end{align}\]</span> 其中<spanclass="math inline">\(c,s\)</span>是余弦和正弦值的简写. 令对角项为<spanclass="math inline">\(0\)</span>, 得到 <span class="math display">\[\frac{\tan\theta}{\tan^2\theta-1}=\frac{a_{pq}}{a_{pp}-a_{qq}}\]</span> 本征值为 <span class="math display">\[\lambda_\pm=\frac{a_{pp}+a_{qq}\pm\sqrt{(a_{pp}-a_{qq})^2+4a_{pq}^2}}{2}\]</span> Jacobi 算法计算量还是<spanclass="math inline">\(O(n^3)\)</span>, 但是它比较严格, 所以十分稳定.</p><h2 id="sturm-序列">Sturm 序列</h2><p>所谓的 Sturm 序列适用于实对称的三对角矩阵. 假设三对角矩阵<spanclass="math inline">\(\b{T}\)</span>的对角元为<spanclass="math inline">\(d_k\)</span>, 副对角线的元为<spanclass="math inline">\(b_k\)</span>, 它的特征多项式可以递推求解: <spanclass="math display">\[p_k(x)=(d_k-x)p_{k-1}(x)-b_{k-1}^2p_{k-2}(x)\\p_0(x)\equiv1,p_{1}(x)=d_1-x\]</span> 其中<span class="math inline">\(p_k(x)\)</span>可以理解为<spanclass="math inline">\(k\)</span>阶主子矩阵的特征多项式.这些特征多项式构成的序列, 称为 <strong>Sturm 序列</strong>,它有一些重要的性质:</p><ol type="1"><li>Sturm 序列中, 某一项<spanclass="math inline">\(p_k\)</span>的根和它前一项<spanclass="math inline">\(p_{k-1}\)</span>的根排序,两者的根一定交错出现</li><li>任取<span class="math inline">\(\mu\in\R\)</span>, 序列<spanclass="math inline">\(\set{p_0(\mu),p_1(\mu),\cdots,p_n(\mu)}\)</span>,它从前往后变号的次数<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="可以约定: 零值相对前一项永远算作变号, 它的后一项相对零值永不算变号">[1]</span></a></sup><spanclass="math inline">\(s(\mu)\)</span>就是<spanclass="math inline">\(p_n\)</span>的根中严格小于<spanclass="math inline">\(\mu\)</span>的数目.</li></ol><p>根据 Gershgorin 圆盘定理, <spanclass="math inline">\(p_n\)</span>的根一定在如下区间 <spanclass="math display">\[\sigma(\b{T})\subset\bigcup_{k=1}^n[d_k-\abs{b_k}-\abs{b_{k-1}},d_k+\abs{b_k}+\abs{b_{k-1}}]\]</span> <span class="math inline">\(b\)</span>的下标只有<spanclass="math inline">\(1\sim n-1\)</span>, 可以约定<spanclass="math inline">\(b_0=b_n=0\)</span>.</p><p>于是问题简化为了一个查找问题, 只需从这些闭区间中找到最小左值<spanclass="math inline">\(\alpha_0\)</span>和最大右值<spanclass="math inline">\(\beta_0\)</span>, 只需要从<spanclass="math inline">\([\alpha_0,\beta_0]\)</span>中搜索<spanclass="math inline">\(p_n(x)=0\)</span>的根就可以了.比较稳定的方案当然是对分法.</p><p>注意到: 前面提到的<spanclass="math inline">\(s(\mu)\)</span>是一个非严格递增的函数,可以将它作为判据, <spanclass="math inline">\(\text{e.g.}\)</span>计算第<spanclass="math inline">\(k\)</span>小的本征值:</p><ol type="1"><li><spanclass="math inline">\([\alpha,\beta]=[\alpha_0,\beta_0]\)</span>,根据搜索区间<spanclass="math inline">\([\alpha,\beta]\)</span>确定中值<spanclass="math inline">\(\gamma\)</span>;</li><li>计算<span class="math inline">\(s(\gamma)\)</span>并与<spanclass="math inline">\(k\)</span>比较:<ol type="1"><li><span class="math inline">\(s(\gamma)\ge k\)</span>, 说明<spanclass="math inline">\([\alpha_0,\gamma)\)</span>内已经有不少于<spanclass="math inline">\(k\)</span>个根了, 此时赋值<spanclass="math inline">\(\beta=\gamma\)</span>;</li><li><span class="math inline">\(s(\gamma)&lt; k\)</span>, 说明<spanclass="math inline">\([\alpha_0,\gamma)\)</span>内不足<spanclass="math inline">\(k\)</span>个根, 此时赋值<spanclass="math inline">\(\alpha=\gamma\)</span>;</li></ol></li><li>判断终止条件, 不终止则按照新的<spanclass="math inline">\(\alpha,\beta\)</span>继续搜索.</li></ol><h2 id="稀疏矩阵的-lanczos-方法">稀疏矩阵的 Lanczos 方法</h2><p>如果待计算的矩阵是一个庞大的稀疏矩阵,那么前面所列举的方法并不能有效地进行操作. 这时,如果仅需要求解矩阵的部分而不是全部本征对. 那么可以使用 Krylov子空间迭代的方法.</p><p>迭代使用的 Krylov 子空间为<spanclass="math inline">\(K_m(\b{A};\bi{v})\)</span>, 其中<spanclass="math inline">\(\b{A}\)</span>就是待计算的稀疏矩阵, <spanclass="math inline">\(\bi{v}\)</span>是可由我们任选的非零矢量.我们希望从子空间中逐步构建正交完备基矢, 令 <span class="math display">\[\bi{v}_0=\b{0}\qquad \bi{v}_1=\frac{\bi{v}}{\norm{\bi{v}}}\]</span> 从这两个矢量开始构建起一套子空间的正交基(一个长方正交矩阵)<span class="math display">\[\b{V}=(\bi{v}_1,\bi{v}_2,\cdots,\bi{v}_m)\in\R^{n\times m}\]</span> 原始矩阵在这套正交基下的新表示为: <spanclass="math inline">\(t_{jk}=\bi{v}_j^\b{T}\b{A}\bi{v}_k\)</span>.</p><p>新矩阵当然是对称的, 更进一步地, 我们希望它是三对角的: <spanclass="math display">\[\b{T}=\begin{pmatrix}\alpha_1 &amp; \beta_1 &amp;\\\beta_1 &amp; \alpha_2 &amp; \ddots\\&amp; \ddots&amp; \ddots &amp; \ddots &amp;\\&amp; &amp; \ddots &amp; \alpha_{m-1} &amp; \beta_{m-1}\\&amp; &amp; &amp;\beta_{m-1} &amp; \alpha_m\end{pmatrix}\]</span> 由于<spanclass="math inline">\(\b{A}\b{V}=\b{V}\b{T}\)</span>, 得 <spanclass="math display">\[\b{A}\bi{v}_k=\beta_{k-1}\bi{v}_{k-1}+\alpha_k\bi{v}_k+\beta_k\bi{v}_{k+1}\]</span> 它实际上规定了迭代方程, 两边左乘<spanclass="math inline">\(\bi{v}_k\)</span>, 得到<spanclass="math inline">\(\alpha_k\)</span>: <span class="math display">\[\begin{align}\alpha_k&amp;=\bi{v}_k^\b{T}\b{A}\bi{v}_k\\\beta_k\bi{v}_{k+1}&amp;=\b{A}\bi{v}_k-\alpha_k\bi{v}_k-\beta_{k-1}\bi{v}_{k-1}\end{align}\]</span> <span class="math inline">\(\beta_k\)</span>又该如何确定?假设已知<span class="math inline">\(\beta_{k-1}\)</span>,对右边取模即可. 为了保证递推式的成立, 规定<spanclass="math inline">\(\beta_0=0\)</span>.</p><p>完整递推过程如下(<spanclass="math inline">\(k=1,\cdots,m-1\)</span>):</p><ol type="1"><li><spanclass="math inline">\(\alpha_k=\bi{v}_k^\b{T}\b{A}\bi{v}_k\)</span>;</li><li><spanclass="math inline">\(\bi{w}_k=\b{A}\bi{v}_k-\alpha_k\bi{v}_k-\beta_{k-1}\bi{v}_{k-1}\)</span>;</li><li><spanclass="math inline">\(\beta_k=\norm{\bi{w}_k},\bi{v}_{k+1}=\displaystyle\frac{\bi{w}_k}{\beta_{k}}\)</span>;</li><li><span class="math inline">\(k+\!\!=1\)</span>;</li><li>如果<span class="math inline">\(k\)</span>循环结束, 计算<spanclass="math inline">\(\alpha_m=\bi{v}_m^\b{T}\b{A}\bi{v}_m\)</span>.</li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>可以约定:零值相对前一项永远算作变号, 它的后一项相对零值永不算变号<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>本征值问题</tag>
      
      <tag>Givens 变换</tag>
      
      <tag>Gershgorin 圆盘</tag>
      
      <tag>Krylov 子空间</tag>
      
      <tag>Sturm 序列</tag>
      
      <tag>Lanczos 迭代法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(08)：关于线性代数的进一步讨论</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(08)%EF%BC%9A%E5%85%B3%E4%BA%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%9A%84%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%A8%E8%AE%BA/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(08)%EF%BC%9A%E5%85%B3%E4%BA%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%9A%84%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%A8%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\K}{\mathbb{K}}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\mdl}[1]{\left|\!\left|#1\right|\!\right|}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\dim}[1]{\text{dim}\left(#1\right)}\newcommand{\diag}[1]{\text{diag}\left(#1\right)}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\)</span>对本征值问题的讨论即将收尾, 在此之前,有必要进一步将前置的数学工具(尽管不一定用得上)陈列如下.</p><h2 id="对角化和-jordan-标准型">对角化和 Jordan 标准型</h2><h3 id="正规矩阵">正规矩阵</h3><p>在第4节讨论数学时, 我们提到了<ahref="../线性方程组与本征值问题(04)：本征值问题的一般描述/#本征多项式-本征子空间-本征值的重数">重数与亏损</a>还有对角化的联系:亏损等价于不可对角化. 可对角化的矩阵非常常见, 例如自伴矩阵和酉矩阵,它们有一个共同的特点: 都和自己的共轭对易 <span class="math display">\[\b{A}\b{A}^\dagger=\b{A}^\dagger\b{A}\]</span> 这类矩阵被称为 <strong>正规矩阵</strong>. 可以证明:能酉对角化的矩阵必定正规: <span class="math display">\[\begin{cases}\begin{aligned}\b{U}^\dagger\b{A}\b{U}&amp;=\b{D}\\&amp;\Downarrow\dagger\\\b{U}^\dagger\b{A}^\dagger\b{U}&amp;=\b{D}^\dagger\end{aligned}\end{cases}\overset{multiply}{\Longrightarrow}\begin{cases}\begin{aligned}\b{U}^\dagger\b{A}\b{A}^\dagger\b{U}&amp;=\b{D}\b{D}^\dagger\\\\\b{U}^\dagger\b{A}^\dagger\b{A}\b{U}&amp;=\b{D}^\dagger\b{D}\end{aligned}\end{cases}\]</span> 对角矩阵天然地和共轭对易, 不同顺序乘法的右侧相等,因此左侧也相等, 得证.</p><p>同理, 正规矩阵必定能酉对角化, 先考虑 Schur 分解定理: <spanclass="math display">\[\begin{cases}\begin{aligned}\b{U}^\dagger\b{A}\b{U}&amp;=\b{H}\\&amp;\Downarrow\dagger\\\b{U}^\dagger\b{A}^\dagger\b{U}&amp;=\b{H}^\dagger\end{aligned}\end{cases}\overset{multiply}{\Longrightarrow}\begin{cases}\begin{aligned}\b{U}^\dagger\b{A}\b{A}^\dagger\b{U}&amp;=\b{H}\b{H}^\dagger\\\\\b{U}^\dagger\b{A}^\dagger\b{A}\b{U}&amp;=\b{H}^\dagger\b{H}\end{aligned}\end{cases}\Longrightarrow\b{H}\b{H}^\dagger=\b{H}^\dagger\b{H}\]</span> 其中<span class="math inline">\(\b{H}\in\C^{n\timesn}\)</span>是一个上三角矩阵: <span class="math display">\[h_{jk}\begin{cases}\displaystyle\neq0\qquad j\le k\\\displaystyle=0\qquad j&gt;k\end{cases}\qquad(h^\dagger)_{jk}\begin{cases}\displaystyle\neq0\qquad j\ge k\\\displaystyle=0\qquad j&lt;k\end{cases}\]</span> 即 <span class="math display">\[[\b{H}\b{H}^\dagger]_{jj}=\sum_{l=j}^n\abs{h_{jl}}^2=[\b{H}^\dagger\b{H}]_{jj}=\sum_{l=1}^j\abs{h_{lj}}^2\]</span></p><ol type="1"><li>取<span class="math inline">\(j=1\)</span>, 得到<spanclass="math inline">\(h_{12},h_{13},\cdots,h_{1n}\)</span>的模方和为<spanclass="math inline">\(0\)</span></li><li>取<span class="math inline">\(j=2\)</span>, 得到<spanclass="math inline">\(h_{23},h_{24},\cdots,h_{2n}\)</span>的模方和为<spanclass="math inline">\(\abs{h_{12}}^2\)</span>, 此前求出为<spanclass="math inline">\(0\)</span></li><li>取<span class="math inline">\(j=3\)</span>, 得到<spanclass="math inline">\(h_{34},\cdots,h_{3n}\)</span>的模方和为<spanclass="math inline">\(\abs{h_{13}}^2+\abs{h_{23}}^2\)</span>,此前已求出为<span class="math inline">\(0\)</span></li><li>...</li></ol><p>像这样逐步推导, 得到所有非对角元都为<spanclass="math inline">\(0\)</span>, 即上三角矩阵<spanclass="math inline">\(\b{H}\)</span>是对角矩阵, 得证.</p><h3 id="jordan-标准型">Jordan 标准型</h3><p>正规矩阵等价于可以酉对角化,而非正规的矩阵就无法酉对角化乃至无法(相似)对角化了, 例如下面的矩阵 <spanclass="math display">\[\b{J}_\nu(\lambda)=\begin{pmatrix}\lambda &amp; 1 &amp; 0 &amp; \cdots  &amp; 0\\0 &amp; \lambda &amp; \ddots &amp; \ddots &amp; \vdots\\\vdots &amp; \ddots &amp; \ddots &amp; \ddots &amp; 0\\\vdots &amp; &amp; \ddots &amp; \lambda &amp; 1\\0 &amp; \cdots &amp; \cdots &amp; 0 &amp; \lambda\end{pmatrix}\]</span> 其中<span class="math inline">\(\nu\)</span>为阶数. 不难验证,它具有<span class="math inline">\(\nu\)</span>重本征值<spanclass="math inline">\(\lambda\)</span>, 但本征子空间仅为<spanclass="math inline">\(1\)</span>维, 显然是亏损矩阵, 不可对角化.这样的矩阵叫做 <strong>Jordan 块矩阵</strong>(<spanclass="math inline">\(\nu\ge2\)</span>); 对于<spanclass="math inline">\(\nu=1\)</span>, 约定 Jordan 块矩阵退化为<spanclass="math inline">\(\lambda\)</span>.</p><p>我们不加证明地给出如下定理:</p><blockquote><p>对于任意<span class="math inline">\(\b{A}\in\C^{n\times n}\)</span>,总有满秩矩阵<span class="math inline">\(\b{X}\in\C^{n\times n}\)</span>,<span class="math inline">\(\text{s.t.}\)</span> <spanclass="math display">\[\b{X}^{-1}\b{A}\b{X}=\diag{\b{J}_{\nu_1}(\lambda_1),\cdots,\b{J}_{\nu_{k}}(\lambda_k)}\]</span> <spanclass="math inline">\(\lambda_1\sim\lambda_k\)</span>是矩阵的本征值(可能相等).</p></blockquote><p>这个对角形式称作矩阵<span class="math inline">\(\b{A}\)</span>的<strong>Jordan 标准型</strong>. 需要说明的是</p><ol type="1"><li><p>一个本征值可能对应多个 Jordan 块, <spanclass="math inline">\(\text{e.g.}\)</span> <span class="math display">\[\begin{pmatrix}\lambda &amp; 1 &amp; 0\\0 &amp; \lambda &amp; 0\\0 &amp; 0 &amp; \lambda\end{pmatrix}\]</span> 这其实就是两个 Jordan 块, 一个二阶和一个一阶;</p></li><li><p>一个本征值对应的 Jordan 块数目等于它的独立本征矢数目(几何重数),整个矩阵的 Jordan 块数就是总的独立本征矢数目;</p></li><li><p>矩阵可对角化<spanclass="math inline">\(\Leftrightarrow\)</span>标准型中的 Jordan块都是一阶.</p></li></ol><p>从这些结论能够立即得到: <strong>本征值全不等(即有<spanclass="math inline">\(n\)</span>个不等的本征值)的矩阵一定是可对角化的</strong>, 这个也可由重数的结论导出, 因为几何重数至少为<spanclass="math inline">\(1\)</span>, 因此代数重数全为<spanclass="math inline">\(1\)</span>时, 几何重数不会比代数重数更小了.</p><p>简而言之, 一个矩阵是否可对角化, 与它的 Jordan 标准型挂钩.</p><h3 id="jordan-标准型的不稳定性">Jordan 标准型的不稳定性</h3><p>请看如下矩阵 <span class="math display">\[\b{A}=\begin{pmatrix}1 &amp; 1\\\epsilon &amp; 1\end{pmatrix}\]</span> 当<span class="math inline">\(\epsilon=0\)</span>时, 它已经是Jordan 标准型了; 但<span class="math inline">\(\epsilon\neq0\)</span>时,它的特征值为 <span class="math display">\[\lambda_\pm=1\pm\sqrt{\epsilon}\]</span> 对应 Jordan 标准型为 <span class="math display">\[\b{J}=\begin{pmatrix}1+\sqrt{\epsilon} &amp; 0\\0 &amp; 1-\sqrt{\epsilon}\end{pmatrix}\]</span> 换言之, 矩阵元<spanclass="math inline">\(j_{12}(\epsilon)\)</span>关于<spanclass="math inline">\(\epsilon\)</span>是非连续的,这表明它在数值计算中非常不稳定, 因此实际运算中, 很少利用 Jordan标准型完成某些任务, 但前面的大量分析说明它具有一定的指导意义.</p><h2 id="本征值的分布">本征值的分布</h2><p>Gershgorin 对于本征值在复平面上的分布提出了一系列定理,其中最为重要的是:</p><blockquote><p>对任意<span class="math inline">\(\b{A}\in\C^{n\times n}\)</span>,构建<span class="math inline">\(n\)</span>个圆盘 <spanclass="math display">\[\mathcal{R}_j=\set{z\in\C\Bigg|\abs{z-a_{jj}}\le\sum_{k=1,k\neqj}^{n}\abs{a_{jk}}}\]</span> 这种圆盘叫 <strong>Gershgorin 圆盘</strong>,则矩阵的本征谱满足 <span class="math display">\[\sigma(\b{A})\subset\bigcup_{j=1}^n\mathcal{R}_j\]</span></p></blockquote><p>这个称为 <strong>Gershgorin 圆盘定理</strong>,它说明矩阵的本征值一定落在这些圆盘中. 特别是自伴矩阵,它的本征值一定是实数, 圆盘退化为实轴上的区间.</p><h2 id="krylov-子空间">Krylov 子空间</h2><h3 id="解线性方程组和-krylov-子空间">解线性方程组和 Krylov 子空间</h3><p>这个方法可能最早来自求解线性方程组.有时候线性方程组的系数矩阵是大型稀疏矩阵, 而求解又不需要严格成立,这时可以设法在一个子空间中求它的近似解.</p><p>线代中有一条 Cayley-Hamilton 定理: <spanclass="math inline">\(p_\b{A}(\b{A})=\b{O}\)</span>, 其中<spanclass="math inline">\(p_\b{A}(x)\)</span>是矩阵<spanclass="math inline">\(\b{A}\)</span>的特征多项式. 具体地, 可以写作 <spanclass="math display">\[c_{n}\b{A}^n+c_{n-1}\b{A}^{n-1}+\cdots+1=\b{O}\]</span> 进一步假设<span class="math inline">\(\b{A}\)</span>是可逆的,那么<spanclass="math inline">\(\b{A}^{-1}=-c_{n}\b{A}^{n-1}-c_{n-1}\b{A}^{n-2}-\cdots\)</span>,而线性方程组也可表示为 <span class="math display">\[\b{A}\bi{x}=\bi{b}\Rightarrow\bi{x}=-\sum_{j=0}^{n-1}c_{j+1}\b{A}^j\bi{b}\]</span> 这实际上给了我们一定的灵感.我们深知方程求根和优化问题的相似性: <span class="math display">\[\text{solve}\b{A}\bi{x}=\bi{b}\Leftrightarrow\underset{\bi{x}\in\K^n}{\displaystyle\text{min}}\mdl{\bi{b}-\b{A}\bi{x}}\]</span> 那么近似求根,也就相当于在更低维(独立矢量和包含信息更少)的子空间进行优化: <spanclass="math display">\[\text{approx-solve }\b{A}\bi{x}=\bi{b}\Leftrightarrow\underset{\bi{x}\inK_m}{\displaystyle\text{min}}\mdl{\bi{b}-\b{A}\bi{x}}\]</span> 其中, <spanclass="math inline">\(K_m(\b{A};\bi{b})\)</span>是一个子空间,它由如下矢量生成: <span class="math display">\[K_m(\b{A};\bi{b}):=\text{span}\{\bi{b},\b{A}\bi{b},\cdots,\b{A}^{m-1}\bi{b}\}\]</span> 称为 <strong>Krylov 子空间</strong>. 根据 Cayley-Hamilton定理, 当<span class="math inline">\(m=n+1\)</span>时,这个矢量组就必定能互相线性表出, 因此<spanclass="math inline">\(m\)</span>无论取多少, 总有<spanclass="math inline">\(\dim{K_m}\le\min{\{m,n\}}\)</span>.</p><h3 id="krylov-子空间的实例-共轭梯度法">Krylov 子空间的实例:共轭梯度法</h3><p>之前的数学准备不足, 现在可以介绍一下共轭梯度法和 Krylov子空间的联系了. 我们考虑一个二次型函数 <span class="math display">\[f(\bi{x})=-\bi{b}^\b{T}\bi{x}+\frac{1}{2}\bi{x}^\b{T}\b{A}\bi{x}\]</span> 它的优化条件是<spanclass="math inline">\(\bi{r}=\bi{b}-\b{A}\bi{x}=0\)</span>, 或者<spanclass="math inline">\(\underset{\bi{x}\in\R^n}{\min}\mdl{\bi{b}-\b{A}\bi{x}}\)</span>.</p><p>共轭梯度法采用的 Krylov 子空间为<spanclass="math inline">\(K_m(\b{A};\bi{r}_0)\)</span>,每一步搜索方向都从这个子空间中挑选. 单纯的<spanclass="math inline">\(\b{A}^j\bi{r}_0\)</span>往往并不是正交的,而且计算不便,所以搜索方向<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="它同样不是正交的, 很快会得到解释">[1]</span></a></sup>也不是单纯的<spanclass="math inline">\(\b{A}^j\bi{r}_0\)</span>: <spanclass="math display">\[\bi{p}_k=g_k(\bi{r}_0,\b{A}\bi{r}_0, \cdots,\b{A}^{k-1}\bi{r}_0)\]</span> 每次搜索<spanclass="math inline">\(\bi{x}_k+\!\!=\alpha_k\bi{p}_k,\bi{r}_k-\!\!=\alpha_k\b{A}\bi{p}_k\)</span>, 都保证残差<spanclass="math inline">\(\bi{r}\)</span>完全失去一个方向上的值: <spanclass="math inline">\(\bi{r}_{k+1}^\b{T}\bi{p}_k=0\)</span>.</p><p>这时, 残差(等价于位置)的递推式已经给出: <span class="math display">\[\bi{r}_{k+1}=\bi{r}_k-\alpha_k\b{A}\bi{p}_k\qquad\alpha_k\text{满足:}\quad\bi{r}_{k+1}^\b{T}\bi{p}_k=0\]</span> 现在有必要考虑搜索方向如何更新, 一种思路是, 保证搜索方向在Krylov 子空间构成正交矢量组 <span class="math display">\[\bi{p}_{k+1}^\b{T}\bi{p}_k=0\]</span> 这看起来非常好, 承担着 Schmidt 正交化的任务;但是稍加思索就能发现这是不合理的. 每一步残差扣除的部分为<spanclass="math inline">\(\b{A}\bi{p}_k\)</span>,需要避免新的搜索方向"破坏"这个既有成果, 因此 <spanclass="math display">\[\bi{p}_{k+1}^\b{T}\b{A}\bi{p}_k=0\]</span> 另外, <spanclass="math inline">\(\bi{p}_{k+1}\)</span>当然和新的残差有关<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="应该没人喜欢完全用原始的矢量组构建各级搜索方向">[2]</span></a></sup>,你总是从残差的大小和方向确定优化方向, 所以<spanclass="math inline">\(\bi{p}_{k+1}\)</span>由<spanclass="math inline">\(\bi{r}_{k+1}\)</span>和<spanclass="math inline">\(\bi{p}_k\)</span>决定 <spanclass="math display">\[\bi{p}_{k+1}=\bi{r}_{k+1}+\beta_k\bi{p}_k\qquad\beta_k满足:\quad\bi{p}_{k+1}^\b{T}\b{A}\bi{p}_k=0\]</span></p><p>这些正是共轭梯度法的基本思路. 共轭梯度法的各级搜索方向在 Krylov子空间中构成了共轭正交的矢量组. 实际上还可以证明, 残差也在子空间中,并且是正交矢量组.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>它同样不是正交的,很快会得到解释<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>应该没人喜欢完全用原始的矢量组构建各级搜索方向<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>共轭梯度法</tag>
      
      <tag>本征值问题</tag>
      
      <tag>正规矩阵</tag>
      
      <tag>Jordan 标准型</tag>
      
      <tag>Gershgorin 圆盘</tag>
      
      <tag>Krylov 子空间</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(07)：非标准的 QR 算法</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(07)%EF%BC%9A%E9%9D%9E%E6%A0%87%E5%87%86%E7%9A%84%20QR%20%E7%AE%97%E6%B3%95/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(07)%EF%BC%9A%E9%9D%9E%E6%A0%87%E5%87%86%E7%9A%84%20QR%20%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\R}{\mathbb{R}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\mdl}[1]{\left|\!\left|#1\right|\!\right|}\newcommand{\abs}[1]{\left|#1\right|}\)</span>前一篇笔记给出了任意方矩阵的Hessenberg-Householder 约化方法, 即如何把任意方矩阵变换为上 Hessenberg矩阵; 这一节中讨论如何对上 Hessenberg 矩阵进行 QR 分解,它比普通方阵具有什么样的优势, 并引入shifted-QR算法解决非对角元收敛过慢的问题.</p><h2 id="givens-变换矩阵">Givens 变换矩阵</h2><p>请原谅我一直引入新概念, 但这对后面的讨论是有好处的, 所谓<strong>Givens 变换矩阵</strong>, 其实就是在第<spanclass="math inline">\(j,k\)</span>维度的子空间上做一个类似<spanclass="math inline">\(x,y\)</span>平面上的转动. <spanclass="math display">\[\text{e.g.}\qquad\b{G}(1,2,\theta)=\begin{pmatrix}\cos\theta &amp; \sin\theta\\-\sin\theta &amp; \cos\theta\\&amp; &amp; \b{I}_{n-2}\end{pmatrix}\]</span> 一般形式比较繁琐, 按下不表. 不难知道, 将 Givens矩阵左乘上任意方矩阵做变换, 只有第<spanclass="math inline">\(j,k\)</span>两行发生改变; 右乘, 则只有<spanclass="math inline">\(j,k\)</span>两列改变.</p><h2 id="hessenberg-qr-分解">Hessenberg-QR 分解</h2><p>给定一个上 Hessenberg 矩阵<spanclass="math inline">\(\b{H}\)</span>(具体形式如下), 并且做一个 Givens转动:</p><p><span class="math display">\[\begin{pmatrix}* &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\\boxed{*} &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; 0 &amp; * &amp; * &amp; * &amp; *\\\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \ddots &amp; \vdots&amp; \vdots\\0 &amp; 0 &amp; 0 &amp; \cdots &amp; 0 &amp; * &amp; *\end{pmatrix}\overset{\b{G}^\b{T}(1,2,\theta_1)}{\longrightarrow}\begin{pmatrix}* &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\\boxed{0} &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; 0 &amp; * &amp; * &amp; * &amp; *\\\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \ddots &amp; \vdots&amp; \vdots\\0 &amp; 0 &amp; 0 &amp; \cdots &amp; 0 &amp; * &amp; *\end{pmatrix}\]</span></p><p>注意: Givens 矩阵显然会修改前两行的所有非零值, 我们设定一个转角<spanclass="math inline">\(\theta_1\)</span>, 使得框选出的元恰好变为零元,其它元未必变成零元.</p><p>接着, 再在第<span class="math inline">\(2,3\)</span>行做一个 Givens转动, 同样设定一个转角<span class="math inline">\(\theta_2\)</span>,恰好把框选出的下对角元变为零元:</p><p><span class="math display">\[\begin{pmatrix}* &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; \boxed{*} &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; 0 &amp; * &amp; * &amp; * &amp; *\\\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \ddots &amp; \vdots&amp; \vdots\\0 &amp; 0 &amp; 0 &amp; \cdots &amp; 0 &amp; * &amp; *\end{pmatrix}\overset{\b{G}^\b{T}(2,3,\theta_2)}{\longrightarrow}\begin{pmatrix}* &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; * &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; \boxed{0} &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; * &amp; \cdots &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; 0 &amp; * &amp; * &amp; * &amp; *\\\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \ddots &amp; \vdots&amp; \vdots\\0 &amp; 0 &amp; 0 &amp; \cdots &amp; 0 &amp; * &amp; *\end{pmatrix}\]</span></p><p>这样, 我们一共经过<span class="math inline">\(n-1\)</span>个 Givens转动, 上 Hessenberg 矩阵被变换为上三角矩阵:</p><p><span class="math display">\[\b{U}=\left(\prod_{j=1}^{n-1}\b{G}^\b{T}(n-j,n-j+1,\theta_{n-j})\right)\b{H}\]</span></p><p>然后再对<span class="math inline">\(\b{U}\)</span>右乘一系列 Givens矩阵, 得到新的矩阵:</p><p><span class="math display">\[\b{H}^{(1)}=\b{U}\prod_{j=1}^{n-1}\b{G}(j,j+1,\theta_j)\]</span></p><p>不难验证, <span class="math inline">\(\b{H}^{(1)}\)</span>仍然是上Hessenberg 矩阵. 注意到 Givens 矩阵是正交的, 因此上面两个公式就是对<spanclass="math inline">\(\b{H}\)</span>的 QR 分解. 把一个矩阵<spanclass="math inline">\(\b{A}\)</span>先进行 Hessenberg 约化得到<spanclass="math inline">\(\b{H}\)</span>, 再像这样作 QR 分解, 称之为<strong>Hessenberg-QR</strong> 分解.</p><h3 id="计算量">计算量</h3><p>确定转角比较简单, 关键是变换过程. 每乘上一个 Givens 矩阵需要改变两行,即:</p><ol type="1"><li>第<span class="math inline">\(1,2\)</span>行, 计算<spanclass="math inline">\(2n\)</span>个矩阵元</li><li>第<span class="math inline">\(2,3\)</span>行, 计算<spanclass="math inline">\(2n-2\)</span>个矩阵元</li><li>...</li><li>第<span class="math inline">\(n-1,n\)</span>行, 计算<spanclass="math inline">\(4\)</span>个矩阵元</li></ol><p>共计算<span class="math inline">\((n+2)(n-1)\)</span>个矩阵元,每个矩阵元需要两次乘法, 一次加法, 计算量为<spanclass="math inline">\(\lambda(n+2)(n-1)\)</span>, <spanclass="math inline">\(2&lt;\lambda&lt;3\)</span>.</p><p>又因为 Givens 矩阵有左乘和右乘两次乘法, 所以计算量约为<spanclass="math inline">\(4n^2\sim6n^2\)</span>(按照乘法次数计算).这比标准的 QR 分解少多了. 要知道,以得到本征谱或者再加上全体本征矢为目的时, 分解原始矩阵<spanclass="math inline">\(\b{A}\)</span>和分解<spanclass="math inline">\(\b{H}\)</span>没什么区别, 两者本征值一样,本征矢相差一个总的旋转矩阵. 因此在迭代次数比较多时, Hessenberg-QR分解比原始分解方法节约了计算量.</p><h3 id="hessenberg-qr-分解的局限性">Hessenberg-QR 分解的局限性</h3><p>这实际上也是(标准)QR分解的局限性.第5节最后给出的<a href="../线性方程组与本征值问题(05)：原始的 QR 算法/#下面的定理给出实-schur-形式和-qr-分解的联系">定理</a>提到,矩阵非对角元的在 QR 分解下的收敛速度为 <span class="math display">\[\abs{t_{ij}^{(k)}}\sim\abs{\frac{\lambda_i}{\lambda_j}}^k,\abs{\lambda_i} \le \abs{\lambda_j}\]</span> 注意到它是可以取等的, 因此, 如果具有一对互为相反数的实本征值,则它们的交叉项无法收敛到<span class="math inline">\(0\)</span>;如果模相近, 则交叉项收敛非常慢, 这都导致最终无法得到实 Schur形式——它要求所有实本征值都以对角元而非对角块的形式出现.</p><h2 id="shifted-qr-分解">shifted-QR 分解</h2><p>为了解决本征值模相近或相等时给迭代带来的困难,一个比较自然的想法就是给矩阵加上对角项的漂移: <spanclass="math display">\[\begin{align}\b{Q}^{(k)}\b{R}^{(k)}&amp;=\b{T}^{(k-1)}-\mu\b{I}\\\b{T}^{(k)}&amp;=\b{R}^{(k)}\b{Q}^{(k)}+\mu\b{I}\end{align}\]</span> 这样, 实际参与分解的本征值为<spanclass="math inline">\(\{\lambda_1-\mu,\lambda_2-\mu,\cdots,\lambda_n-\mu\}\)</span>,分解完毕后又把本征值还原.</p><p>显然, 这时仍须满足本征值的不等式: <spanclass="math inline">\(\abs{\lambda_1-\mu}\ge\abs{\lambda_2-\mu}\ge\cdots\ge\abs{\lambda_n-\mu}\)</span>,注意到每次分解可以采用不同的<span class="math inline">\(\mu\)</span>,考虑采用<span class="math inline">\(\mu^{(k)}=t_{n,n}^{(k)}\)</span>,则<span class="math inline">\(\lambda_n-\mu\)</span>的模始终很小,这会让<span class="math inline">\(t_{n,n-1}\)</span>快速趋于<spanclass="math inline">\(0\)</span>.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>本征值问题</tag>
      
      <tag>QR 算法</tag>
      
      <tag>QR 分解</tag>
      
      <tag>Givens 变换</tag>
      
      <tag>Hessenberg-QR 分解</tag>
      
      <tag>shifted-QR 分解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(06)：Householder 变换和 Hessenberg 约化</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(06)%EF%BC%9AHouseholder%20%E5%8F%98%E6%8D%A2%E5%92%8C%20Hessenberg%20%E7%BA%A6%E5%8C%96/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(06)%EF%BC%9AHouseholder%20%E5%8F%98%E6%8D%A2%E5%92%8C%20Hessenberg%20%E7%BA%A6%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="householder-变换">Householder 变换</h2><p><spanclass="math inline">\(\newcommand{\R}{\mathbb{R}}\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\mdl}[1]{\left|\!\left|#1\right|\!\right|}\)</span>考虑一个矢量<spanclass="math inline">\(\bi{v}\in\R\)</span>, 构造一个反射矩阵 <spanclass="math display">\[\b{P}_{\boldsymbol{v}}=\b{I} -\frac{2\bi{v}\bi{v}^\b{T}}{\mdl{\bi{v}}^2}\]</span> 之所以称作反射矩阵, 是因为它和右侧任何矢量的积为 <spanclass="math display">\[\b{P}_\bi{v}\bi{x}=\bi{x}-\frac{2\bi{v}^\b{T}\cdot\bi{x}}{\bi{v}^\b{T}\cdot\bi{v}}\bi{v}\]</span> 它在<spanclass="math inline">\(\bi{v}\)</span>的方向上减去了<spanclass="math inline">\(\bi{x}\)</span>分量的两倍, 相当于将其反向;而正交于<spanclass="math inline">\(\bi{v}\)</span>的任何方向上不发生变化.这个变换称作 <strong>Householder 变换</strong>. 应当指出的是</p><ol type="1"><li>Householder 变换不改变矢量的模, 因此 Householder 矩阵是一个正交矩阵;同时它还是对称矩阵.</li><li>用矩阵计算变换的时空复杂度通常为<spanclass="math inline">\(O(n^2)\)</span>, 但 Householder变换实际上只需要存储<span class="math inline">\(\bi{v}\)</span>,计算也简化为矢量内积, 复杂度为<spanclass="math inline">\(O(n)\)</span>.</li></ol><p>现在考虑一种特殊情况: <spanclass="math inline">\(\bi{x}\)</span>和<spanclass="math inline">\(\bi{v}\)</span>相当接近,以至于只有一个方向上的区别 <span class="math display">\[\bi{v}=\bi{x}\pm\mdl{\bi{x}}\bi{e}_m\qquad\Rightarrow\qquad\b{P}_\bi{v}\bi{x}=\bi{x}-\bi{v}=\mp\mdl{\bi{x}}\bi{e}_m\]</span></p><p>这样的Householder变换将原矢量转动到这个方向上.</p><p>同理, 构造矩阵 <span class="math display">\[\b{P}_{(k)}=\begin{pmatrix}\b{I}_{k} &amp; \b{O}\\\b{O} &amp; \b{P}_\bi{v}\end{pmatrix}\qquad\text{其中, }\bi{v}=\bi{x}_{(n-k)} + \mdl{\bi{x}_{(n-k)}}\bi{e}_{k+1}\]</span> 所谓的<spanclass="math inline">\(\bi{x}_{(n-k)}\)</span>指<spanclass="math inline">\(\bi{x}\)</span>的后<spanclass="math inline">\(n-k\)</span>维构成的矢量. 这样, 有 <spanclass="math display">\[\b{P}_{(k)}\bi{x}=\begin{pmatrix}\b{I}_{k} &amp; \b{O}\\\b{O} &amp; \b{P}_\bi{v}\end{pmatrix}\cdot\begin{pmatrix}\bi{x}^{(k)}\\\bi{x}_{(n-k)}\end{pmatrix}=\begin{pmatrix}\bi{x}^{(k)}\\\mdl{\bi{x}_{(n-k)}}\\0\\\vdots\end{pmatrix}\]</span> 其实它还是 Householder 变换, 把 Householder 矢量的维数补全即可<span class="math display">\[\bi{u}=\begin{pmatrix}\b{0}\\\bi{v}\end{pmatrix}\Rightarrow\b{P}_{(k)}=\b{P}_\bi{u}\]</span> 这种变换保持矢量的前<spanclass="math inline">\(k\)</span>维不变, 后<spanclass="math inline">\(n-k\)</span>维整体转动到第<spanclass="math inline">\(k+1\)</span>个基矢量上.</p><p>我们更感兴趣的是以它为转动矩阵的相似变换: <spanclass="math display">\[\b{P}_{(k)}^\b{T}\b{A}\b{P}_{(k)}=\begin{pmatrix}\b{A}_{11} &amp; \b{A}_{12}\b{P}_\bi{v}\\\b{P}_\bi{v}\b{A}_{21} &amp; \b{P}_\bi{v}\b{A}_{22}\b{P}_\bi{v}\end{pmatrix}\]</span> 假设对于任意<span class="math inline">\(k\)</span>, <spanclass="math inline">\(\b{P}_\bi{v}\)</span>的选取都以<spanclass="math inline">\(\b{A}_{21}\)</span>的最后一个列矢量为<spanclass="math inline">\(\bi{x}\)</span>; 进一步假设<spanclass="math inline">\(\b{A}_{21}\)</span>的其它列均为<spanclass="math inline">\(0\)</span>, 则 <span class="math display">\[\b{P}_\bi{v}\b{A}_{21}=\begin{pmatrix}\b{O} &amp; \begin{matrix}\mdl{\bi{x}} \\ 0 \\ \vdots \\ 0 \\ 0\end{matrix}\end{pmatrix}\]</span></p><h2 id="hessenberg-约化">Hessenberg 约化</h2><p>按照这种构造方式, 可以将任意矩阵逐步约化.</p><ol type="1"><li>对原始矩阵用<span class="math inline">\(\b{P}_{(1)}\)</span>转动,则第<span class="math inline">\(1\)</span>列从第<spanclass="math inline">\(3\)</span>行开始变为<spanclass="math inline">\(0\)</span>;</li><li>对更新后的矩阵用<spanclass="math inline">\(\b{P}_{(2)}\)</span>转动, 则第<spanclass="math inline">\(2\)</span>列从第<spanclass="math inline">\(4\)</span>行开始变为<spanclass="math inline">\(0\)</span>;</li><li>...</li><li>对更新后的矩阵, 用<spanclass="math inline">\(\b{P}_{(n-2)}\)</span>转动, 则第<spanclass="math inline">\(n-2\)</span>列只让第<spanclass="math inline">\(n\)</span>行变为<spanclass="math inline">\(0\)</span>.</li></ol><p>下面给出<span class="math inline">\(n=4\)</span>矩阵的约化过程,每次把<span class="math inline">\(\b{A}_{21}\)</span>框出: <spanclass="math display">\[\begin{pmatrix}* &amp; \begin{matrix}* &amp; * &amp; *\end{matrix}\\\boxed{\begin{matrix}* \\ * \\ *\end{matrix}}&amp;\begin{matrix}* &amp; * &amp; * \\ * &amp; * &amp; * \\ * &amp; * &amp;*\end{matrix}\end{pmatrix}\overset{\b{P}_{(1)}旋转}{\longrightarrow}\begin{pmatrix}\begin{matrix}* &amp; * \\ * &amp; *\end{matrix}&amp;\begin{matrix}* &amp; * \\ * &amp; *\end{matrix}\\\boxed{\begin{matrix}0 &amp; * \\ 0 &amp; *\end{matrix}}&amp;\begin{matrix}* &amp; * \\ * &amp; *\end{matrix}\end{pmatrix}\overset{\b{P}_{(2)}旋转}{\longrightarrow}\begin{pmatrix}* &amp; * &amp; * &amp; *\\* &amp; * &amp; * &amp; *\\0 &amp; * &amp; * &amp; *\\0 &amp; 0 &amp; * &amp; *\end{pmatrix}\]</span> 按照这种方式, 得到矩阵的特点为: 下对角线以下的元都必定为<spanclass="math inline">\(0\)</span>, 其它元不定. 这种矩阵叫做 <strong>上Hessenberg 矩阵</strong>, 约化方案称作 <strong>Hessenberg-Householder约化</strong>.</p><h3 id="计算量">计算量</h3><ol type="1"><li>每轮约化需要得到该列对应的矢量<spanclass="math inline">\(\bi{v}\)</span>, 它需要计算列矢量的模, <spanclass="math inline">\(n\)</span>次乘法</li><li>这时还可以仅仅存储矢量, 因为<spanclass="math inline">\(\b{P}_{(k)}=\b{I}-\displaystyle\frac{2\bi{u}\bi{u}^\b{T}}{\mdl{\bi{u}}^2}\)</span>,<span class="math inline">\(\bi{u}\)</span>是包含了前<spanclass="math inline">\(k\)</span>维的零元的完整矢量.从而给每列计算变换结果时, 是<spanclass="math inline">\(n-k\)</span>次乘法; 它从第<spanclass="math inline">\(k\)</span>列计算到第<spanclass="math inline">\(n\)</span>列, 因此每轮的计算量约为<spanclass="math inline">\((n-k+1)(n-k)\)</span>.</li></ol><p>可见, 总计算量是<span class="math inline">\(O(n^3)\)</span>. 具体地,求和给出 <span class="math display">\[\sum_{k=1}^{n-2}(n-k+1)(n-k)=\frac{(n-2)(n^2+2n+3)}{3}\qquad(n\ge3)\]</span> 大约算了<span class="math inline">\(n^3/3\)</span>次,复杂度与一轮 QR 分解相当. 看起来是做无用功, 实则约化为上 Hessenberg形式对迭代非常有利, 具体怎样有利于计算是下一节将要讨论的内容.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>本征值问题</tag>
      
      <tag>QR 算法</tag>
      
      <tag>QR 分解</tag>
      
      <tag>非标准的 QR 算法</tag>
      
      <tag>Householder 变换</tag>
      
      <tag>Hessenberg-Householder 约化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(05)：原始的 QR 算法</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(05)%EF%BC%9A%E5%8E%9F%E5%A7%8B%E7%9A%84%20QR%20%E7%AE%97%E6%B3%95/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(05)%EF%BC%9A%E5%8E%9F%E5%A7%8B%E7%9A%84%20QR%20%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>对于矩阵的谱, 有几种求法:</p><ol type="1"><li>解特征多项式</li><li>任何一本线代教材都会讲到的对角化手续</li><li>...</li></ol><p>第一种方法求方程的数值解, 原则上需要迭代; 第二种不一定适用,因为矩阵未必能够对角化.是否可以找到一个求一般矩阵的本征值的"直接解法"呢?</p><p>很不幸的是, 这一点原则上是不可能的.假设存在一个有限步骤的所谓"直接算法",即通过有限多次的初等代数运算就可以获得一般矩阵的本征值,就意味着存在一个任意阶多项式求根的公式, 而这是与 Abel对高次方程的研究相矛盾的.</p><p>因此, 本征值问题的一般解仍需要迭代方法, 本节将要介绍的是著名的 QR算法.</p><h2 id="qr-分解">QR 分解</h2><p>在引入 QR 算法前, 先介绍实矩阵的 QR 分解:</p><blockquote><p>如果矩阵<span class="math inline">\(\mathbf{A}\in\mathbb{R}^{n\timesn}\)</span>并且满足 <span class="math display">\[\mathbf{A}=\mathbf{Q}\mathbf{R}\]</span> 其中, <span class="math inline">\(\mathbf{Q}\)</span>和<spanclass="math inline">\(\mathbf{R}\)</span>分别是正交矩阵和上三角矩阵,则称之为矩阵<span class="math inline">\(\mathbf{A}\)</span>的一个<strong>QR 分解</strong>.</p></blockquote><h3 id="非奇异矩阵">非奇异矩阵</h3><p>QR 分解的存在性可以利用所谓的 Schmidt 正交归一化来说明. 考虑<spanclass="math inline">\(\mathbf{A}\)</span>的列向量组<spanclass="math inline">\(\{\pmb{\alpha}_1,\pmb{\alpha}_2,\cdots,\pmb{\alpha}_n\}\)</span>​线性无关,那么有所谓的 <strong>Schmidt 正交归一化手续</strong> 得到一个正交归一基:<span class="math display">\[\begin{align}\pmb{\gamma}_1 &amp;= \frac{\pmb{\beta}_1}{|\!|\pmb{\beta}_1|\!|}\qquad\pmb{\beta}_1 = \pmb{\alpha}_1\\\pmb{\gamma}_2 &amp;= \frac{\pmb{\beta}_2}{|\!|\pmb{\beta}_2|\!|}\qquad\pmb{\beta}_2 = \pmb{\alpha}_2-(\pmb{\alpha}_2,\pmb{\gamma}_1)\pmb{\gamma}_1\\&amp;\qquad\qquad\vdots\\\pmb{\gamma}_k &amp;= \frac{\pmb{\beta}_k}{|\!|\pmb{\beta}_k|\!|}\qquad\pmb{\beta}_k = \pmb{\alpha}_k-\sum_{j=1}^{k-1}(\pmb{\alpha}_k, \pmb{\gamma}_j)\pmb{\gamma}_j\\&amp;\qquad\qquad\vdots\end{align}\]</span> 其中, <span class="math inline">\(k=1,2,\cdots,n\)</span>,<span class="math inline">\((\sim_1,\sim_2)\)</span>表示向量的内积.如果定义新的矩阵元 <span class="math display">\[r_{jk}=\begin{align*}\begin{cases}\displaystyle(\pmb{\alpha}_k,\pmb{\gamma}_j)\qquad &amp;j&lt;k\\\\\displaystyle|\!|\pmb{\beta}_k|\!| &amp;j=k\\\\\displaystyle0 &amp;j&gt;k\end{cases}\end{align*}\]</span> 则有 <span class="math display">\[\pmb{\alpha}_k=\sum_{j=1}^n\pmb{\gamma}_{j}r_{jk}\qquad\Rightarrow\qquad\begin{pmatrix}\pmb{\alpha}_1&amp;\cdots&amp;\pmb{\alpha}_n\end{pmatrix}=\begin{pmatrix}\pmb{\gamma}_1&amp;\cdots&amp;\pmb{\gamma}_n\end{pmatrix}\begin{pmatrix}r_{11} &amp; r_{12} &amp; \cdots &amp; r_{1n}\\&amp; r_{22} &amp; \cdots &amp; r_{2n}\\&amp;&amp; \ddots &amp; \vdots\\&amp;&amp;&amp; r_{nn}\end{pmatrix}\]</span> 即<spanclass="math inline">\(\mathbf{A}=\mathbf{Q}\mathbf{R}\)</span>.可见任何非奇异方阵都存在 QR 分解.</p><h3 id="奇异矩阵">奇异矩阵</h3><p>考虑<span class="math inline">\(\mathbf{A}\in\mathbb{R}^{n\timesn}\)</span>, 且<spanclass="math inline">\(\text{rank}(\mathbf{A})=m\)</span>.和上面相当类似, 对于前<spanclass="math inline">\(k\)</span>列构成的向量组<spanclass="math inline">\(\{\pmb{\alpha}_1,\cdots,\pmb{\alpha}_k\}\)</span>,设它的秩为<span class="math inline">\(m_k\)</span>, 显然<spanclass="math inline">\(m_1=1\)</span>, <spanclass="math inline">\(m_n=m\)</span>. 可以找到<spanclass="math inline">\(\{\pmb{\varepsilon}_1,\cdots,\pmb{\varepsilon}_{m_k}\}\)</span>这<spanclass="math inline">\(m_k\)</span>个正交归一向量构成的基来线性表示:<span class="math display">\[\pmb{\alpha}_k=\sum_{j=1}^{m_k}(\pmb{\alpha}_k,\pmb{\varepsilon}_j)\pmb{\varepsilon}_j\]</span> 因为<span class="math inline">\(m_k\le k\)</span>, 所以<spanclass="math inline">\((\pmb{\alpha}_k,\pmb{\varepsilon}_j)\)</span>仍是一个上三角矩阵的矩阵元.与非奇异的区别在于, 这里的上三角矩阵即使在上三角部分也会出现零元,甚至必定出现零元. 它的后<spanclass="math inline">\(n-m\)</span>行都是零行. 另外还需注意,<strong>到目前为止, <spanclass="math inline">\(\pmb{\varepsilon}_j\)</span>无法构成正交矩阵</strong>.它只有<span class="math inline">\(m\)</span>个矢量. 我们再找<spanclass="math inline">\(n-m\)</span>个列矢量, 使得所有<spanclass="math inline">\(n\)</span>个构成正交归一基,这样才能形成正交矩阵.</p><p>综上所述, 此时仍存在分解, 只是<spanclass="math inline">\(\mathbf{Q}\)</span>的前<spanclass="math inline">\(m\)</span>列就足以表示<spanclass="math inline">\(\mathbf{A}\)</span>, 因而<spanclass="math inline">\(\mathbf{R}\)</span>也只有前<spanclass="math inline">\(m\)</span>行才可能出现非零元, 后<spanclass="math inline">\(n-m\)</span>行无论对角线上下都是零元.</p><h2 id="标准-qr-迭代">标准 QR 迭代</h2><p>前面已经证明了方阵普遍具备 QR 分解, 现在可以介绍 QR迭代的基本步骤了.</p><h3 id="要求">要求</h3><p>初始矩阵<span class="math inline">\(\mathbf{A}\)</span>,初始正交矩阵<span class="math inline">\(\mathbf{Q}^{(0)}\)</span>.若<span class="math inline">\(\mathbf{Q}^{(0)}=\mathbf{I}\)</span>,则<span class="math inline">\(\mathbf{T}^{(0)}=\mathbf{A}\)</span>.</p><h3 id="步骤">步骤</h3><ol type="1"><li><p><strong>for</strong> <spanclass="math inline">\(k=1,2,\cdots\)</span> <strong>do</strong></p><ol type="1"><li>对矩阵<span class="math inline">\(\mathbf{T}^{(k-1)}\)</span>进行 QR分解, 即</li></ol><p><span class="math display">\[\mathbf{T}^{(k-1)}=\mathbf{Q}^{(k)}\mathbf{R}^{(k)}\]</span></p><ol start="2" type="1"><li>计算<spanclass="math inline">\(\mathbf{T}^{(k)}=\mathbf{R}^{(k)}\mathbf{Q}^{(k)}\)</span>.</li><li>这一步进行终止条件判定.</li></ol></li><li><p>输出结果</p></li></ol><h3 id="复杂度分析">复杂度分析</h3><p><spanclass="math inline">\(n\)</span>阶方阵乘法每确定一个矩阵元为<spanclass="math inline">\(O(n)\)</span>, 共<spanclass="math inline">\(n^2\)</span>个, 因此每一轮迭代的复杂度为<spanclass="math inline">\(O(n^3)\)</span>.</p><h2 id="实-schur-分解">实 Schur 分解</h2><p>作为迭代算法, QR 迭代当然是近似的. 它的每一步结果是 <spanclass="math display">\[\mathbf{T}^{(k)}=\left(\mathbf{Q}^{(0)}\cdots\mathbf{Q}^{(k)}\right)^\mathbf{T}\mathbf{A}\left(\mathbf{Q}^{(0)}\cdots\mathbf{Q}^{(k)}\right)\]</span> 实际上, 如果<spanclass="math inline">\(\mathbf{A}\)</span>存在复本征值, 那么<spanclass="math inline">\(\mathbf{T}^{(k)}\)</span>永不可能是真的上三角的.一方面, 实矩阵之积必定是实矩阵, 另一方面, <spanclass="math inline">\(\mathbf{A}\)</span>相似变换而成的上三角矩阵,对角元都是本征值. 因此,具有复本征值的矩阵不可能在实数域上严格上三角化.</p><p>尽管如此, 我们可以设法让<spanclass="math inline">\(\mathbf{A}\)</span>"尽量上三角化":</p><blockquote><p><span class="math inline">\(\forall\mathbf{A}\in\mathbb{R}^{n\timesn}\)</span>, 存在<spanclass="math inline">\(\mathbf{Q}\)</span>为正交矩阵且 <spanclass="math display">\[\mathbf{Q}^\mathbf{T}\mathbf{A}\mathbf{Q}=\begin{pmatrix}R_{11} &amp; R_{12} &amp; \cdots &amp; R_{1m}\\0 &amp; R_{22} &amp; \cdots &amp; R_{2m}\\\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\0 &amp; 0 &amp; \cdots &amp; R_{mm}\end{pmatrix}\]</span> 其中<spanclass="math inline">\(R_{ii}\in\mathbb{R}\)</span>表示所有实本征值,或<span class="math inline">\(R_{ii}\in\mathbb{R}^{2\times2}\)</span>.这样的形式称作矩阵<span class="math inline">\(\mathbf{A}\)</span>的<strong>实 Schur 形式</strong>.</p></blockquote><p>不难看出, 实 Schur 形式很可能不是上三角的, 它的对角元处允许<spanclass="math inline">\(2\times2\)</span>的块矩阵存在(其实也只允许对角线下方的副对角线存在),这代表一对共轭的复本征值<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="我们好像没有说明共轭的根据, 这是因为本征方程是实的, 取共轭不变, 因此根也是共轭不变的.">[1]</span></a></sup>.</p><p>另外, 我们希望非对角块包含且仅包含无法对角化的复本征值,后面我们会看到, 由于算法的缺陷, 实本征值也可能没有对角化而形成对角块,这种情况不算严格意义上的实 Schur 形式.</p><h5 id="下面的定理给出实-schur-形式和-qr-分解的联系">下面的定理给出实Schur 形式和 QR 分解的联系:</h5><blockquote><p>正交矩阵<span class="math inline">\(\mathbf{Q}\)</span>可以通过 QR迭代获得, 即 <span class="math display">\[\mathbf{Q}=\lim_{k\to\infty}\left[\mathbf{Q}^{(0)}\mathbf{Q}^{(1)}\cdots\mathbf{Q}^{(k)}\right]\]</span> 这样得到一个矩阵的迭代序列<spanclass="math inline">\(\{\mathbf{T}^{(i)}\}\)</span>, 本征值满足<spanclass="math inline">\(|\lambda_1|\ge|\lambda_2|\ge\cdots\ge|\lambda_n|\)</span>.则它的非对角元具有如下收敛速度: <span class="math display">\[\left|t_{ij}^{(k)}\right|\sim\left|\frac{\lambda_i}{\lambda_j}\right|^k,i&gt;j\]</span></p></blockquote><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>我们好像没有说明共轭的根据,这是因为本征方程是实的, 取共轭不变, 因此根也是共轭不变的.<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>本征值问题</tag>
      
      <tag>QR 算法</tag>
      
      <tag>QR 分解</tag>
      
      <tag>标准的 QR 算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(04)：本征值问题的一般描述</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(04)%EF%BC%9A%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98%E7%9A%84%E4%B8%80%E8%88%AC%E6%8F%8F%E8%BF%B0/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(04)%EF%BC%9A%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98%E7%9A%84%E4%B8%80%E8%88%AC%E6%8F%8F%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<p><spanclass="math inline">\(\newcommand{\b}{\mathbf}\newcommand{\bi}{\boldsymbol}\newcommand{\R}{\mathbb{R}}\newcommand{\C}{\mathbb{C}}\newcommand{\R}{\mathbb{R}}\newcommand{\rank}[1]{\text{rank}\left(#1\right)}\newcommand{\set}[1]{\left\{ #1\right\}}\newcommand{\abs}[1]{\left| #1\right|}\)</span>本节开始研究所谓的本征值问题,让我们首先回忆一下关于本征值问题的一些数学定义和一些重要的结果.</p><h2 id="线代知识再回顾">线代知识再回顾</h2><blockquote><p><strong>本征值问题</strong></p><p><spanclass="math inline">\(\forall\mathbf{A}\in\mathbb{C}^{n×n}\)</span>,存在非零矢量<span class="math inline">\(\pmb{x}\in\mathbb{C}^n\backslash\{\pmb{0}\}\)</span>和常数<spanclass="math inline">\(\lambda\in\mathbb{C}\)</span></p><p><span class="math inline">\(\text{s.t.}\)</span> <spanclass="math display">\[\mathbf{A}\pmb{x}=\lambda\pmb{x}\]</span> 则称<span class="math inline">\(\lambda\)</span>为<spanclass="math inline">\(\mathbf{A}\)</span>的一个<strong>本征值(eigenvalue)</strong>, <spanclass="math inline">\(\pmb{x}\)</span>为这个本征值对应的<strong>(右)本征矢(eigenvector)</strong>. <spanclass="math inline">\(\mathbf{A}\)</span>的全体本征值构成的集合称为<spanclass="math inline">\(\mathbf{A}\)</span>的<strong>谱(spectrum)</strong>, 记作<spanclass="math inline">\(\sigma(\mathbf{A})\)</span>. <spanclass="math inline">\((\lambda,\pmb{x})\)</span>称作矩阵<spanclass="math inline">\(\mathbf{A}\)</span>的一个<strong>本征对(eigenpair)</strong>.</p></blockquote><p>另一个重要概念是矩阵<span class="math inline">\(\mathbf{A}\)</span>的<strong>谱半径(spectral radius)</strong>: <span class="math display">\[\rho(\mathbf{A}):=\max|\sigma(\mathbf{A})|\]</span> <spanclass="math inline">\(|\cdot|\)</span>表示对集合内所有元素取模构成新集合,显然<spanclass="math inline">\(\rho(\mathbf{A})=\rho(\mathbf{A}^\dagger)\)</span>.</p><p>我们还要引入矩阵的 <strong>模(norm)</strong>.</p><blockquote><p><span class="math display">\[\begin{flalign}&amp; \text{e.g.} &amp;\\&amp; &amp;\qquad|\!|\mathbf{A}|\!|:=\sup_{\pmb{x}\ne\pmb{0}}\frac{|\!|\mathbf{A}\pmb{x}|\!|}{|\!|\pmb{x}|\!|}&amp; &amp;\end{flalign}\]</span></p><p>称作 <strong>(矢量模诱导的)矩阵模(matrix norm)</strong>.通常这里的矢量模取为 Euclid 模, 那么相应的矩阵模称作<strong>2-模(2-norm)</strong>.</p></blockquote><blockquote><p><span class="math display">\[\begin{flalign}&amp; \text{e.g.} &amp;\\&amp; &amp; \qquad|\!|\mathbf{A}|\!|_F:=\sqrt{\sum_{j,k}|a_{jk}|^2}&amp; &amp;\end{flalign}\]</span></p><p>称作 <strong>Frobenius 模(Hilbert-Schmidt 模; F-norm)</strong>.</p></blockquote><p>可以证明</p><ol type="1"><li><p><spanclass="math inline">\(|\!|\mathbf{A}|\!|_2\le|\!|\mathbf{A}|\!|_F\)</span></p></li><li><p><spanclass="math inline">\(|\!|\mathbf{A}|\!|_2=\sqrt{\rho(\mathbf{A}^\dagger\mathbf{A})}\)</span>​</p><p>推论:</p><ol type="1"><li>自伴矩阵满足<spanclass="math inline">\(|\!|\mathbf{A}|\!|_2=\rho(\mathbf{A})\)</span></li><li>酉矩阵满足<spanclass="math inline">\(|\!|\mathbf{A}|\!|_2=1\)</span>​</li></ol></li><li><p>两种模都允许 <spanclass="math inline">\(\mathbf{A}\)</span>乘上(无论左右)一个酉矩阵的因子而不改变矩阵模.</p><p>推论:</p><ol type="1"><li>相似变换不改变这两种矩阵模.</li></ol></li></ol><p>对于矩阵的数值计算, <strong>条件数(condition number)</strong>是非常重要的: <span class="math display">\[\kappa(\mathbf{A}):=|\!|\mathbf{A}|\!|\cdot|\!|\mathbf{A}^{-1}|\!|\]</span> 这是非奇异矩阵的定义. 对于奇异矩阵, 约定为<spanclass="math inline">\(+\infty\)</span>.</p><h2 id="矩阵的本征结构与对角化">矩阵的本征结构与对角化</h2><h3 id="相似变换">相似变换</h3><p>有必要声明: <strong>我们在这一章接下来讨论的所谓"对角化",都是建立在相似变换的基础上的</strong>. 因为目的是得到本征谱,所以相似变换是对角化的不二选择:</p><blockquote><p><strong>相似变换(similar transformation)</strong> 是一个线性变换<spanclass="math inline">\(S_n:\mathbb{C}^{n\times n}\rightarrow\mathbb{C}^{n\times n}\)</span>, 形如 <span class="math display">\[S_n(\mathbf{A})=\mathbf{C}^{-1}\mathbf{A}\mathbf{C}\]</span> 其中<spanclass="math inline">\(\mathbf{C}\in\mathbb{C}^{n\timesn}\)</span>并且满秩.</p></blockquote><p>显然, 相似变换不改变矩阵的谱, 而(右)本征矢会左乘一个矩阵<spanclass="math inline">\(\mathbf{C}^{-1}\)</span>. 即本征对: <spanclass="math display">\[(\lambda,\pmb{x})\rightarrow(\lambda,\mathbf{C}^{-1}\pmb{x})\]</span> 更特别的, 如果<spanclass="math inline">\(\mathbf{C}\)</span>​是一个酉矩阵(实正交矩阵),则变换称作 <strong>酉变换</strong>(实数域称为<strong>正交变换</strong>).</p><h3 id="本征多项式-本征子空间-本征值的重数">本征多项式, 本征子空间,本征值的重数</h3><p>从代数角度讲, 求解本征谱就是在解多项式方程<spanclass="math inline">\(\det(\b{A}-\lambda\b{I})=0\)</span>.根据代数学基本定理, 它能够写成一系列一次多项式的积: <spanclass="math display">\[p_\b{A}(\lambda)=\prod_{j=1}^{\sum_{j}\mu_j=n}(\lambda-\lambda_j)^{\mu_j}=0\]</span> <spanclass="math inline">\(\lambda_j\)</span>项对应的次数<spanclass="math inline">\(\mu_j\)</span>非常重要, 对于<spanclass="math inline">\(\mu_j=1\)</span>, 本征值是 <strong>单重</strong>的, 否则是 <strong>多重</strong> 的.</p><p>这个次数<span class="math inline">\(\mu_j\)</span>是否有几何意义?如果有的话, 很自然会想到<spanclass="math inline">\(\lambda_j\)</span>的本征子空间, 即</p><blockquote><p>所谓<span class="math inline">\(\lambda\)</span>对应的<strong>本征子空间</strong>, 就是<spanclass="math inline">\(\lambda\)</span>对应的全部本征矢张成的子空间:<span class="math display">\[V_{\lambda}:=\set{\bi{v}\in V|\b{A}\bi{v}=\lambda\bi{v}}\]</span></p></blockquote><p>它的维数实际上就是<spanclass="math inline">\((\b{A}-\lambda\b{I})\bi{x}=\b{0}\)</span>的解空间维数,即<span class="math inline">\(n-\rank{\b{A}-\lambda\b{I}}\)</span>.</p><blockquote><p>称: <span class="math inline">\(\mu_j\)</span>为<strong>代数重数</strong>, <spanclass="math inline">\(\gamma_j:=n-\rank{\b{A}-\lambda_j\b{I}}\)</span>为<strong>几何重数</strong>.</p></blockquote><p>这两种重数是否等价? 从<spanclass="math inline">\(V_{\lambda_j}\)</span>中选取一组基<spanclass="math inline">\(\set{\bi{v}_1,\bi{v}_2,\cdots,\bi{v}_{\gamma_j}}\)</span>,扩充为<span class="math inline">\(V\)</span>中的基<spanclass="math inline">\(\set{\bi{v}_1,\cdots,\bi{v}_n}\)</span>. 则 <spanclass="math display">\[\begin{align}(\bi{v}_1,\cdots,\bi{v}_n)^\b{T}\b{A}(\bi{v}_1,\cdots,\bi{v}_n)&amp;=(\bi{v}_1,\cdots,\bi{v}_n)^\b{T}(\lambda_j\bi{v}_1,\cdots,\lambda_j\bi{v}_{\gamma_j},\b{A}\bi{v}_{\gamma_j+1},\cdots,\b{A}\bi{v}_n)\\&amp;=\begin{pmatrix}\lambda_j\b{I}_{\gamma_j} &amp; \b{O}\\\b{O} &amp; \b{B}\end{pmatrix}\end{align}\]</span> 由于以基矢量为各列的矩阵是正交矩阵, 所以上式是一个相似变换,可以用计算结果代替<spanclass="math inline">\(\b{A}\)</span>研究本征多项式 <spanclass="math display">\[p_\b{A}(\lambda)=\abs{\begin{matrix}(\lambda_j-\lambda)\b{I}_{\gamma_j}&amp; \b{O}\\\b{O} &amp; \b{B}-\lambda\b{I}_{n-\gamma_j} \end{matrix}}\]</span> 这个多项式显然至少具有<spanclass="math inline">\(\gamma_j\)</span>重的<spanclass="math inline">\(\lambda_j\)</span>, 甚至可能更高,依赖于另一个对角块的计算. 即: <spanclass="math inline">\(\mu_j\ge\gamma_j\)</span>,<strong>代数重数不小于几何重数</strong>.</p><p>为证明两者未必取等, 找一个特例即可: <span class="math display">\[\begin{align}&amp;\text{考虑矩阵}\b{A}=\begin{pmatrix}1 &amp; 1\\0 &amp; 1\end{pmatrix}\\&amp;代数重数:\text{ }p_\b{A}(\lambda)=(\lambda-1)^2, \mu_1=2\\&amp;几何重数:\gamma_1=2-\rank{\b{A}-\b{I}}=2-1=1\end{align}\]</span> 可见, 两者不等价, 只有不等关系. 我们称一个本征值<spanclass="math inline">\(\lambda\)</span>是 <strong>亏损的</strong>,如果它的几何重数小于代数重数; 称<spanclass="math inline">\(\b{A}\)</span>是 <strong>亏损的</strong>,如果它存在亏损本征值.</p><p>亏损这个概念一经引入就有意义. 如果矩阵亏损,那么它某个本征值的本征矢数量过少,不足以在相似变换的矩阵中张成维数为<spanclass="math inline">\(\mu_j\)</span>的子空间, 也就不可能出现<spanclass="math inline">\(\mu_j\)</span>个对角元为<spanclass="math inline">\(\lambda_j\)</span>, 对角化一定不能实现. 同样地,容易证明, 如果矩阵非亏损, 一定能对角化.</p><h3 id="schur-分解定理">Schur 分解定理</h3><p>实数域上的代数告诉我们, 不是任意实方阵都能对角化, 推广这一结论,任意复方阵也未必能对角化. 但我们可以退而求其次:</p><blockquote><p><strong>Schur 分解定理</strong></p><p><span class="math inline">\(\forall\mathbf{A}\in\mathbb{C}^{n\timesn}\ \)</span>, 存在<span class="math inline">\(\mathbf{U}\\text{s.t.}\)</span>​ <span class="math display">\[\mathbf{U}^{-1}\mathbf{A}\mathbf{U}\equiv\mathbf{U}^\dagger\mathbf{A}\mathbf{U}=\begin{pmatrix}\lambda_1 &amp; \tilde{a}_{12} &amp; \cdots &amp; \tilde{a}_{1n}\\&amp; \lambda_2 &amp; \cdots &amp; \tilde{a}_{2n}\\&amp; &amp; \ddots &amp; \vdots\\&amp; &amp; &amp; \lambda_n\end{pmatrix}\]</span></p></blockquote><p>同样采用归纳法证明, 对于一阶矩阵, 显然成立. 下面证明,如果定理对于<span class="math inline">\(n-1\)</span>阶矩阵成立,那么对<span class="math inline">\(n\)</span>阶矩阵成立.</p><p>为证明之, 考虑<span class="math inline">\(n\)</span>阶矩阵<spanclass="math inline">\(\mathbf{A}\)</span>, 它可以进行分块 <spanclass="math display">\[\mathbf{A}=\begin{pmatrix}a_{11} &amp; \pmb{v}\\\pmb{u}^\dagger &amp; A_{n-1}\end{pmatrix}\]</span> 它具备一系列本征值,挑选一个非零本征值<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="不必考虑本征值全为零的矩阵, 因为零矩阵情形是平庸的; 也不用考虑简并, 后面的证明不需要非简并假设.">[1]</span></a></sup>记作<spanclass="math inline">\(\lambda_1\)</span>,对应地一个归一化的本征矢为<spanclass="math inline">\(\pmb{x}_1\)</span>: <span class="math display">\[\mathbf{A}\pmb{x}_n=\lambda_n\pmb{x}_n\]</span> 从<spanclass="math inline">\(\mathbb{C}^n\)</span>上不难挑选<spanclass="math inline">\(n-1\)</span>个正交归一的本征矢<spanclass="math inline">\(\{\pmb{x}_2,\cdots,\pmb{x}_n\}\)</span>,并且它们都与<span class="math inline">\(\pmb{x}_1\)</span>​正交.构建相应的酉矩阵 <span class="math display">\[\mathbf{X}=\begin{pmatrix}\pmb{x}_1 &amp; \cdots &amp; \pmb{x}_n\end{pmatrix}\]</span> 以它为参量的相似变换结果为 <span class="math display">\[a^\mathbf{X}_{jk}=[\mathbf{X}^{-1}\mathbf{A}\mathbf{X}]_{jk}=\pmb{x}_j^\dagger\mathbf{A}\pmb{x}_k\]</span> 若<span class="math inline">\(k=1\)</span>, 则<spanclass="math inline">\(a_{jk}^\mathbf{X}=\pmb{x}_j^\dagger\lambda_1\pmb{x}_1=\lambda_1\delta_{j1}\)</span>.可见 <span class="math display">\[\mathbf{X}^{-1}\mathbf{A}\mathbf{X}=\begin{pmatrix}\lambda_1 &amp; \pmb{v}^\mathbf{X}\\\pmb{0} &amp; A_{n-1}^{\mathbf{X}}\end{pmatrix}\]</span> 其实接下来也可以继续递推, 设法将<spanclass="math inline">\(\mathbf{A}_{n-1}^\mathbf{X}\)</span>逐层地上三角化<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="这种证明方法能更直观地体现出上三角化方案不唯一, 对于同一个原始矩阵, 至少可以调整结果中本征值的顺序.">[2]</span></a></sup>,但一系列递推变换的总效果就是<span class="math inline">\(n-1\)</span>阶的Schur 分解定理. 因此还是按照 Schur 分解定理在<spanclass="math inline">\(n-1\)</span>阶上成立的前提进行证明.</p><p>设<spanclass="math inline">\(\mathbf{A}_{n-1}^\mathbf{X}\)</span>上三角化所需的酉矩阵是<spanclass="math inline">\(\mathbf{P}_{n-1}\)</span>, 考虑分块矩阵 <spanclass="math display">\[\mathbf{P}=\begin{pmatrix}1 &amp; \pmb{0}^\dagger\\\pmb{0} &amp; \mathbf{P}_{n-1}\end{pmatrix}\]</span> 则 <span class="math display">\[\mathbf{P}^{-1}\mathbf{X}^{-1}\mathbf{A}\mathbf{X}\mathbf{P}=\begin{pmatrix}\lambda_1 &amp; \mathbf{P}^\dagger\pmb{v}^\mathbf{X}\\\pmb{0} &amp; \mathbf{P}^\dagger A_{n-1}^{\mathbf{X}}\mathbf{P}\end{pmatrix}\]</span> 对角块都是上三角的, 对角线以下是零块,因此整体是一个上三角矩阵, 且对角元都是本征值. <spanclass="math inline">\(\mathbf{X}\mathbf{P}\)</span>​整体承担变换矩阵的作用,并且酉矩阵之积仍是酉的. 得证.</p><h3 id="schur-分解定理推论">Schur 分解定理推论</h3><p>根据 Schur 分解定理, 立即得到:</p><ol type="1"><li><p>自伴矩阵必定可以用酉矩阵对角化, 对角元都是本征值,并且都是实数.</p><p>这可以看作实对称矩阵对角化定理的推广.</p></li><li><p>实矩阵当然也能上三角化, 但对角元未必是实数.有的问题要求把数域限制为<span class="math inline">\(\mathbb{R}\)</span>​,那么实际上无法分解为上三角矩阵.</p><p>这就要引出后面的实 Schur 分解.</p></li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>不必考虑本征值全为零的矩阵,因为零矩阵情形是平庸的; 也不用考虑简并, 后面的证明不需要非简并假设.<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>这种证明方法能更直观地体现出上三角化方案不唯一,对于同一个原始矩阵, 至少可以调整结果中本征值的顺序.<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>本征值问题</tag>
      
      <tag>相似变换</tag>
      
      <tag>对角化</tag>
      
      <tag>Schur 形式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(03)：三对角矩阵</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(03)%EF%BC%9A%E4%B8%89%E5%AF%B9%E8%A7%92%E7%9F%A9%E9%98%B5/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(03)%EF%BC%9A%E4%B8%89%E5%AF%B9%E8%A7%92%E7%9F%A9%E9%98%B5/</url>
    
    <content type="html"><![CDATA[所谓 <strong>三对角矩阵</strong>, 是指形如 <span class="math display">\[\mathbf{A}=\begin{pmatrix}a_1 &amp; c_1\\b_2 &amp; a_2 &amp; c_2\\&amp; \ddots &amp; \ddots &amp; \ddots\\&amp; &amp; b_{n-1} &amp; a_{n-1} &amp; c_{n-1}\\&amp; &amp; &amp; b_n &amp; a_n\end{pmatrix}\]</span> 的矩阵<span class="math inline">\(\mathbf{A}\)</span>.它同样可以进行 LU 分解, 但分解后的矩阵比较特殊: $$<span class="math display">\[\begin{aligned}\mathbf{L}&amp;=\begin{pmatrix}1 &amp;\\\beta_2 &amp; 1\\&amp; \ddots &amp; \ddots\\&amp; &amp; \beta_n &amp; 1\end{pmatrix}\\\mathbf{U}&amp;=\begin{pmatrix}\alpha_1 &amp; c_1\\&amp; \ddots &amp; \ddots\\&amp; &amp; \alpha_{n-1} &amp; c_{n-1}\\&amp; &amp; &amp; \alpha_n\end{pmatrix}\end{aligned}\]</span><p>$$</p><p>它可以简便地写作矩阵元形式</p><p><span class="math display">\[l_{jj}=1,\  l_{j,j-1}=\beta_j,\  u_{jj}=\alpha_j,\ u_{j,j+1}=c_j\]</span></p><p>根据矩阵元形式计算</p><p><span class="math display">\[a_{jk}=\sum_{m=1}^nl_{jm}u_{mk}=(\alpha_j+\beta_jc_{j-1})\delta_{jk}+c_j\delta_{j,k-1}+\alpha_{j-1}\beta_j\delta_{j,k + 1}\]</span></p><p>与矩阵<span class="math inline">\(\mathbf{A}\)</span>进行比对,就可得到</p><p><span class="math display">\[\begin{align}\alpha_1 &amp;= a_1\\\beta_j&amp;=\frac{b_j}{\alpha_{j-1}}\\\alpha_j&amp;=a_j-\beta_jc_{j-1}\\(j&amp;=2,3,\cdots,n)\end{align}\]</span></p><p>这就是三对角矩阵的 <strong>Thomas 算法</strong>. 它的计算量约为<spanclass="math inline">\(8n-7\)</span>, 分解本身为<spanclass="math inline">\(3n-3\)</span>, 如果还需解线性方程组, 还要多<spanclass="math inline">\(5n-4\)</span>.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>线性方程组</tag>
      
      <tag>三对角矩阵</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(02)：Cholesky 分解</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(02)%EF%BC%9ACholesky%20%E5%88%86%E8%A7%A3/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(02)%EF%BC%9ACholesky%20%E5%88%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>Cholesky 分解基于这样一个事实: 对于一个正定自伴矩阵<spanclass="math inline">\(\mathbf{A}\in \mathbb{C}^{n\times n}\)</span>,可以找到一个矩阵<span class="math inline">\(\mathbf{H}\)</span>使得<spanclass="math inline">\(\mathbf{A}=\mathbf{H}^\dagger\mathbf{H}\)</span>.事实上, 可以要求<spanclass="math inline">\(\mathbf{H}\)</span>是一个上三角矩阵,则这个分解称为 <strong>Cholesky 分解</strong>. Cholesky分解同样把复杂的线性方程组转化为两个较简单的方程组: <spanclass="math display">\[\mathbf{A}\pmb{x}=\pmb{b}\Rightarrow\begin{cases}\displaystyle\mathbf{H}^\dagger\pmb{y} = \pmb{b}\\\\\displaystyle\mathbf{H}\pmb{x}=\pmb{y}\end{cases}\]</span> 一个显而易见的引理是,<strong>正定自伴矩阵的主子矩阵仍是正定自伴的</strong>.这可以直接在如下求和式中 <span class="math display">\[\sum_{j=1}^n\sum_{k=1}^na_{jk}x_jx_k\]</span> 将<spanclass="math inline">\(j,k=m+1,m+2,\cdots,n\)</span>的<spanclass="math inline">\(x_j,x_k\)</span>取作<spanclass="math inline">\(0\)</span>, 不应影响正定二次型的结论,从而得证.</p><p>有了这个引理, 对 Cholesky 分解的研究仍可以按照归纳法的思路进行.假设主子矩阵<span class="math inline">\(\mathbf{A}_{m}\)</span>存在分解矩阵<span class="math inline">\(\mathbf{H}_m\)</span>,更高阶的主子矩阵可以进行分块 <span class="math display">\[\mathbf{A}_{m+1}=\begin{pmatrix}\mathbf{A}_m &amp; \pmb{v}\\\pmb{v}^\dagger &amp; \lambda\end{pmatrix}\]</span> 我们希望它仍存在分解矩阵<spanclass="math inline">\(\mathbf{H}_{m+1}\)</span>, 同样可以分块为 <spanclass="math display">\[\mathbf{H}_{m+1}=\begin{pmatrix}\mathbf{H}_m &amp; \pmb{u}\\\pmb{0}^\dagger &amp; \mu\end{pmatrix}\\\mathbf{H}_{m+1}^\dagger=\begin{pmatrix}\mathbf{H}_m^\dagger &amp; \pmb{0}\\\pmb{u}^\dagger &amp; \mu\end{pmatrix}\]</span> 则有 <span class="math display">\[\mathbf{H}_m^\dagger\pmb{u}=\pmb{v}\\\pmb{u}^\dagger\pmb{u}+\mu^2=\lambda\]</span> 设<spanclass="math inline">\(\mathbf{H}^\dagger\)</span>的<spanclass="math inline">\((j,k)\)</span>元为<spanclass="math inline">\(h_{jk}\)</span>, 则 <span class="math display">\[\sum_{l=1}^{k}h_{jl}h_{kl}^\dagger=a_{jk}\\(k=1,2,\cdots,j)\]</span> 写成<span class="math inline">\(h_{jk}\)</span>的显式 <spanclass="math display">\[\begin{align}h_{jk}&amp;=\frac{\displaystylea_{jk}-\sum_{l=1}^{k-1}h_{jl}h^\dagger_{kl}}{h^\dagger_{kk}}\newline(k&amp;=1,2,\cdots,j-1)\newlineh_{jj}&amp;=\sqrt{a_{jj}-\sum_{l=1}^{j-1}|h_{jl}|^2}\end{align}\]</span></p><h3 id="算法总结">算法总结</h3><p>如下为算法流程:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <span class="hljs-comment"># 仅作为示意, 指标起点取0</span><br>h[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = np.sqrt(a[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>])<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n):<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(j):<br>        h[j,k]=(a[j, k]-h[j, :k]@np.conj(h[k, :k])) / h[j, j]<br>       <br>    h[j, j] = np.sqrt(a[j, j] - np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(h[j, :j]) ** <span class="hljs-number">2</span>))<br></code></pre></td></tr></table></figure><p>Cholesky 分解的计算量约为<spanclass="math inline">\(\displaystyle\frac{n^3}{3}\)</span>, 比 LU分解通常少一半. 它的特殊形式为正定实对称矩阵的分解, 这种矩阵相当常见,比如协方差矩阵.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>线性方程组</tag>
      
      <tag>自伴矩阵</tag>
      
      <tag>三角矩阵</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性方程组与本征值问题(01)：LU 分解</title>
    <link href="/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(01)%EF%BC%9ALU%20%E5%88%86%E8%A7%A3/"/>
    <url>/posts/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E6%9C%AC%E5%BE%81%E5%80%BC%E9%97%AE%E9%A2%98(01)%EF%BC%9ALU%20%E5%88%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>LU 分解是指把一个方阵分解成一个上三角和一个下三角矩阵的乘积 <spanclass="math display">\[\mathbf{A}\pmb{x} =\pmb{b}\Rightarrow\begin{cases}\displaystyle\mathbf{L}\pmb{y}=\pmb{b}\\\\\displaystyle\mathbf{U}\pmb{x} = \pmb{y}\end{cases}\qquad (\mathbf{A}=\mathbf{L}\mathbf{U})\]</span> <strong>通常, 我们会取<spanclass="math inline">\(\mathbf{L}\)</span>的对角元为<spanclass="math inline">\(1\)</span>,并且判断唯一性时总是忽略这个自由度</strong>. 如果知道系数矩阵的 LU 分解,就把一个复杂的方程组转化为两步较简单的解方程组. 显然, LU分解的一个特例就是 Gauss 消元法.</p><p>想要把 LU 分解应用到问题中, 我们需要从数学上解决它的存在性和唯一性,或者在什么样的条件下, 有唯一的 LU 分解.</p><h3 id="lu-分解的唯一性">LU 分解的唯一性</h3><blockquote><p>给定一个矩阵<spanclass="math inline">\(\mathbf{A}\in\mathbb{C}^{n\times n}\)</span>,如果<span class="math inline">\(\mathbf{A}\)</span>具有 LU分解并且秩满足<span class="math inline">\(\text{rank}(\mathbf{A})\gen-1\)</span>, 则这个分解唯一.</p></blockquote><p>证明相当简单. 假设存在另一个 LU 分解<spanclass="math inline">\(\mathbf{A} = \mathbf{D}\mathbf{H}\)</span>.先考虑<span class="math inline">\(\mathbf{A}\)</span>满秩的情形.</p><h4 id="mathbfa满秩">1. <spanclass="math inline">\(\mathbf{A}\)</span>满秩</h4><p>因为乘法运算不让秩增大, 而<spanclass="math inline">\(\mathbf{A}\)</span>已经满秩了,因此所有三角矩阵也满秩.</p><p>这样可以得到 <span class="math display">\[\mathbf{L}\mathbf{U}=\mathbf{D}\mathbf{H}\Rightarrow\mathbf{D}^{-1}\mathbf{L}=\mathbf{H}\mathbf{U}^{-1}\]</span> 上(下)三角矩阵参与的求逆和乘法运算, 结果仍然是上(下)三角矩阵,因此左边仍是下三角, 右边仍是上三角, 相等, 说明两者都是对角矩阵. 即 <spanclass="math display">\[\mathbf{D}^{-1}\mathbf{L}=\text{diag}\{c_1,c_2,\cdots,c_n\}\]</span> 把<span class="math inline">\(\mathbf{D}\)</span>乘过去,立即得到<span class="math inline">\(\mathbf{L}\)</span>的对角元 <spanclass="math display">\[l_{ii}=c_id_{ii}\ ,\qquad i=1,2,\cdots,n\]</span> 考虑到 LU 分解取下三角矩阵的对角元为<spanclass="math inline">\(1\)</span>, 有<spanclass="math inline">\(c_i=1(\forall i)\)</span>. 因此<spanclass="math inline">\(\mathbf{D}^{-1}\mathbf{L}=\mathbf{I}\)</span>, 即<span class="math display">\[\mathbf{D}=\mathbf{L}\ ,\qquad \mathbf{U}=\mathbf{H}\]</span> 这说明根本不是新的分解, 得证.</p><h4 id="mathbfa不满秩">2. <spanclass="math inline">\(\mathbf{A}\)</span>不满秩</h4><p>我们进行分块 <span class="math display">\[\mathbf{A}=\begin{pmatrix}\mathbf{A}_m &amp; \mathbf{B}\\\mathbf{C} &amp; \mathbf{D}\end{pmatrix}\]</span> 作为<span class="math inline">\(m\)</span>阶主子矩阵, <spanclass="math inline">\(\mathbf{A}_m\)</span>是满秩的,如果它具有分解(显然具有, 因为我们假设<spanclass="math inline">\(\mathbf{A}\)</span>能够分解), 则<spanclass="math inline">\(\mathbf{L}\)</span>的<spanclass="math inline">\((1,1), (1,2)\)</span>块和<spanclass="math inline">\(\mathbf{U}\)</span>的<spanclass="math inline">\((1,1),(2,1)\)</span>块已经确定了: <spanclass="math display">\[\mathbf{L}=\begin{pmatrix}\mathbf{L}_m &amp; \mathbf{O}\\\mathbf{L}_{21} &amp; \mathbf{L}_{22}\end{pmatrix}\\\mathbf{U}=\begin{pmatrix}\mathbf{U}_m &amp; \mathbf{U}_{12}\\\mathbf{O} &amp; \mathbf{U}_{22}\end{pmatrix}\]</span> 它给出 <span class="math display">\[\mathbf{L}_m\mathbf{U}_{12}=\mathbf{B}\\\mathbf{L}_{21}\mathbf{U}_m=\mathbf{C}\\\mathbf{L}_{21}\mathbf{U}_{12}+\mathbf{L}_{22}\mathbf{U}_{22}=\mathbf{D}\]</span> 由于<span class="math inline">\(\mathbf{L}_m\)</span>和<spanclass="math inline">\(\mathbf{U}_m\)</span>满秩,那么前两式相当于多个独立的线性方程组, 系数矩阵为满秩方阵, 因此<spanclass="math inline">\(\mathbf{U}_{12}\)</span>和<spanclass="math inline">\(\mathbf{L}_{21}\)</span>有唯一解.</p><p><span class="math inline">\(\mathbf{L}_{22}\)</span>和<spanclass="math inline">\(\mathbf{U}_{22}\)</span>有赖于我们给出的限制条件.前面提到, 约定<spanclass="math inline">\(\mathbf{L}\)</span>的对角元都为<spanclass="math inline">\(1\)</span>, 因此<spanclass="math inline">\(\mathbf{L}\)</span>满秩, 而<spanclass="math inline">\(\mathbf{U}\)</span>的秩为<spanclass="math inline">\(m\)</span>, 将后<spanclass="math inline">\(n-m\)</span>列用前<spanclass="math inline">\(m\)</span>列线性表出, 立即得到 <spanclass="math display">\[\mathbf{U}_{22}=\mathbf{O}\]</span> 第三式由此成为恒等式, 对于<spanclass="math inline">\(\mathbf{L}_{22}\)</span>没有更多的限制条件了.幸好<span class="math inline">\(\text{rank}(\mathbf{A})=n-1\)</span>,<span class="math inline">\(\mathbf{L}_{22}\)</span>是个<spanclass="math inline">\(1\times1\)</span>的矩阵, 唯一元被强制归一了,因此仍是唯一的.</p><h3 id="lu-分解的存在性">LU 分解的存在性</h3><p>关于 LU 分解是否存在, 有如下定理:</p><blockquote><p><span class="math inline">\(\forall\mathbf{A}\inM_{n}(\mathbb{R})\)</span>, <spanclass="math inline">\(\mathbf{A}\)</span>存在 LU 分解的充分条件为:</p><p><span class="math inline">\(\mathbf{A}\)</span>的所有主子矩阵<spanclass="math inline">\(\mathbf{A}_i\ ,\i=1,2,\cdots,n-1\)</span>都是可逆的.</p><p>这个条件和<span class="math inline">\(\text{rank}{\mathbf{A}}\gen-1\)</span>等价.</p></blockquote><p>注意, 它并没有对<spanclass="math inline">\(\mathbf{A}\)</span>本身是否可逆有要求.证明这个定理需要归纳法. 对于第<spanclass="math inline">\(m+1\)</span>个主子矩阵, 进行分块: <spanclass="math display">\[\mathbf{A}_{m+1}=\begin{pmatrix}\mathbf{A}_m &amp; \pmb{u}\\\pmb{v}^{\mathbf{T}} &amp; \lambda\end{pmatrix}\]</span> 如果<span class="math inline">\(\mathbf{A}_m\)</span>存在 LU分解: <span class="math display">\[\mathbf{A}_m=\mathbf{L}_m\mathbf{U}_m\]</span> 则可以验证, <spanclass="math inline">\(\mathbf{A}_{m+1}\)</span>可以写作 <spanclass="math display">\[\begin{aligned}\mathbf{A}_{m+1}&amp;=\mathbf{L}_{m+1}\mathbf{U}_{m+1}\\\mathbf{L}_{m+1}&amp;=\begin{pmatrix}\mathbf{L}_m &amp; \mathbf{O}\\\pmb{v}^\mathbf{T}\mathbf{U}_m^{-1}&amp;1\end{pmatrix}\\\mathbf{U}_{m+1}&amp;=\begin{pmatrix}\mathbf{U}_m &amp; \mathbf{L}_m^{-1}\pmb{u}\\\mathbf{O} &amp; \lambda - \pmb{v}^\mathbf{T}\mathbf{A}_m^{-1}\pmb{u}\end{pmatrix}\end{aligned}\]</span> 这个式子要求<spanclass="math inline">\(\mathbf{A}_m\)</span>分解为两个满秩矩阵.因此从<span class="math inline">\(m=1\)</span>开始归纳直到<spanclass="math inline">\(m=n-1\)</span>, 条件为其中各阶主子矩阵满秩,则<span class="math inline">\(\mathbf{A}\)</span>存在 LU 分解.</p><p>结合前面, 我们证明了: 当<spanclass="math inline">\(\mathbf{A}\)</span>的<spanclass="math inline">\(1\sim n-1\)</span>阶主子矩阵非奇异(即<spanclass="math inline">\(\text{rank}\mathbf{A} \ge n-1\)</span>),存在唯一的 LU 分解. 实际上必要性也成立(证明略), 这是个充要条件.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>线性方程组与本征值问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>线性方程组</tag>
      
      <tag>三角矩阵</tag>
      
      <tag>LU分解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fourier 方法(02)：FFT 及其 python 实现</title>
    <link href="/posts/Fourier%20%E6%96%B9%E6%B3%95(02)%EF%BC%9AFFT%20%E5%8F%8A%E5%85%B6%20python%20%E5%AE%9E%E7%8E%B0/"/>
    <url>/posts/Fourier%20%E6%96%B9%E6%B3%95(02)%EF%BC%9AFFT%20%E5%8F%8A%E5%85%B6%20python%20%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>本节介绍基于 DTFT 的算法——快速 Fourier 变换, 以及用于实现这一算法的python 模块.</p><h2 id="快速-fourier-变换fft">快速 Fourier 变换(FFT)</h2><p>FFT 的基本原理其实很简单, 基本上就是 <strong>分而治之 (divide andconquer, D&amp;C)</strong> 的方法. 为了方便, 将相因子记为 <spanclass="math display">\[\phi_N:=\exp{(\frac{2\pi i}{N})}\]</span> 那么规模为<span class="math inline">\(2N\)</span>的 DTFT可以写为 <span class="math display">\[G_m=\frac{1}{2N}\sum_{n=0}^{2N-1}\phi_{2N}^{mn}g_n\]</span> 将它按照奇数项和偶数项拆开: <span class="math display">\[\begin{aligned}G_m&amp;=\frac{1}{2N}\sum_{j=0}^{N-1}\phi_{2N}^{2mj}g_{2j}+\frac{1}{2N}\sum_{k=0}^{N-1}\phi_{2N}^{m(2k+1)}g_{2k+1}\\&amp;=\frac{1}{2N}\sum_{j=0}^{N-1}\phi_{N}^{mj}g_{2j}+\frac{1}{2N}\sum_{k=0}^{N-1}\phi_{N}^{mk}g_{2k+1}\exp{(\frac{i\pim}{N})}\end{aligned}\]</span> 这就是著名的 <strong>Danielson-Lanczos 引理</strong>,类似于著名的归并排序算法, 它实际上给出两个规模为<spanclass="math inline">\(N\)</span>​的 DTFT, 可以不断向下递归,每次二分时域样本集, 直到集合很小以至于极其好算, 这样就把<spanclass="math inline">\(O(N^2)\)</span>的问题转化为了<spanclass="math inline">\(O(N\log N)\)</span>的问题.</p><h2 id="numpy.fft模块简介"><code>numpy.fft</code>模块简介</h2><p>著名的科学计算工具<code>numpy</code>有一套成熟的函数模块用于计算 FFT.当然, 它与常使用的公式略有区别. 上节提到,数学上喜欢将因子全部放在变换公式中, 让反变换不带有系数, 即 <spanclass="math display">\[\begin{aligned}G_m&amp;=\frac{1}{N}\sum_{n=0}^{N-1}g_n\exp{(-\frac{2\pi imn}{N})}\\g_n&amp;=\sum_{m}G_m\exp{(\frac{2\pi imn}{N})}\end{aligned}\]</span> 这样的<spanclass="math inline">\(G_m\)</span>正是按照复指数函数分解后的系数,更具有"频谱"的意义. 如果<spanclass="math inline">\(g_n\)</span>就是<spanclass="math inline">\(x_0+\displaystyle\frac{n}{f_s}\)</span>处的函数值,那么<span class="math inline">\(G_m\)</span>代表着空间频率为<spanclass="math inline">\(k=\displaystyle\frac{mf_s}{N}\)</span>的分量的复振幅(这里其实还相差一个相因子<spanclass="math inline">\(\exp({2\pi ikx_{center}})\)</span>, 其中<spanclass="math inline">\(x_{center}\)</span>是空时域采样位置的中位数),科学计算工具未必采用这种约定, 因此编写代码时反复乘除<spanclass="math inline">\(N\)</span>因子并不是值得惊奇的事情.</p><p>上述式子中, 我们没有指定<spanclass="math inline">\(m\)</span>​的求和范围,是打算说明空间频率的选取具有一定的任意性.</p><h3 id="空间频率的选取-采样定理">空间频率的选取, 采样定理</h3><p>按照复指数函数的周期性, 很容易看出 <span class="math display">\[G_{m\pm N}=G_m\]</span> 因此, 所谓的空间频率为<spanclass="math inline">\(\displaystyle0,\frac{f_s}{N},\frac{2f_s}{N},\cdots,\frac{N-1}{N}f_s\)</span>和<spanclass="math inline">\(\displaystyle-f_s,-\frac{N-1}{N}f_s,-\frac{N-2}{N}f_s,\cdots,-\frac{f_s}{N}\)</span>是等价的.从这个无限序列中, 任选<spanclass="math inline">\(N\)</span>个在不同等价类中的空间频率,都能根据反变换复原出全套的<span class="math inline">\(g_n\)</span>.如果我们执意从<spanclass="math inline">\(0\)</span>频率出发向两侧选取频率,那么频率绝对值中最大的也不会超出<spanclass="math inline">\(\displaystyle\frac{f_s}{2}\)</span>​, 这就是著名的<strong>采样定理</strong>.</p><h3 id="正反变换">正/反变换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">numpy.fft.fft(a, n=<span class="hljs-literal">None</span>, axis=-<span class="hljs-number">1</span>, norm=<span class="hljs-string">&quot;backward&quot;</span>)<br>numpy.fft.ifft(a, n=<span class="hljs-literal">None</span>, axis=-<span class="hljs-number">1</span>, norm=<span class="hljs-string">&quot;backward&quot;</span>)<br></code></pre></td></tr></table></figure><p>它们是最基本的 FFT 函数, 其中</p><ul><li><code>a: numpy.ndarray</code>表示变换/反变换的对象,<ul><li>它可能是一个多维数组, <code>axis</code>指定变换所处的维度,默认取<code>-1</code>即最后一维.</li></ul></li><li><code>n: int</code>指定样本长度,输入<code>None</code>表示根据<code>a</code>的长度来决定. 如果输入具体值,长则切片, 短则用<code>0</code>补齐.</li><li><code>norm: str</code>表示归一化,<code>"forward"/"backward"</code>分别指定对变换/反变换得到的矢量归一化,<code>"ortho"</code>则会将<spanclass="math inline">\(N\)</span>因子均分给正/反变换.</li></ul><p>如果不打算对后三个 params 多加干涉, 那么以下两点需要重点注意:</p><ol type="1"><li><p>如果输入的<code>g</code>正好是空时域采样,则<code>numpy.fft.fft(g)</code>给出的是<spanclass="math inline">\(N\cdot G\)</span>,因为默认的归一化方式是<code>backward</code>, 它会把<spanclass="math inline">\(N\)</span>因子全部放到反变换里; 同样地,如果输入的<code>G</code>是特定频率的复振幅,则<code>numpy.fft.ifft(G)</code>输出的是<spanclass="math inline">\(\displaystyle\frac{g}{N}\)</span>;将两个函数复合显然仍能够回到数组自身.</p></li><li><p>令<code>G = numpy.fft.fft(g) / len(g)</code>,则<code>G[m]</code>未必代表<spanclass="math inline">\(\displaystyle\frac{mf_s}{N}\)</span>对应的复振幅,这是由于返回的数组采用相当奇葩的方式. 给定正指标<code>m</code>,如果<code>m &lt;= (N - 1) // 2</code>,那么<code>G[m]</code>的确具有这种含义; 否则,<code>G[m]</code>实际上对应着<spanclass="math inline">\(\displaystyle\frac{(m-N)f_s}{N}\)</span>.频率序列详解请看下一部分.</p></li></ol><h3 id="频率序列">频率序列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">numpy.fft.fftfreq(n, d=<span class="hljs-number">1.0</span>)<br></code></pre></td></tr></table></figure><p>这是<code>numpy.fft.fft</code>对应的频率序列.</p><ul><li><p><code>n</code>仍表示样本长度, 这时必须准确地指定.</p></li><li><p><code>d</code>是采样间隔, 即<spanclass="math inline">\(\displaystyle\frac{1}{f_s}\)</span>, 因此<spanclass="math inline">\(\displaystyle\frac{mf_s}{n}\)</span>​​即是<code>m / (n * d)</code>.</p></li></ul><p>频率序列的具体形式见如下代码与注释.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">d = <span class="hljs-number">1</span> / fs<br>freqs = numpy.fft.fftfreq(N, d)<br><span class="hljs-comment"># N = 2 * k: freqs = [0, 1, ..., k - 1, - k, - k + 1, ..., -1] / (N * d)</span><br><span class="hljs-comment"># N = 2 * k + 1: freqs = [0, 1, ..., k,  - k, - k + 1, ..., -1] / (N * d)</span><br></code></pre></td></tr></table></figure><p>即大约前一半是零频率以及递增的正频率,大约后一半是递增的负频率(绝对值递减), 如果<code>N</code>是偶数,负频率项要比正频率项多一项.</p><p>有时候, 将序列按照频率从负到正从小到大顺次重排是更有必要的,这有赖于所谓的 shift 函数.</p><h3 id="shift-函数">shift 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">numpy.fft.fftshift(x, axes=<span class="hljs-literal">None</span>)<br>numpy.fft.ifftshift(x, axes=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p><code>fftshift</code>是能够重排频谱的函数,<code>ifftshift</code>不是<code>ifft</code>的 shift 函数,而是<code>fftshift</code>的反函数. 下面以前者为例说明参数:</p><ul><li><code>x</code>输入一个数组,最好是<code>numpy.fft.fftshift</code>返回的结果</li><li><code>axes: int | tuple</code>规定作用轴,默认<code>None</code>表示每根轴都作用</li></ul><p><code>fftshift</code>将<span class="math inline">\(\{0, 1, ..., k -1(,- k),- k + 1, ..., -1\}\)</span>重排为<span class="math inline">\(\{-k + 1, ..., -1,0, 1, ..., k - 1(,- k)\}\)</span>,而<code>ifftshift</code>正相反.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>Fourier 方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>Fourier 分析</tag>
      
      <tag>FFT</tag>
      
      <tag>python</tag>
      
      <tag>numpy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fourier 方法(01)：从连续到离散</title>
    <link href="/posts/Fourier%20%E6%96%B9%E6%B3%95(01)%EF%BC%9A%E4%BB%8E%E8%BF%9E%E7%BB%AD%E5%88%B0%E7%A6%BB%E6%95%A3/"/>
    <url>/posts/Fourier%20%E6%96%B9%E6%B3%95(01)%EF%BC%9A%E4%BB%8E%E8%BF%9E%E7%BB%AD%E5%88%B0%E7%A6%BB%E6%95%A3/</url>
    
    <content type="html"><![CDATA[<p>考虑函数<span class="math inline">\(g(x)\)</span>​的 Fourier变换以及逆变换 <span class="math display">\[G(k)=\int_{-\infty}^{+\infty}g(x)e^{-2\pi ikx}dx\\g(x)=\int_{-\infty}^{+\infty}G(k)e^{2\pi ikx}dk\]</span> 数值计算中, 很多时候连续函数也是用离散的形式表达的,积分不是针对一个解析式进行符号计算,而是输入一个有限规模的样本来近似替代积分, 例如 <spanclass="math display">\[\{g(x_0+\frac{n}{f_s})|n\in\mathbb{N}\ ,n&lt;N\}\]</span> 因此我们实际计算的并不是<spanclass="math inline">\(g(x)\)</span>本身的变换, 而是如下分段函数的变换<span class="math display">\[\bar{g}(x)=\begin{aligned}\begin{cases}0\qquad &amp; x\in(-\infty,x_0)\\g(x_0)\qquad &amp;\displaystyle x\in[x_0,x_0+\frac{1}{f_s})\\\displaystyleg(x_0+\frac{1}{f_s})\qquad &amp;\displaystyle x\in[x_0+\frac{1}{f_s},x_0+\frac{2}{f_s})\\\vdots\\\displaystyleg(x_0+\frac{N-1}{f_s})\qquad &amp;\displaystylex\in[x_0+\frac{N-1}{f_s}, x_0+\frac{N}{f_s}]\\0\qquad &amp;\displaystyle x\in(x_0+\frac{N}{f_s},+\infty)\end{cases}\end{aligned}\]</span> 相应的频谱为 <span class="math display">\[\bar{G}(k)=\frac{1-\exp{(\displaystyle-\frac{2\pi ik}{f_s})}}{2\piik}e^{-2\pi ikx_0}\sum_{n=0}^{N-1} g(x_0+\frac{n}{f_s})e^{-\frac{2\pi ikn}{f_s}}\]</span> 如果我们将<spanclass="math inline">\(g(x_0+\displaystyle\frac{n}{f_s})\)</span>简记为<spanclass="math inline">\(g_n\)</span>, 同时<spanclass="math inline">\(k\)</span>也不取连续变量, 令 <spanclass="math display">\[k=\frac{mf_s}{N}\ ,\ m=0,1,\cdots,N-1\\G_m:=\frac{2\pi ike^{2\pi ikx_0}\bar{G}(k)}{1-\exp{(\displaystyle-\frac{2\piik}{f_s})}}\Bigg|_{k=\frac{mf_s}{N}}\]</span> 也就给出 <span class="math display">\[G_m=\sum_{n=0}^{N-1}g_ne^{-\frac{2\pi imn}{N}}\]</span> 这就是所谓的 <strong>时域离散 Fourier 变换(DTFT)</strong>,它的反变换如何? 可以猜测为 <span class="math display">\[\mathcal{F}^{-1}[G]_n=\sum_{m=0}^{N-1}G_me^{\frac{2\piimn}{N}}=\sum_{m,n&#39;}g_{n&#39;}\exp{(\frac{2\pi im(n-n&#39;)}{N})}\]</span> 幸好时域样本<spanclass="math inline">\(g_{n&#39;}\)</span>不依赖于<spanclass="math inline">\(m\)</span>, 可以按照等比序列的方法对<spanclass="math inline">\(m\)</span>求和, 即 <span class="math display">\[\mathcal{F}^{-1}[G]_n=\sum_{n&#39;=0}^{N-1}g_{n&#39;}\frac{1-e^{iN\phi}}{1-e^{i\phi}}\,\ \phi=\frac{2\pi(n-n&#39;)}{N}\]</span> 显然, <span class="math inline">\(N\phi\)</span>总是导向<spanclass="math inline">\(2\pi\)</span>的整数倍, 因此分子总是<spanclass="math inline">\(0\)</span>, 只要分数不构成<spanclass="math inline">\(\displaystyle\frac{0}{0}\)</span>型未定式,就给出零结果, 又<span class="math inline">\(|n-n&#39;|\le N-1\)</span>,因此当且仅当<span class="math inline">\(n&#39;=n\)</span>时构成未定式,<span class="math inline">\(n&#39;\ne n\)</span>时都给出零结果.</p><p>现在只需要关注<span class="math inline">\(n&#39;=n\)</span>项,退回计算等比序列和之前, 立即得到 <span class="math display">\[\mathcal{F}^{-1}[G]_n=\sum_{m=0}^{N-1}g_n=Ng_n\]</span> 我们最终得到完整的变换-反变换式: <span class="math display">\[\begin{aligned}G_m&amp;=\sum_{n=0}^{N-1}g_n\exp{(-\frac{2\pi imn}{N})}\\g_n&amp;=\frac{1}{N}\sum_{m=0}^{N-1}G_m\exp{(\frac{2\pi imn}{N})}\end{aligned}\]</span> <span class="math inline">\(N\)</span>因子依然可以随意分配,也就是说可以改写为 <span class="math display">\[\begin{aligned}G_m&amp;=\frac{1}{N}\sum_{n=0}^{N-1}g_n\exp{(-\frac{2\pi imn}{N})}\\g_n&amp;=\sum_{m=0}^{N-1}G_m\exp{(\frac{2\pi imn}{N})}\end{aligned}\]</span> 这样写的好处是, 数学上使用反变换更多, 或者说将信号 Fourier分解为频域上的谱, 频谱前面最好不带有系数,但是前一种写法在程序中也不少见.</p><p>像这样计算一次完整的变换或反变换, 需要对<spanclass="math inline">\(m\)</span>和<spanclass="math inline">\(n\)</span>二重循环, 给出<spanclass="math inline">\(O(N^2)\)</span>的时间复杂度. 下面将要介绍的<strong>快速 Fourier 变换(FFT)</strong> 是一种可以简化至<spanclass="math inline">\(O(N\log N)\)</span>​的算法.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>Fourier 方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>Fourier 分析</tag>
      
      <tag>DTFT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数值解和优化问题(04)：基于梯度的多元函数优化</title>
    <link href="/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(04)%EF%BC%9A%E5%9F%BA%E4%BA%8E%E6%A2%AF%E5%BA%A6%E7%9A%84%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E4%BC%98%E5%8C%96/"/>
    <url>/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(04)%EF%BC%9A%E5%9F%BA%E4%BA%8E%E6%A2%AF%E5%BA%A6%E7%9A%84%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>上一节绕过求导数直接对函数优化, 可以看到还是比较复杂的,而本节打算从最理想的二次型出发, 基于函数的导函数来研究优化问题,因为二次型的形式比较简单: <span class="math display">\[f_{p}(\boldsymbol{x})=f_p(\boldsymbol{x}_0)-\boldsymbol{b}^{\mathbf{T}}\cdot(\boldsymbol{x}-\boldsymbol{x}_0)+\frac{1}{2}(\boldsymbol{x}-\boldsymbol{x}_0)^{\mathbf{T}}\mathbf{A}(\boldsymbol{x}-\boldsymbol{x}_0)\]</span> 即二次型是一种一二阶导都是常量且高阶导数为零的同时,还可优化的函数. 不失一般性, 对于函数<span class="math inline">\(f\in\mathbb{C}^{2}\)</span>, 平移初始位置和函数值的零点, 使得它总能写成形如<span class="math display">\[f(\boldsymbol{x})=-\boldsymbol{b}^\mathbf{T}\cdot\boldsymbol{x}+\frac{1}{2}\boldsymbol{x}^\mathbf{T}\mathbf{A}\boldsymbol{x}+o(|\boldsymbol{x}|^2)\]</span> 的形式. <spanclass="math inline">\(\boldsymbol{b}\)</span>和<spanclass="math inline">\(\mathbf{A}\)</span>分别给定<spanclass="math inline">\(f(\boldsymbol{x})\)</span>在原点的一阶和二阶偏导数.还可以定义 <strong>残差</strong>: <span class="math display">\[\begin{aligned}\boldsymbol{r}(\boldsymbol{x}) &amp;= -\boldsymbol{\nabla}f(\boldsymbol{x})\\\text{对于上述平移}&amp;\text{过的函数式, 有}\\\boldsymbol{r}(\boldsymbol{x}) &amp;\approx\boldsymbol{b}-\mathbf{A}\boldsymbol{x}\end{aligned}\]</span> 现在我们从原点出发, 希望对函数进行优化.</p><h2 id="最速下降法">最速下降法</h2><p>最速下降法的逻辑十分简单:在一个点附近最好的局部优化方向自然是负梯度方向, 即残差方向: <spanclass="math display">\[\boldsymbol{x}_{k+1}=\boldsymbol{x}_k+\lambda_k\boldsymbol{r}_k\]</span> 其中<spanclass="math inline">\(\lambda_k\)</span>是个待定参数,它自身构成一维优化问题, 因为: <span class="math display">\[\phi_k(\lambda_k):=f(\boldsymbol{x}_k+\lambda_k\boldsymbol{r}_k)\]</span> 像这样反复迭代, 最终加上一定的结束条件即可.</p><h2 id="共轭梯度法">共轭梯度法</h2><p>上面的最速下降法类似一种贪心策略, 通过一系列局部最优达到整体的最优,但是很多时候, 局部最优并不导向整体最优,或者处处进行局部优化并不是很高效的方案.如果函数的二阶导数在某些方向比较奇葩,例如相较于其他方向而言具有特别大的数值,在这样复杂的地形中优化函数的时候,如果按照最陡下降法来做就会沿着一个多重曲折的折线行进.这样的效果是需要很多小碎步才能接近极小值, 因此实际上是效率很低的.</p><p>请看下面的函数, 它是著名的 <ahref="https://en.wikipedia.org/wiki/Rosenbrock_function">Rosenbrock函数</a>, 使用最速下降法进行优化, 竟然整整迭代了1000次,这多少有些超出了我们的接受范围.</p><figure><img src="../img/banana_steepdesc.gif" alt="Rosenbrock 函数" /><figcaption aria-hidden="true">Rosenbrock 函数</figcaption></figure><p>为什么会造成这样的结果? 因为最速下降法的两次线搜索的位移是正交的,这其实一定程度上破坏了搜索的成果. 如果引入参数, 确保搜索方向<spanclass="math inline">\(\boldsymbol{p}_i\)</span>并不是只依赖于负梯度<spanclass="math inline">\(\boldsymbol{r}_i\)</span>, 而是 <spanclass="math display">\[\boldsymbol{p}_i=\boldsymbol{r}_i+\beta_{i-1}\boldsymbol{p}_{i-1}\]</span> 位置的递推式为 <span class="math display">\[\boldsymbol{x}_{i+1}=\boldsymbol{x}_i+\alpha_i\boldsymbol{p}_i\]</span> <spanclass="math inline">\(\alpha_i\)</span>可以用一维优化来求出, <spanclass="math inline">\(\beta_i\)</span>可以证明具有形式 <spanclass="math display">\[\beta_i=\frac{\boldsymbol{r}_{i+1}^\mathbf{T}\boldsymbol{r}_{i+1}}{\boldsymbol{r}_i^\mathbf{T}\boldsymbol{r}_i}\]</span></p><h3 id="步骤">步骤</h3><ol start="0" type="1"><li><p>给定<spanclass="math inline">\(\boldsymbol{p}_0=\boldsymbol{r}_0=-\displaystyle\boldsymbol{\nabla}f(\boldsymbol{x}_0)\)</span>, <spanclass="math inline">\(k=0\)</span></p></li><li><p>根据 <span class="math display">\[\phi(\alpha_k):= f(\boldsymbol{x}_k+\alpha_k\boldsymbol{p}_k)\]</span> 进行一维优化. 对于二次型可以直接利用公式计算<spanclass="math inline">\(\alpha_k\)</span> <span class="math display">\[\alpha_k=\frac{\boldsymbol{p}_k^\mathbf{T}\boldsymbol{r}_k}{\boldsymbol{p}_k^\mathbf{T}\mathbf{A}\boldsymbol{p}_k}\]</span></p></li><li><p>更新位置和残差: <span class="math display">\[\begin{aligned}\boldsymbol{x}_{k+1}&amp;=\boldsymbol{x}_k+\alpha_k\boldsymbol{p}_k\\\boldsymbol{r}_{k+1}&amp;=-\boldsymbol{\nabla}f(\boldsymbol{x}_{k+1})\qquad(\text{一般形式})\\&amp;=\boldsymbol{r}_k-\alpha_k\mathbf{A}\boldsymbol{p}_k\qquad(二次型)\end{aligned}\]</span></p></li><li><p>判定循环终止条件, 如果满足即跳出循环, 否则继续.</p></li><li><p>更新搜索方向 <span class="math display">\[\begin{aligned}\beta_k&amp;=\frac{\boldsymbol{r}_{k+1}^\mathbf{T}\boldsymbol{r}_{k+1}}{\boldsymbol{r}_k^\mathbf{T}\boldsymbol{r}_k}\\\boldsymbol{p}_{k+1}&amp;=\boldsymbol{r}_{k+1}+\beta_k\boldsymbol{p}_k\end{aligned}\]</span></p></li><li><p><span class="math inline">\(k\)</span>递增<spanclass="math inline">\(1\)</span>, 将新的<spanclass="math inline">\(k,\boldsymbol{x}_k,\boldsymbol{p}_k,\boldsymbol{r}_k\)</span>带到步骤1迭代.</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>数值解和优化问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>极值搜索</tag>
      
      <tag>最速下降法</tag>
      
      <tag>共轭梯度法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数值解和优化问题(03)：无导数的优化方法</title>
    <link href="/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(03)%EF%BC%9A%E6%97%A0%E5%AF%BC%E6%95%B0%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
    <url>/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(03)%EF%BC%9A%E6%97%A0%E5%AF%BC%E6%95%B0%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>所谓优化问题, 就是求一个函数的极小值点. 极值与导数有着千丝万缕的联系,但有时我们并不需要求导就能设法求解优化问题,本节给出单元和多元函数优化方法各一例: 黄金分割搜寻法和单纯形方法.</p><table frame="void"><tr><td width="50%"><img src = "../img/gold_division.png"></td><td><img src = "../img/simplx.png"></td></tr><tr><td style="text-align: center; font-family: KaiTi; font-weight: bold;">(摘自刘川《计算物理导论》图 5.1)</td><td style="text-align: center; font-family: KaiTi; font-weight: bold;">(摘自刘川《计算物理导论》图 5.2)</td></tr></table><h2 id="黄金分割搜寻法">黄金分割搜寻法</h2><p>假设我们从预估的区域内选择三个点:<spanclass="math inline">\(x_0&lt;x_1&lt;x_3\)</span>. 它们的函数值可以计算.假如这三个函数值中最小者为<span class="math inline">\(f(x_1)\)</span>,只要函数和区域不太奇特, 那么在<span class="math inline">\((x_0,x_3)\)</span>上必然存在极小值点.</p><p>然后我们产生一个点<spanclass="math inline">\(x_2\in(x_1,x_3)\)</span>, 那么分两种情况:</p><ol type="1"><li><span class="math inline">\(f(x_1)&lt;f(x_2)\)</span>, 则<spanclass="math inline">\(f(x_1)\)</span>仍维持最小, 新区间取作<spanclass="math inline">\((x_0,x_2)\)</span>, <spanclass="math inline">\(x_1\)</span>留作比较;</li><li><span class="math inline">\(f(x_1)&gt;f(x_2)\)</span>, 则<spanclass="math inline">\(f(x_2)\)</span>成为新的最小, 新区间取作<spanclass="math inline">\((x_1,x_3)\)</span>, <spanclass="math inline">\(x_2\)</span>留作比较.</li></ol><p>那么如何得到<span class="math inline">\(x_2\)</span>呢? 设定三个长度:<span class="math display">\[a:=x_1 - x_0\ ,\qquad b := x_2 - x_1\ ,\qquad c := x_3-x_1\]</span> 两种情况下的新区间总长度分别是<spanclass="math inline">\(a+b\)</span>和<spanclass="math inline">\(c\)</span>, 我们希望两者一致. 另外,我们还希望两种新区间有相似性, 即各个点比例一致. 那么 <spanclass="math display">\[\begin{aligned}b &amp;= c - a\\\frac{b}{c} &amp;= \frac{a}{a + c}\end{aligned}\]</span> 解得 <span class="math display">\[c = \frac{\sqrt{5}+1}{2}a\ ,\qquad b = \frac{\sqrt{5}-1}{2}a\]</span> 这恰好是黄金分割比, 因此这种方法称作<strong>黄金分割搜寻法</strong>.</p><h3 id="方法总结">方法总结</h3><ol type="1"><li><p>给定区间两端点<span class="math inline">\(x_0&lt;x_3\)</span>​,由此求出两值为 <span class="math display">\[x_1 = \frac{\sqrt{5}-1}{2}x_0 + \frac{3-\sqrt{5}}{2}x_3\\x_2 = \frac{3-\sqrt{5}}{2}x_0 + \frac{\sqrt{5}-1}{2}x_3\]</span></p></li><li><p>研究结束条件<spanclass="math inline">\(g(x_0,x_1,x_2,x_3)\le\epsilon\)</span>是否满足,满足则终止, 不满足则来到步骤3.</p></li><li><p>比较<span class="math inline">\(f(x_1)\)</span>和<spanclass="math inline">\(f(x_2)\)</span>, 如果前者更小, 来到步骤4.a;如果前者更大, 来到步骤4.b.</p></li><li><p>根据上一步的情况选择其一:</p><ol type="1"><li>将<span class="math inline">\(x_0,x_1,x_2\)</span>作为新的<spanclass="math inline">\(x_0,x_2,x_3\)</span>, 新的<spanclass="math inline">\(x_1\)</span>按照步骤1计算, 进入步骤2.</li><li>将<span class="math inline">\(x_1,x_2,x_3\)</span>作为新的<spanclass="math inline">\(x_0, x_1,x_3\)</span>, 新的<spanclass="math inline">\(x_2\)</span>按照步骤1计算, 进入步骤2.</li></ol></li></ol><h2 id="单纯形方法">单纯形方法</h2><h3 id="前置知识">前置知识</h3><p>单纯形方法是适用于多元函数的无导数优化方法, 也叫 <strong>Nelder-Mead方法</strong>. 要使用这种方法, 就要先定义所谓的<strong>单纯形</strong>:</p><blockquote><p>考虑<span class="math inline">\(n\)</span>维空间中完全联通的<spanclass="math inline">\(n+1\)</span>个不共超平面的点, 任选<spanclass="math inline">\(n\)</span>个点即共超平面. 按照<spanclass="math inline">\(C_{n+1}^n\)</span>组合出的<spanclass="math inline">\(n+1\)</span>个超平面围成的几何体, 称作<spanclass="math inline">\(n\)</span>维空间的单纯形.</p></blockquote><p>举例说明即是: <span class="math inline">\(1\)</span>维的线段, <spanclass="math inline">\(2\)</span>维的三角形, <spanclass="math inline">\(3\)</span>维的四面体......</p><p>构造单纯形的方法非常简单, 给定一个出发点<spanclass="math inline">\(\vec{x}^{(0)}\)</span>, 构造另外<spanclass="math inline">\(n\)</span>个点<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="这里的构造只需要线性无关, 不需要正交性, 斜交是完全允许的.">[1]</span></a></sup><span class="math display">\[\vec{x}^{(i)}=\vec{x}^{(0)}+h_i\hat{e}_i\ ,\qquad i = 1, 2, \cdots, n\]</span> <span class="math inline">\(n+1\)</span>个点中,有三个点尤其应该关注:</p><ul><li><strong>最佳点</strong>: 函数值最小的点, 记作<spanclass="math inline">\(\vec{x}^{(m)}\)</span>.</li><li><strong>最差点</strong>: 函数值最大的点, 记作<spanclass="math inline">\(\vec{x}^{(M)}\)</span>.</li><li><strong>次差点</strong>: 函数值次大的点, 记作<spanclass="math inline">\(\vec{x}^{(\mu)}\)</span>.</li></ul><p>对于每个点定义它的<strong>对偶中心点</strong>: <spanclass="math display">\[\vec{x}_c^{(k)}=\frac{1}{n}\sum_{j=0,j\ne k}^n\vec{x}^{(j)}\]</span></p><h3 id="算法步骤">算法步骤</h3><ol type="1"><li><p>对给定的起始点确定其它<spanclass="math inline">\(n\)</span>个点和<spanclass="math inline">\(\vec{x}^{(M)},\vec{x}^{(m)},\vec{x}^{(\mu)}\)</span>.</p></li><li><p><strong>反射步骤</strong></p><ol type="1"><li><p>求出<spanclass="math inline">\(n+1\)</span>个点的<strong>样本方差</strong><spanclass="math inline">\(s^2\)</span>并与规定的误差<spanclass="math inline">\(\epsilon\)</span>​​比较, 如果更低就停止迭代,否则进行反射, 具体地: <span class="math display">\[\vec{x}_r=(\alpha+1)\vec{x}_c^{(M)}-\alpha\vec{x}^{(M)}\]</span> 其中<spanclass="math inline">\(\alpha&gt;0\)</span>是可调的反射系数.</p></li><li><p>判断函数值, 如果满足<spanclass="math inline">\(f(\vec{x}^{(m)})&lt;f(\vec{x}_r)&lt;f(\vec{x}^{(\mu)})\)</span>,则用<span class="math inline">\(\vec{x}_r\)</span>替代<spanclass="math inline">\(\vec{x}^{(M)}\)</span>(尽管还有比它更差的点)并回到步骤2.a;如果<spanclass="math inline">\(f(\vec{x}_r)&lt;f(\vec{x}^{(m)})\)</span>,即它成了最佳的点, 进入步骤3; 如果<spanclass="math inline">\(f(\vec{x}_r)&gt;f(\vec{x}^{(\mu)})\)</span>,进入步骤4.</p></li></ol></li><li><p><strong>扩展步骤</strong></p><ol type="1"><li><p>定义新的扩展点<span class="math inline">\(\vec{x}_e\)</span>​​,使得 <span class="math display">\[\vec{x}_e=\beta\vec{x}_r+(1-\beta)\vec{x}_c^{(M)}\]</span> 其中<spanclass="math inline">\(\beta&gt;1\)</span>是一个可调的扩展参数.</p></li><li><p>判断函数值, 如果<spanclass="math inline">\(f(\vec{x}_e)&lt;f(\vec{x}^{(m)})\)</span>,则用<span class="math inline">\(\vec{x}_e\)</span>替代<spanclass="math inline">\(\vec{x}^{(M)}\)</span>; 否则用<spanclass="math inline">\(\vec{x}_r\)</span>替代<spanclass="math inline">\(\vec{x}^{(M)}\)</span>.不管用谁替代都回到步骤2.</p></li></ol></li><li><p><strong>收缩步骤</strong></p><ol type="1"><li><p>判断函数值. 如果<spanclass="math inline">\(f(\vec{x}_r)&lt;f(\vec{x}_c^{(M)})\)</span>,则极小值点位于<span class="math inline">\(\vec{x}_r\)</span>和<spanclass="math inline">\(\vec{x}_c^{(M)}\)</span>​之间, 收缩点选为 <spanclass="math display">\[\vec{x}_{con}=\gamma\vec{x}_r+(1-\gamma)\vec{x}_c^{(M)}\,\qquad\gamma\in(0,1)\]</span> 如果<span class="math inline">\(f(\vec{x}_r)\gef(\vec{x}_c^{(M)})\)</span>, 则极小值点位于<spanclass="math inline">\(\vec{x}^{(M)}\)</span>和<spanclass="math inline">\(\vec{x}_c^{(M)}\)</span>之间, 收缩点选为 <spanclass="math display">\[\vec{x}_{con}=\gamma\vec{x}^{(M)}+(1-\gamma)\vec{x}_c^{(M)}\]</span></p></li><li><p>判断函数值, 如果<spanclass="math inline">\(f(\vec{x}_{con})&lt;f(\vec{x}^{(M)})\)</span>且<spanclass="math inline">\(f(\vec{x}_{con})&lt;f(\vec{x}_r)\)</span>, 用<spanclass="math inline">\(\vec{x}_{con}\)</span>替代<spanclass="math inline">\(\vec{x}^{(M)}\)</span>回到步骤2; 否则,回到步骤1将每个<span class="math inline">\(h_k\)</span>都减半,重新构造各个点.</p></li></ol></li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>这里的构造只需要线性无关,不需要正交性, 斜交是完全允许的.<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>数值解和优化问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>极值搜索</tag>
      
      <tag>黄金分割搜寻法</tag>
      
      <tag>单纯形方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数值解和优化问题(02)：Aitken 算法, Steffensen 算法</title>
    <link href="/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(02)%EF%BC%9AAitken%20%E7%AE%97%E6%B3%95,%20Steffensen%20%E7%AE%97%E6%B3%95/"/>
    <url>/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(02)%EF%BC%9AAitken%20%E7%AE%97%E6%B3%95,%20Steffensen%20%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="aitken---δ²-加速算法">Aitken - Δ² 加速算法</h2><p>如果我们已经有了一个收敛于函数<spanclass="math inline">\(f(x)\)</span>的根<spanclass="math inline">\(\xi\)</span>的一个迭代序列<spanclass="math inline">\(\{x_i\}\)</span>,希望构造一个收敛速度更快的迭代序列<spanclass="math inline">\(\{x_i&#39;\}\)</span>. 为此, 引入新参数<spanclass="math inline">\(k\)</span>: <span class="math display">\[k:=\frac{x_{i+1}-\xi}{x_i-\xi}\]</span> 假定<span class="math inline">\(k\)</span>和<spanclass="math inline">\(\xi\)</span>是不依赖于<spanclass="math inline">\(i\)</span>的常数(基本不可能),那么它们可以用相邻的三个元素表示出来: <span class="math display">\[\begin{aligned}k &amp;= \frac{x_{i+2}-x_{i+1}}{x_{i+1}-x_i}\\\xi &amp;= \frac{x_ix_{i+2}-x_{i+1}^2}{x_{i+2}-2x_{i+1}+x_i}\end{aligned}\]</span> 引入差分算符<span class="math inline">\(\Delta x_i :=x_{i+1}-x_i\)</span>, 则 <span class="math display">\[\xi=x_i-\displaystyle\frac{(\Delta x_i)^2}{\Delta^2 x_i}\]</span> 直接拿它构造新序列, 得到 <span class="math display">\[\boxed{x_i&#39;=x_i-\frac{(\Delta x_i)^2}{\Delta^2x_i}=x_i-\frac{(x_{i+1}-x_i)^2}{x_{i+2}-2x_{i+1}+x_i}}\]</span> 这就是所谓的 <strong>Aitken-Δ² 加速算法</strong>,按照这个算法得到的新序列必然收敛得更快.</p><h2 id="steffensen-算法">Steffensen 算法</h2><p>我们使用迭代函数的形式描述迭代过程 <span class="math display">\[x_{i+1}=\Phi(x_i)\ ;\qquad\xi=\Phi(\xi)\]</span> 相应地, Aitken 算法的形式可以改写为 <spanclass="math display">\[\begin{aligned}x_i&#39;&amp;=x_i-\frac{(\Phi(x_i)-x_i)^2}{\Phi[\Phi(x_i)]-2\Phi(x_i)+x_i}\\&amp;=\frac{x_i\Phi[\Phi(x_i)]-[\Phi(x_i)]^2}{\Phi[\Phi(x_i)]-2\Phi(x_i)+x_i}\end{aligned}\]</span> 进一步引入新函数 <span class="math display">\[\Psi(x):=\frac{x\Phi[\Phi(x)]-[\Phi(x)]^2}{\Phi[\Phi(x)]-2\Phi(x)+x}\\x&#39;_i=\Psi(x_i)\]</span> 我们已知<span class="math inline">\(x_i&#39;\)</span>比<spanclass="math inline">\(x_i\)</span>更快, 不如把它定义成所谓的<spanclass="math inline">\(x_{i+1}\)</span>, 则新迭代方法告诉我们 <spanclass="math display">\[x_{i+1}=\Psi(x_i)\]</span></p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>数值解和优化问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>数值求解</tag>
      
      <tag>Aitken 算法</tag>
      
      <tag>Steffensen 算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数值解和优化问题(01)：对分法, 切线法和割线法</title>
    <link href="/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(01)%EF%BC%9A%E5%AF%B9%E5%88%86%E6%B3%95,%20%E5%88%87%E7%BA%BF%E6%B3%95%E5%92%8C%E5%89%B2%E7%BA%BF%E6%B3%95/"/>
    <url>/posts/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%92%8C%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98(01)%EF%BC%9A%E5%AF%B9%E5%88%86%E6%B3%95,%20%E5%88%87%E7%BA%BF%E6%B3%95%E5%92%8C%E5%89%B2%E7%BA%BF%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>本章介绍两类问题, 数值解问题(即解方程)和优化问题(即查找极小值点),它们一定程度上很像. <strong>我们默认本章的讨论对象,即某些一元或多元函数, 在讨论的区间上具有连续导数.</strong>我们不使用特定的公式进行近似估计,而是从一个初始点开始进行迭代逼近最优解. 本节就要介绍三类迭代求根法.</p><h2 id="对分法">对分法</h2><p>给定一个函数<span class="math inline">\(f(x)\)</span>,如果我们已知它在闭区间<spanclass="math inline">\([a,b]\)</span>上连续并且满足<spanclass="math inline">\(f(a)f(b)&lt;0\)</span>, 那么最直接的求根方法就是<strong>对分法</strong>, 也称 <strong>二分法</strong>.</p><p>对分法的流程十分简单, 每次我们将区间二分, 计算中间位置<spanclass="math inline">\(c=\displaystyle\frac{a+b}{2}\)</span>的函数值<spanclass="math inline">\(f(c)\)</span>, 如果它和<spanclass="math inline">\(f(a)\)</span>或<spanclass="math inline">\(f(b)\)</span>中的某个值异号,则可以知道两个子区间中存在根的区间, 如是递归,就能锁定根附近的一个小区间.</p><p>对分法的优势十分明显, 如果<spanclass="math inline">\(f(x)\)</span>的导数计算不便(尽管存在),那么对分法作为一种只涉及函数值计算的方法是很便利的; 另外,很多时候求根过程本身并没有多么费时, 或者不追求收敛速度,那么对分法也是较好的选择, 它的误差随迭代次数而指数衰减.</p><h2 id="newton-raphson-法">Newton-Raphson 法</h2><p>我们同样考虑一个一元函数<spanclass="math inline">\(f(x)\)</span>的根. 假设它有一根<spanclass="math inline">\(\xi\)</span>, 并且搜索域足够光滑并处在<spanclass="math inline">\(\xi\)</span>附近, 使得函数<spanclass="math inline">\(f(x)\)</span>可以作 Taylor 展开: <spanclass="math display">\[f(\xi)=0\ ;\qquad f(\xi)=f(x_0)+f&#39;(x_0)(\xi-x_0)+o(\xi-x_o)\]</span> 抛弃高阶无穷小, 也就是作线性近似,有 <spanclass="math display">\[\begin{aligned}&amp;\boxed{\xi\approx x_0-\frac{f(x_0)}{f&#39;(x_0)}}\\\text{或者写作 }&amp;\boxed{x_{i+1}=x_i-\frac{f(x_i)}{f&#39;(x_i)}}\end{aligned}\]</span> 这个表达式就是所谓的 <strong>Newton-Raphson</strong> 法,将求得的<span class="math inline">\(\xi\)</span>值作为下一轮的<spanclass="math inline">\(x_0\)</span>进行迭代, 直到误差收敛到想要的范围,因为涉及且仅涉及一阶导数计算, 又称为 <strong>切线法</strong>.</p><p>切线法的优势在于更快的收敛速度. 令<spanclass="math inline">\(\epsilon_i=x_i-\xi\)</span>, 有 <spanclass="math display">\[\epsilon_{i+1}=\epsilon_{i}-\frac{f(x_i)}{f&#39;(x_i)}\]</span> 考虑到后一项的 Taylor 近似公式 <span class="math display">\[\begin{aligned}f(x_i)&amp;=f(\xi)+f&#39;(\xi)\cdot\epsilon_i+o(\epsilon_i)\approxf&#39;(\xi)\cdot\epsilon_i\\f&#39;(x_i)&amp;=f&#39;(\xi)+f&#39;&#39;(\xi)\cdot\epsilon_i +o(\epsilon_i)\approx f&#39;(\xi)+f&#39;&#39;(\xi)\cdot\epsilon_i\end{aligned}\]</span> 得到 <span class="math display">\[\epsilon_{i+1}\sim\epsilon_i^2\]</span> Newton 法也并非没有缺陷. 迭代公式依赖于函数导数,如果在搜索域内同时存在极值, 使得<spanclass="math inline">\(f&#39;(x_i)\)</span>很小,那么可能造成某一步的位移很大, 误差急剧变大, 慢慢回来是很困难的,极值点(驻点)对 Newton 法干扰很大.</p><h3 id="高阶推广">高阶推广</h3><p>我们可以作抛物近似, 它给出一个比较复杂的公式: <spanclass="math display">\[x_{i+1}=x_i-\frac{f(x_i)\pm\sqrt{f&#39;(x_i)^2-2f(x_i)f&#39;&#39;(x_i)}}{f&#39;&#39;(x_i)}\]</span> 更高阶的推广过于复杂, 而且导数计算不便, 故而不用,这个二阶推广使用也较少.</p><h3 id="多元推广">多元推广</h3><p>我们还可以把一元方程推广为多元的方程组. 给定线性独立的方程组 <spanclass="math display">\[f_k(\vec{x})=0\ ,\qquad k=1,2,\cdots,n\]</span> 其中<spanclass="math inline">\(\vec{x}=(x^{(1)},x^{(2)},\cdots,x^{(n)})\)</span>.同样地, 进行 Taylor 展开 <span class="math display">\[\vec{f}(\vec{\xi})=\boldsymbol{0}\ ;\qquad\vec{f}(\vec{\xi})=\vec{f}(\vec{x}_0)+\boldsymbol{\nabla}\vec{f}(\vec{x}_0)\cdot(\vec{\xi}-\vec{x}_0)+o(|\vec{\xi}-\vec{x}_0|)\]</span> 其中<span class="math inline">\(\boldsymbol{\nabla}\vec{f}(\vec{x}_0)\)</span>自然是个张量, 并且满足 <spanclass="math display">\[[\boldsymbol{\nabla} \vec{f}(\vec{x}_0)]_{jk}=\frac{\partialf_j(\vec{x})}{\partial x^{(k)}}\]</span> 就是 Jacobi 矩阵. 只要它在搜索域上可逆,就有<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote">&lt;spanclass="hint--top hint--rounded" aria-label="等价于 Jacobi 行列式非零,这实际上就是"线性独立"想表达的意思"&gt;[1]</span></a></sup> <spanclass="math display">\[\vec{x}_{i+1}=\vec{x}_i-[\boldsymbol{\nabla}\vec{f}(\vec{x}_i)]^{-1}\cdot\vec{f}(\vec{x}_i)\]</span> 当维数<span class="math inline">\(n=1\)</span>​时,退化为一元函数的切线法.</p><h2 id="割线法">割线法</h2><p>割线法和切线法类似, 它是导数不太好算时的平替, 我们用割线代替切线:<span class="math display">\[f&#39;(x_i)\approx\frac{f(x_i)-f(x_{i-1})}{x_i-x_{i-1}}\]</span> 那么割线法的迭代公式为 <span class="math display">\[x_{i+1}=x_i-\frac{(x_i-x_{i-1})f(x_i)}{f(x_i)-f(x_{i-1})}\]</span> 这实际上意味着<spanclass="math inline">\(x\)</span>能够具有下标<spanclass="math inline">\(-1\)</span>, 也就是说我们要给定两个初始位置<spanclass="math inline">\(x_{-1}\)</span>和<spanclass="math inline">\(x_0\)</span>. 如果它们之间存在驻点,割线法同样会失败; 只要正确运用割线法, 其收敛速度略慢于切线法,但明显快于对分法.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>等价于 Jacobi 行列式非零,这实际上就是"线性独立"想表达的意思<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>数值解和优化问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>数值求解</tag>
      
      <tag>对分法</tag>
      
      <tag>Newton-Raphson 法</tag>
      
      <tag>割线法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微积分数值计算(02)：外推积分法, Gauss 积分法</title>
    <link href="/posts/%E5%BE%AE%E7%A7%AF%E5%88%86%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(02)%EF%BC%9A%E5%A4%96%E6%8E%A8%E7%A7%AF%E5%88%86%E6%B3%95,%20Gauss%20%E7%A7%AF%E5%88%86%E6%B3%95/"/>
    <url>/posts/%E5%BE%AE%E7%A7%AF%E5%88%86%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(02)%EF%BC%9A%E5%A4%96%E6%8E%A8%E7%A7%AF%E5%88%86%E6%B3%95,%20Gauss%20%E7%A7%AF%E5%88%86%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="外推积分法">外推积分法</h2><p>所谓 <strong>外推积分法</strong>, 就是将积分区间大小为<spanclass="math inline">\(h\)</span>的数值积分值, 按照一定的形式外推至<spanclass="math inline">\(h\to0\)</span>的情况.比如我们如果考虑积分值满足如下表达式 <span class="math display">\[I(h)=\tau_0+\tau_1h^2+\cdots+\tau_mh^{2m}+\cdots\]</span> 那么我们就可以通过递推计算获得关于<spanclass="math inline">\(h\)</span>的某一阶的数值积分.</p><p>外推积分法的基础是 <strong>Euler-Maclaurin 公式</strong> <spanclass="math display">\[T(h)-\int_a^bf(t)dt=\sum_{k=1}^m\frac{B_{2k}h^{2k}}{(2k)!}[f^{(2k-1)}(a)-f^{(2k-1)}(b)]-\frac{B_{2m+2}h^{2m+2}}{(2m+2)!}f^{(2m+2)}(\xi)\,\ \xi\in[a,b]\]</span> 其中, <span class="math inline">\(T(h)\)</span>和<spanclass="math inline">\(\displaystyle\int_a^bf(t)dt\)</span>分别是微元法给出的积分值和真实的积分值.<span class="math inline">\(B_{2k}\)</span>是所谓的 Bernoulli 数, 即<span class="math display">\[\frac{z}{e^z-1}=\sum_{n=0}^\infty\frac{B_n}{n!}z^n\]</span> 根据这个公式, <spanclass="math inline">\(T(h)\)</span>可以写为形如 <spanclass="math display">\[T(h)=\tau_0+\tau_1h^2+\cdots+\tau_mh^{2m}+o(h^{2m})\]</span> 的多项式. 因此取多个<spanclass="math inline">\(h\)</span>并计算<spanclass="math inline">\(T(h)\)</span>​的值, 由此进行多项式插值,得到的插值函数的零阶项, 便是对积分的数值计算.</p><h3 id="neville-形式">Neville 形式</h3><p>我们可以模拟 Neville 插值法进行外推. 首先, 选取一个整数序列<spanclass="math inline">\(\{N_i\}\)</span>来调整<spanclass="math inline">\(h\)</span>, 即<spanclass="math inline">\(\{h_i\}=\{\displaystyle\frac{b-a}{N_i}\}\)</span>.为了方便, 将<span class="math inline">\(T(h_k)\)</span>记作<spanclass="math inline">\(T_{k0}\)</span>. 而内插的<spanclass="math inline">\(m\)</span>阶多项式记为<spanclass="math inline">\(P_{mm}(h)\)</span>, 它显然满足 <spanclass="math display">\[P_{mm}(h_k)=T_{k0}\]</span> 假设<span class="math inline">\(P_{jk}(h)\)</span>是关于<spanclass="math inline">\(h^2\)</span>的<spanclass="math inline">\(k\)</span>次插值函数, 支撑点为<spanclass="math inline">\(\{h_{j-k},\cdots,h_{j}\}\)</span>. 模仿 Neville迭代有 <span class="math display">\[P_{jk}=\frac{\displaystyle\frac{h_{j-k}^2}{h_j^2}P_{j,k-1}-P_{j-1,k-1}}{\displaystyle\frac{h_{j-k}^2}{h_j^2}-1}\]</span> 我们可以这么表示迭代过程: <span class="math display">\[\begin{pmatrix}T_{00} &amp;&amp; T_{10} &amp;&amp; T_{20} &amp;&amp; \cdots &amp;&amp;T_{m0}\newline&amp; \searrow &amp; \downarrow &amp; \searrow &amp; \downarrow&amp;\searrow &amp; \cdots &amp; \searrow &amp; \downarrow\newline&amp;&amp;P_{11} &amp;&amp; P_{21} &amp;&amp; \cdots &amp;&amp; P_{m1}\newline&amp;&amp;&amp; \searrow &amp; \downarrow &amp;\searrow &amp; \cdots&amp; \searrow &amp; \downarrow\newline&amp;&amp;&amp;&amp; P_{22} &amp;&amp; \cdots &amp;&amp; P_{m2}\newline&amp;&amp;&amp;&amp;&amp;\searrow &amp; \cdots &amp; \searrow &amp;\downarrow\newline&amp;&amp;&amp;&amp;&amp;&amp; \cdots &amp;&amp; \cdots\newline&amp;&amp;&amp;&amp;&amp;&amp;&amp; \searrow &amp; \downarrow\newline&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;P_{mm}\end{pmatrix}\]</span></p><h2 id="gauss-积分法">Gauss 积分法</h2><p>如果一个函数可以利用正交多项式的展开进行近似,我们就可以利用这个展开计算定积分.</p><p>现在先给定积分区间<spanclass="math inline">\([a,b]\)</span>以及一个内积空间<spanclass="math inline">\(\mathbb{V}\)</span>, 权函数为<spanclass="math inline">\(\omega\)</span>, 主要研究对象为函数<spanclass="math inline">\(f\in\mathbb{V}\)</span>.内积空间上全体最高次系数为<span class="math inline">\(1\)</span>的<spanclass="math inline">\(j\)</span>次多项式, 构成了内积空间<spanclass="math inline">\(\mathbb{V}\)</span>的真子集, 记作<spanclass="math inline">\(\mathbb{P}_j\)</span>.</p><p>我们不加证明地指出一个定理系统:</p><h3 id="正交多项式与-chebyshev-系统">正交多项式与 Chebyshev 系统</h3><ol type="1"><li><p><strong>正交基的存在性</strong></p><p>存在一系列多项式<span class="math inline">\(p_k\in\mathbb{P}_k\ ,\k=0,1,\cdots\)</span>​​, 满足正交关系 <span class="math display">\[(p_j,p_k)=0\ ,\ j\ne k\]</span></p></li><li><p><strong>Gram-Schimidt 正交化方法</strong></p><p>这个正交基可以由下列递推关系给出 <span class="math display">\[p_{k+1}(x)=(x-\alpha_{k+1})p_k(x)-\beta_{k+1}^2p_{k-1}(x)\newlinep_0(x)\equiv1\ ,\ \text{规定 }p_{-1}(x)\equiv0\]</span> 其中, 参数<span class="math inline">\(\alpha\)</span>和<spanclass="math inline">\(\beta\)</span>分别为 <span class="math display">\[\alpha_{k+1}=\frac{(xp_{k+1},p_{k+1})}{(p_{k+1},p_{k+1})}\\\beta_{k+1}^2=\frac{(p_k,p_k)}{(p_{k-1},p_{k-1})}\\(\text{规定 }\beta^2_1=0)\]</span></p></li><li><p><strong>零点的性质</strong></p><p><span class="math inline">\(p_k(x)\)</span>的<spanclass="math inline">\(k\)</span>个零点都是单重实根, 并且都在<spanclass="math inline">\([a,b]\)</span>上</p></li><li><p><strong>Haar 条件</strong></p><p>给定<span class="math inline">\(n\)</span>个两两不同的自变量<spanclass="math inline">\(\{t_i\}_{0\sim n-1}\)</span>, 下列系数矩阵是可逆的<span class="math display">\[\begin{aligned}\boldsymbol{A}&amp;=\begin{pmatrix}p_0(t_0) &amp; \cdots &amp; p_0(t_{n-1})\newline\vdots &amp; \cdots &amp; \vdots\newlinep_{n-1}(t_0) &amp; \cdots &amp; p_{n-1}(t_{n-1})\end{pmatrix}\newline\newline(&amp;\text{或者 }a_{jk}=p_{j-1}(t_{k-1}))\end{aligned}\]</span></p></li></ol><p>Haar 条件意味着什么呢? 当我们计算一个插值问题时, 插值函数为 <spanclass="math display">\[P_{N}(x)=\sum_{k=0}^{N-1}c_kp_k(x)\]</span> 支撑点为<span class="math inline">\(\{(t_i,f_i)\}_{0\simN-1}\)</span>, 因此它满足一个线性方程组 <span class="math display">\[\sum_{k=0}^{N-1}p_k(t_{j})c_k=f_j\]</span> 即 <span class="math display">\[\begin{pmatrix}c_0 &amp; c_1 &amp; \cdots &amp;c_{N-1}\end{pmatrix}\cdot\boldsymbol{A}=\begin{pmatrix}f_0 &amp; f_1 &amp; \cdots &amp; f_{N-1}\end{pmatrix}\]</span> 它有唯一解的条件是<spanclass="math inline">\(\boldsymbol{A}\)</span>具有full rank,也就要求可逆, 即所谓的 Haar 条件保证了插值问题解的唯一性.满足以上几个条件的一系列多项式, 称之为 <strong>Chebyshev系统</strong>.</p><h3 id="gauss-点-权重因子">Gauss 点, 权重因子</h3><p>我们把 Gram-Schimidt 正交化方法中的参数排成一个三对角矩阵 <spanclass="math display">\[\boldsymbol{J}_n=\begin{pmatrix}\alpha_1 &amp; \beta_2 &amp;\newline\beta_2 &amp; \alpha_2 &amp; \ddots\newline&amp; \ddots &amp; \ddots &amp; \ddots\newline&amp; &amp; \ddots &amp;\alpha_{n-1} &amp; \beta_n\newline&amp; &amp; &amp; \beta_n &amp; \alpha_n\end{pmatrix}\]</span> 定义函数 <span class="math display">\[p_n(x)=\det(x\boldsymbol{I}_n-\boldsymbol{J}_n)\]</span> 明显有 <span class="math display">\[p_n(x)=(x-\alpha_n)p_{n-1}(x)-\beta_n^2p_{n-2}(x)\]</span> 这明显就是之前定义的多项式基<spanclass="math inline">\(\{p_i(x)\}\)</span>, 而<spanclass="math inline">\(\boldsymbol{J}_n\)</span>的本征值, 恰好是<spanclass="math inline">\(p_n(x)\)</span>的<spanclass="math inline">\(n\)</span>个零点.</p><p>假设我们选择了这<spanclass="math inline">\(n\)</span>个零点作为积分的 <strong>Gauss点</strong>: <span class="math display">\[I[f]\approx\sum_{j=1}^nw_jf(x_j)\]</span> <span class="math inline">\(w_j\)</span>称为<strong>权重因子</strong>, 为了保证支撑点都有效, 并且不出现正负相消,它们应该都为正. 考虑在正交多项式基上展开<spanclass="math inline">\(\displaystylef(x)\approx\sum_{k=0}^{n-1}c_kp_k(x)\)</span>, 近似替代<spanclass="math inline">\(f\)</span>, 我们希望三个约等号联系起一个等号:<span class="math display">\[\sum_{k=0}^{n-1}c_k\int_a^b\omega(x)p_k(x)dx=\sum_{k=0}^{n-1}c_k\sum_{j=1}^nw_jp_k(x_j)\]</span> 观察左边, 不难发现其实只有<spanclass="math inline">\(k=0\)</span>项存在, 因为积分相当于<spanclass="math inline">\(p_0\equiv1\)</span>和<spanclass="math inline">\(p_k\)</span>的内积.为了得到普适的式子(指对于任何<spanclass="math inline">\(\{c_i\}\)</span>总能取等或者近似取等), 有 <spanclass="math display">\[\sum_{j=1}^nw_jp_k(x_j)=\begin{cases}\begin{aligned}\displaystyle(p_0,p_0)\qquad k=0&amp;\newline\newline\displaystyle0\qquad \text{otherwise}&amp;\end{aligned}\end{cases}\]</span></p><h3 id="gauss-积分法总结">Gauss 积分法总结</h3><p>对于一个函数<spanclass="math inline">\(f\in\mathbb{C}^{2n}[a,b]\)</span>和一个正交多项式基<spanclass="math inline">\(\{p_i\}\)</span>, 取<spanclass="math inline">\(p_n\)</span>的零点<spanclass="math inline">\(\{x_i\}_{1\sim n}\)</span>为 Gauss 点, 线性方程组<span class="math display">\[\sum_{j=1}^np_k(x_j)w_j=\begin{cases}\begin{aligned}\displaystyle(p_0,p_0)\qquad k=0&amp;\newline\newline\displaystyle0\qquad \text{otherwise}&amp;\end{aligned}\end{cases}\]</span> 的解<span class="math inline">\(\vec{w}\)</span>为权重因子,则可以用如下公式近似替代定积分: <span class="math display">\[\int_a^b\omega(x)f(x)dx=\sum_{j=1}^nw_jf(x_j)+\frac{f^{(2n)}(\xi)}{(2n)!}(p_n,p_n)\]</span> 后一项表示误差, <spanclass="math inline">\(\xi\)</span>是<spanclass="math inline">\([a,b]\)</span>上的某个数.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>微积分数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>数值微积分</tag>
      
      <tag>外推积分法</tag>
      
      <tag>Gauss 积分法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微积分数值计算(01)：简单的微积分方法</title>
    <link href="/posts/%E5%BE%AE%E7%A7%AF%E5%88%86%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(01)%EF%BC%9A%E7%AE%80%E5%8D%95%E7%9A%84%E5%BE%AE%E7%A7%AF%E5%88%86%E6%96%B9%E6%B3%95/"/>
    <url>/posts/%E5%BE%AE%E7%A7%AF%E5%88%86%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(01)%EF%BC%9A%E7%AE%80%E5%8D%95%E7%9A%84%E5%BE%AE%E7%A7%AF%E5%88%86%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>本节给出一些相当trivial的微积分的数值计算方法.</p><h2 id="数值微分">数值微分</h2><h3 id="差分法">差分法</h3><p>从定义出发即可, 与数学不同的是, 我们无法做到计算"无穷小",它压根不是个数, 只能尽量给出较小的差分长度: <spanclass="math display">\[f&#39;(x)\approx\frac{f(x+h)-f(x)}{h}\]</span> 对<span class="math inline">\(f(x)\)</span>作展开, 即<spanclass="math inline">\(f(x+h)=f(x)+c_1h+c_2h^2+\cdots\)</span>, 得到<span class="math display">\[f&#39;(x)\approx c_1+c_2h+o(h)\]</span> 这给出<span class="math inline">\(\sim h\)</span>的误差.不难想到一个改进方案 <span class="math display">\[f&#39;(x)\approx\frac{f(x+h)-f(x-h)}{2h}\]</span> 同样代入展开式, 得到 <span class="math display">\[f&#39;(x)\approx c_1+c_3h^2+o(h^2)\]</span> 它给出<span class="math inline">\(\sim h^2\)</span>的误差.</p><h3 id="基函数法">基函数法</h3><p>当然还有相对复杂的计算方法, 比如, 如果已经有<spanclass="math inline">\(f(x)\)</span>​的 Chebyshev 展开 <spanclass="math display">\[f(x)\approx\sum_{k=0}^Nc_kT_k(x)\]</span> 那么它的导数可以表示为 <span class="math display">\[f&#39;(x)\approx\sum_{k=0}^Nc_k&#39;T_k(x)\]</span> 其中, <spanclass="math inline">\(c_{k-1}&#39;=c_{k+1}&#39;+2kc_k\)</span>,并且<span class="math inline">\(c_{N}&#39;=c_{N-1}&#39;=0\)</span>.</p><h2 id="数值积分的-newton-cortes-方法">数值积分的 Newton-Cortes方法</h2><h3 id="微元法">微元法</h3><p>微元法实际上不是这里的 Newton - Cortes 方法,它只是从定积分定义出发的方案. 考虑一个函数<spanclass="math inline">\(f(x)\)</span>在闭区间<spanclass="math inline">\([a,b]\)</span>上可积, 它的定积分为 <spanclass="math display">\[\int_a^bf(x)dx=\lim_{\lambda\to0^+}\sum_{l=1}^Nf(\xi_l)\Delta x_l\]</span> 其中将区间<spanclass="math inline">\([a,b]\)</span>分割为<spanclass="math inline">\(N\)</span>个子区间<spanclass="math inline">\((x_{l-1},x_l)\ ,\ l=1,2,\cdots,N\)</span>, <spanclass="math inline">\(\Delta x_l=x_l-x_{l-1}\)</span>, <spanclass="math inline">\(\xi_l\in(x_{l-1},x_l)\)</span>. 而<spanclass="math inline">\(\lambda\)</span>则是最大的区间长度, 即 <spanclass="math display">\[\lambda=\max\{\Delta x_1,\Delta x_2,\cdots,\Delta x_N\}\]</span> 和差分法类似, 我们实现不了<spanclass="math inline">\(\lambda\to0^+(N\to\infty)\)</span>的无穷细致,那就足够细致. 取分割方案为<span class="math inline">\(N\)</span>等分, 即<span class="math display">\[x_k=a+\frac{b-a}{N}\times k\newline\Delta x_l=\lambda=\frac{b-a}{N}\]</span> 并对每一个区间使用梯形法则, 得到 <span class="math display">\[\int_a^bf(x)dx\approx\frac{b-a}{N}\times(\frac{f(x_0)}{2}+\sum_{j=1}^{N-1}f(x_j)+\frac{f(x_N)}{2})\]</span></p><h3 id="newton-cortes-方法">Newton-Cortes 方法</h3><p>这个方法同样是具有上述样本点<span class="math inline">\((x_k,f(x_k))\,\ k=0,1,\cdots,N\)</span>​. 不同的是, 我们先进行 Lagrange 插值 <spanclass="math display">\[P_N(x)=\sum_{k=0}^Nf(x_k)L_k(x)\]</span> 用插值函数的定积分近似替代真实定积分, 有 <spanclass="math display">\[\int_a^bf(x)dx=\sum_{k=0}^Nf(x_k)\int_a^bL_k(x)dx\]</span> 其中 <span class="math display">\[L_k(x)=\prod_{m\ne k}\frac{x-x_m}{x_k-x_m}=\Lambda_k(t)=\prod_{m\nek}\frac{t-m}{k-m}\ ,\ t=\frac{x-a}{b-a}\times N\]</span> 于是得到著名的 <strong>Newton-Cortes 公式</strong>: <spanclass="math display">\[\boxed{\int_a^bf(x)dx\approx\frac{b-a}{N}\sum_{k=0}^N\alpha_kf(x_k)}\]</span> 其中 <span class="math display">\[\alpha_k=\int_0^N\prod_{m\ne k}^{0\sim N}\frac{t-m}{k-m}dt\]</span></p><h3 id="newton-cortes-方法的应用">Newton-Cortes 方法的应用</h3><p>我们给出一些常用的公式:</p><ol type="1"><li><p><span class="math inline">\(N=1\)</span>, 梯形法则 <spanclass="math display">\[I=\displaystyle\frac{b-a}{2}[f(x_0)+f(x_1)]\]</span></p></li><li><p><span class="math inline">\(N=2\)</span>​, Simpson 公式 <spanclass="math display">\[I=\displaystyle\frac{b-a}{6}[f(x_0)+4f(x_1)+f(x_2)]\]</span></p></li><li><p><span class="math inline">\(N=3\)</span>, <spanclass="math inline">\(\displaystyle\frac{3}{8}\)</span>​规则 <spanclass="math display">\[I=\displaystyle\frac{b-a}{8}[f(x_0)+3f(x_1)+3f(x_2)+f(x_3)]\]</span></p></li><li><p><span class="math inline">\(N=4\)</span>​​, Milne 规则 <spanclass="math display">\[I=\displaystyle\frac{b-a}{90}[7f(x_0)+32f(x_1)+12f(x_2)+32f(x_3)+7f(x_4)]\]</span></p></li><li><p><span class="math inline">\(N=6\)</span>, Weddle 规则 <spanclass="math display">\[I=\displaystyle\frac{b-a}{840}[41f(x_0)+216f(x_1)+27f(x_2)+272f(x_3)+27f(x_4)+216f(x_5)+41f(x_6)]\]</span></p></li></ol><p><span class="math inline">\(N&gt;6\)</span>由于正负相消, 不太有效,此处不表.</p><p>需要注意的是, 这些公式并不代表我们真的只进行<spanclass="math inline">\(N\)</span>次分割. 例如Simpson公式,绝不意味着我们只对<spanclass="math inline">\([a,b]\)</span>进行一次分割,完全可以先细致地分为多个子区间, 再在每个子区间上单独使用Simpson公式.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>微积分数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>数值微积分</tag>
      
      <tag>Newton-Cortes 方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>函数数值计算(04)：Clenshaw 逆向迭代, Padé 近似</title>
    <link href="/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(04)%EF%BC%9AClenshaw%20%E9%80%86%E5%90%91%E8%BF%AD%E4%BB%A3,%20Pad%C3%A9%20%E8%BF%91%E4%BC%BC/"/>
    <url>/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(04)%EF%BC%9AClenshaw%20%E9%80%86%E5%90%91%E8%BF%AD%E4%BB%A3,%20Pad%C3%A9%20%E8%BF%91%E4%BC%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="clenshaw-逆向迭代">Clenshaw 逆向迭代</h2><p>真正用类似的展开来算目标函数值的时候, 我们可以采用 Clenshaw提出的逆向迭代的算法. 先回顾对一个函数展开的近似方案.</p><p>首先有一个可展开的函数<span class="math inline">\(f(x)\)</span>,以及一个基<spanclass="math inline">\(\{P_i(x)\}\)</span>(不一定要求正交归一),对于无穷维的基, 在<span class="math inline">\(i=N\)</span>处截断,用部分的基函数来近似描述<span class="math inline">\(f(x)\)</span>: <spanclass="math display">\[f(x)\approx S_N(x)=\sum_{k=0}^Nc_kP_k(x)\]</span> 基函数具有一个至多二阶的递推关系: <spanclass="math display">\[P_{k+1}(x)=\alpha_k(x)P_k(x)+\beta_k(x)P_{k-1}(x)\]</span> 现在, 假设我们已经得知<spanclass="math inline">\(\{c_i\}\)</span>, 目的是计算部分和函数<spanclass="math inline">\(S_N(x)\)</span>,这个计算可以通过构造新的函数进行.</p><h3 id="构造新函数">构造新函数</h3><p>我们引入一类新的函数<span class="math inline">\(\{b_i(x)\}\)</span>,并且规定 <span class="math display">\[b_{N+1}=b_{N+2}=0\]</span> 递推关系规定为 <span class="math display">\[b_k(x)=c_k+\alpha_k(x)b_{k+1}(x)+\beta_{k+1}(x)b_{k+2}(x)\]</span></p><h3 id="重新计算部分和函数">重新计算部分和函数</h3><p>我们顺势将部分和函数中的<spanclass="math inline">\(\{c_i\}\)</span>​全部替换, 分裂为三个和: <spanclass="math display">\[S_N(x)=\sum_{k=0}^Nb_k(x)P_k(x)-\sum_{k=0}^N\alpha_k(x)b_{k+1}(x)P_k(x)-\sum_{k=0}^N\beta_{k+1}(x)b_{k+2}(x)P_k(x)\]</span> 基函数<spanclass="math inline">\(\{P_i(x)\}\)</span>同样具有递推关系: <spanclass="math display">\[\begin{aligned}\beta_{k+1}(x)P_k(x)&amp;=P_{k+2}(x)-\alpha_{k+1}(x)P_{k+1}(x)\newline&amp;\Downarrow\newline\sum_{k=0}^N\beta_{k+1}(x)b_{k+2}(x)P_k(x)&amp;=\sum_{k=0}^Nb_{k+2}(x)P_{k+2}(x)-\sum_{k=0}^N\alpha_{k+1}(x)b_{k+2}(x)P_{k+1}(x)\newline&amp;=\sum_{k=2}^Nb_{k}(x)P_{k}(x)-\sum_{k=1}^N\alpha_{k}(x)b_{k+1}(x)P_{k}(x)\end{aligned}\]</span> 代回部分和函数, 得到 <span class="math display">\[S_N(x)=b_0(x)P_0(x)+b_1(x)P_1(x)-\alpha_0(x)b_1(x)P_0(x)\]</span> 我们通常不使用<spanclass="math inline">\(b_0(x)\)</span>(这样就可以少迭代一阶了),而是考虑<spanclass="math inline">\(b_0(x)=c_0+\alpha_0(x)b_1(x)+\beta_1(x)b_2(x)\)</span>,得到 <span class="math display">\[\boxed{S_N(x)=c_0P_0(x)+b_1(x)P_1(x)+\beta_1(x)b_2(x)P_2(x)}\label{eq1}\tag{eq1}\]</span></p><h3 id="方法总结">方法总结</h3><p>所谓 <strong>Clenshaw 逆向迭代法</strong>, 就是已知:</p><ol type="1"><li><p>一个基<span class="math inline">\(\{P_i(x)\}\)</span>​,以及它的递推关系 <span class="math display">\[P_{k+1}(x)=\alpha_k(x)P_k(x)+\beta_k(x)P_{k-1}(x)\]</span></p></li><li><p>一个原函数<span class="math inline">\(f(x)\)</span>,以及它基于某种方案在基<spanclass="math inline">\(\{P_i(x)\}\)</span>​上的有限维近似展开(前文多次称为<strong>部分和函数</strong>)的系数<spanclass="math inline">\(\{c_i\}\)</span> <span class="math display">\[f(x)\approx\sum_{k=0}^Nc_kP_k(x)\]</span></p></li></ol><p>于是构造新函数 <span class="math display">\[b_k(x)=c_k+\alpha_k(x)b_{k+1}(x)+\beta_{k+1}(x)b_{k+2}(x)\newlineb_{N+1}=b_{N+2}=0\]</span> 从而把<spanclass="math inline">\(N\)</span>项的求和化简为少数几项和, 如<spanclass="math inline">\(\eqref{eq1}\)</span>: <spanclass="math display">\[S_N(x)=c_0P_0(x)+b_1(x)P_1(x)+\beta_1(x)b_2(x)P_2(x)\]</span> 因为计算新函数<spanclass="math inline">\(\{b_i(x)\}\)</span>​时, 指标从大到小递推,因此得名为"逆向迭代法".</p><p>经过反向递推, 我们把一个多项的求和式通过递推关系变成了少量几项的求和,这一优点有些时候可以改进求和计算的收敛性和稳定性.</p><h2 id="padé-近似">Padé 近似</h2><p>还有一个常用的近似计算函数的方法是 Padé 近似,也是当作级数展开的补充方法来用. 因为计算很多高阶的级数展开并不容易, Padé近似相当于算了一些阶的级数展开以后来获得更精确结果的方法.</p><p>Padé 近似函数是一个分式函数的形式 <span class="math display">\[R(x)=\frac{\displaystyle\sum_{k=0}^Ma_kx^k}{1+\displaystyle\sum_{k=1}^Nb_kx^k}\]</span> 我们希望它在展开点(例如<spanclass="math inline">\(x=0\)</span>)处与函数相等至<spanclass="math inline">\(M+N\)</span>阶导数: <span class="math display">\[R^{(k)}(0)=c_k\newline(k=0,1,\cdots,M+N)\]</span> 并称它为函数的 <strong><spanclass="math inline">\((M,N)\)</span>阶 Padé 近似</strong>. 其中, <spanclass="math inline">\(c_k=f^{(k)}(0)\)</span>, 或者说<spanclass="math inline">\(f(x)\)</span>的幂级数为<spanclass="math inline">\(\displaystyle\sum_{k=0}^\inftyc_kx^k\)</span>.</p><p>分式函数求导或许比较繁琐, 我们退而求其次, 令<spanclass="math inline">\(R(x)=\displaystyle\sum_{k=0}^\inftyc_kx^k\)</span>, 并把分母乘到等式另一边, 再考虑各阶导数. 特别是<spanclass="math inline">\(M=N\)</span>的情形, 得到 <spanclass="math display">\[\begin{aligned}\sum_{m=1}^Nc_{N-m+k}b_m&amp;=-c_{N+k}\newlinea_k&amp;=\sum_{m=0}^kc_{k-m}b_m\newline(k&amp;=1,\cdots,N)\end{aligned}\label{eq2}\tag{eq2}\]</span> <spanclass="math inline">\(\eqref{eq2}\)</span>上式是一个<spanclass="math inline">\(N\)</span>元线性方程组, 可解出<spanclass="math inline">\(\{b_i\}\)</span>, 再代入<spanclass="math inline">\(\eqref{eq2}\)</span>下式, 计算出<spanclass="math inline">\(\{a_i\}\)</span>. 显然, 我们需要在知道<spanclass="math inline">\(\{c_i\}_{0\sim2N}\)</span>的前提下进行求解.</p>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>函数数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>Clenshaw 逆向迭代</tag>
      
      <tag>Padé近似</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>函数数值计算(03)：Chebyshev 多项式近似</title>
    <link href="/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(03)%EF%BC%9AChebyshev%20%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BF%91%E4%BC%BC/"/>
    <url>/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(03)%EF%BC%9AChebyshev%20%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%BF%91%E4%BC%BC/</url>
    
    <content type="html"><![CDATA[<p>很多的函数是以级数的形式表达的, 比如 Bessel 函数, Legendre 函数.级数展开在数学上是收敛的, 但是直接按照级数去计算往往并不是最合适的方法,例如</p><p><span class="math display">\[\arctan x=x-\frac{1}{3}x^3+\frac{1}{5}x^5-\cdots\ ,\ x\in[-1,1]\]</span></p><p>利用这个展开式计算<span class="math inline">\(\arctan1\)</span>,即<span class="math inline">\(\displaystyle\frac{\pi}{4}\)</span>,收敛速度慢得离谱. 我们介绍一种新的展开方式.</p><h2 id="chebyshev-多项式及其基本性质">Chebyshev 多项式及其基本性质</h2><p><strong>Chebyshev 多项式</strong> 定义为 <spanclass="math display">\[T_n(x)=\cos(n\arccos x)\ ,\ x\in[-1,1]\]</span></p><p>引入辅助角<span class="math inline">\(x=\cos\phi\)</span>,得到一个正交归一关系</p><p><span class="math display">\[\int_{0}^\piT_i(\cos\phi)T_j(\cos\phi)d\phi=\frac{\pi}{2}(1+\delta_{0i})\delta_{ij}\]</span></p><p>用<span class="math inline">\(x\)</span>表达:</p><p><span class="math display">\[\int_{-1}^1\frac{T_i(x)T_j(x)}{\sqrt{1-x^2}}dx=\begin{aligned}\begin{cases}\displaystyle0&amp;\text{if }i\ne j\\\displaystyle\frac{\pi}{2}&amp;\text{if }i=j\ne0\\\displaystyle\pi&amp;\text{if }i=j=0\end{cases}\end{aligned}\]</span></p><h2 id="零点处的正交归一关系">零点处的正交归一关系</h2><p>在<spanclass="math inline">\([-1,1]\)</span>上的正交归一关系提示我们将其用作函数展开的基:<span class="math display">\[f(x)=\frac{c_0}{2}+\sum_{k=1}^{N-1}c_kT_k(x)\]</span></p><p>如果希望这个式子在<spanclass="math inline">\(T_N(x)\)</span>的零点处严格成立, 则</p><p><span class="math display">\[f\left[\cos((k+\frac{1}{2})\pi/N)\right]=\frac{c_0}{2}+\sum_{m=1}^{N-1}c_m\cos((k+\frac{1}{2})m\pi/N)\]</span> 我们先考虑两个特别的求和式.</p><h3 id="displaystylesum_k0n-1coskfrac12theta">1. <spanclass="math inline">\(\displaystyle\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})\theta)\)</span></h3><p>这个式子没啥好说的, 凑一个因子<spanclass="math inline">\(\sin(\theta/2)\)</span>, 得 <spanclass="math display">\[\begin{aligned}\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})\theta)&amp;=\frac{1}{\sin\theta/2}\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})\theta)\sin\theta/2\newline&amp;=\sum_{k=0}^{N-1}\frac{\sin(k+1)\theta-\sin k\theta}{2\sin\theta/2}\newline&amp;=\frac{\sin(N\theta)}{2\sin\theta/2}\end{aligned}\]</span></p><h3 id="displaystylesum_k0n-1coskfrac12mpincoskfrac12mpin">2. <spanclass="math inline">\(\displaystyle\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})m\pi/N)\cos((k+\frac{1}{2})m&#39;\pi/N)\)</span></h3><p>同样进行积化和差 <span class="math display">\[\begin{aligned}\text{原式}&amp;=\frac{1}{2}\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})(m+m&#39;)\pi/N)+\frac{1}{2}\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})(m-m&#39;)\pi/N)\newline&amp;=\frac{\sin(m+m&#39;)\pi}{4\displaystyle\sin\frac{m+m&#39;}{2N}\pi}+\frac{\sin(m-m&#39;)\pi}{4\displaystyle\sin\frac{m-m&#39;}{2N}\pi}\end{aligned}\]</span> 简单地讨论<span class="math inline">\(m\)</span>和<spanclass="math inline">\(m&#39;\)</span>的取值, 得到 <spanclass="math display">\[\sum_{k=0}^{N-1}\cos((k+\frac{1}{2})m\pi/N)\cos((k+\frac{1}{2})m&#39;\pi/N)=\begin{aligned}\begin{cases}\displaystyle0&amp;\text{if }m\ne m&#39;\newline\displaystyle\frac{N}{2}&amp;\text{if }m=m&#39;\ne0\newline\displaystyleN&amp;\text{if }m=m&#39;=0\end{cases}\end{aligned}\]</span> 记作<span class="math inline">\(T_{mm&#39;}\)</span>.</p><h2 id="chebyshev-展开">Chebyshev 展开</h2><p>回到系数满足的条件 <span class="math display">\[f\left[\cos((k+\frac{1}{2})\pi/N)\right]=\frac{c_0}{2}+\sum_{m=1}^{N-1}c_m\cos((k+\frac{1}{2})m\pi/N)\]</span> 两边同乘以<spanclass="math inline">\(\displaystyle\cos((k+\frac{1}{2})m&#39;\pi/N)\)</span>并对<spanclass="math inline">\(k\)</span>​​求和, 得到 <span class="math display">\[\sum_{k=0}^{N-1}f\left[\cos((k+\frac{1}{2})\pi/N)\right]\cos((k+\frac{1}{2})m&#39;\pi/N)=\frac{c_0}{2}T_{0m&#39;}+\sum_{m=1}^{N-1}c_mT_{mm&#39;}=\frac{N}{2}c_0\delta_{0m&#39;}+\frac{N}{2}c_{m}\delta_{mm&#39;}\]</span> 取<span class="math inline">\(m&#39;\)</span>为<spanclass="math inline">\([0,N-1]\)</span>上不同的整数, 得到 <spanclass="math display">\[\boxed{c_m=\frac{2}{N}\sum_{k=0}^{N-1}f\left[\cos((k+\frac{1}{2})\pi/N)\right]\cos((k+\frac{1}{2})m\pi/N)}\]</span> 这就是 Chebyshev 展开的系数计算公式.</p><p>这里给出 Chebyshev 展开在 Runge 现象中的应用, 它的各个基之间是正交的,而幂级数的基之间具有很大的overlap, 所以前者才能解决所谓的 Runge现象.</p><figure><img src="../img/chebyshev_expansion_of_runge_function.png"alt="Runge 函数的 Chebyshev 展开" /><figcaption aria-hidden="true">Runge 函数的 Chebyshev 展开</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>函数数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>Chebyshev 多项式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>函数数值计算(02)：有理函数插值法, 样条函数插值法</title>
    <link href="/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(02)%EF%BC%9A%E6%9C%89%E7%90%86%E5%87%BD%E6%95%B0%E6%8F%92%E5%80%BC%E6%B3%95,%20%E6%A0%B7%E6%9D%A1%E5%87%BD%E6%95%B0%E6%8F%92%E5%80%BC%E6%B3%95/"/>
    <url>/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(02)%EF%BC%9A%E6%9C%89%E7%90%86%E5%87%BD%E6%95%B0%E6%8F%92%E5%80%BC%E6%B3%95,%20%E6%A0%B7%E6%9D%A1%E5%87%BD%E6%95%B0%E6%8F%92%E5%80%BC%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="有理函数插值法">有理函数插值法</h2><p>上一节提到, 当函数在某个区间内的变化行为比较剧烈时,多项式内插会出现剧烈震荡的行为.这时候利用有理函数进行内插可能会更加合适一些,它的构造可以采用一个分式的形式: <span class="math display">\[\Phi_{n,n}(x)=\frac{P_n(x)}{Q_n(x)}\]</span></p><p>其中<span class="math inline">\(P_n\)</span>和<spanclass="math inline">\(Q_n\)</span>都是<spanclass="math inline">\(n\)</span>阶多项式, 并且它们互素.</p><p>想要完全确定两者, 需要<spanclass="math inline">\(2n+2\)</span>个支撑点, 但是在<spanclass="math inline">\(\Phi_{n,n}\)</span>中, 两者相除,实际上造成了一个自由的公倍数, 也就是只需要<spanclass="math inline">\(2n+1\)</span>个支撑点, 记为<spanclass="math inline">\((x_0,y_0),(x_1,y_1),\cdots,(x_{2n},y_{2n})\)</span>.作为内插函数, <spanclass="math inline">\(\Phi_{n,n}\)</span>需要通过所有的支撑点,可以写成如下形式:</p><p><span class="math display">\[\Phi_{n,n}(x)=\phi_0(x_0)+\frac{x-x_0}{\Phi_{n-1,n-1}(x)}\]</span></p><p>其中, <spanclass="math inline">\(\phi_0(x_0)=y_0\)</span>以通过支撑点<spanclass="math inline">\(0\)</span>. 分母又可以写为:</p><p><span class="math display">\[\Phi_{n-1,n-1}(x)=\phi_1(x_0,x_1)+\frac{x-x_1}{\Phi_{n-2,n-2}(x)}\]</span></p><p>这样, <spanclass="math inline">\(\phi_1(x_0,x_1)\)</span>必须满足</p><p><span class="math display">\[\phi_0(x_0)+\frac{x_1-x_0}{\phi_1(x_0,x_1)}=y_1\Rightarrow\phi_1=\frac{x_1-x_0}{y_1-\phi_0(x_0)}\]</span></p><p>为了形式对称性, 把<span class="math inline">\(y_1\)</span>改写为<spanclass="math inline">\(\phi_0(x_1)\)</span>, 则</p><p><span class="math display">\[\phi_1(x_0,x_1)=\frac{x_1-x_0}{\phi_0(x_1)-\phi_0(x_0)}\]</span></p><p>对于更一般的情况, 我们不妨倒转递推方向</p><p><span class="math display">\[\Phi_{n-j-1,n-j-1}(x)=\frac{x-x_j}{\Phi_{n-j,n-j}(x)-\phi_j(x_0,x_1,\cdots,x_j)}\]</span></p><p>令<span class="math inline">\(x=x_{j+1}\)</span>, 立即得到</p><p><span class="math display">\[\phi_{j+1}(x_0, x_1, \cdots,x_{j+1})=\frac{x_{j+1}-x_{j}}{\phi_j(x_0,x_1,\cdots,x_{j-1},x_{j+1})-\phi_j(x_0,x_1,\cdots,x_{j-1},x_{j}}\]</span></p><p>它给出了各阶<span class="math inline">\(\phi\)</span>函数的递推关系.而<span class="math inline">\(\Phi_{n,n}\)</span>写成连分数的形式:</p><p><span class="math display">\[\Phi_{n,n}(x)=\phi_0(x_0)+\frac{x-x_0}{\phi_1(x_0,x_1)+\displaystyle\frac{x-x_1}{\phi_2(x_0,x_1,x_2)+\displaystyle\frac{x-x_2}{\ddots+\displaystyle\frac{x-x_{2n-1}}{\phi_{2n}(x_0,\cdots,x_{2n})}}}}\]</span></p><p>如果我们在一个单调的区间插值, 那么上述构造不会发散. 特别是对于 Runge函数这种有理分式, 把<span class="math inline">\(x^2\)</span>看作自变量,只需构造<spanclass="math inline">\(\Phi_{1,1}\)</span>形式的有理内插函数,取三个支撑点就能完成内插, 并且和原函数一模一样, 所谓的 Runge现象自然也就不再出现.</p><h2 id="样条函数插值法">样条函数插值法</h2><p>样条函数的基本思想是在每两个支撑点之间用一段多项式函数来表示,最常用的是三次样条函数, 这里也仅介绍三次样条函数.</p><h3 id="基本准备">基本准备</h3><p>在区间<span class="math inline">\([a,b]\)</span>上包括两端一共有<spanclass="math inline">\(n+1\)</span>个支撑点: <spanclass="math inline">\((x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)\)</span>.样条函数记作<span class="math inline">\(S(x), x\in[a,b]\)</span>.</p><p>每个子区间都具有一个三次多项式作为样条函数, 也就是<spanclass="math inline">\(4n\)</span>个待定参数. 可用的方程又有多少个呢?</p><ul><li><p>每个内部支撑点限制左右两个子区间的函数值, 给出两个方程,而外部两个支撑点各自只给出一个限制, 一共<spanclass="math inline">\(2n\)</span>个方程;</p></li><li><p>每个内部支撑点限制左右导函数相等, 一共<spanclass="math inline">\(n-1\)</span>个方程;</p></li><li><p>每个内部支撑点限制左右二阶导数相等, 一共<spanclass="math inline">\(n-1\)</span>个方程.</p></li></ul><p>我们现在有<span class="math inline">\(4n-2\)</span>个限制条件可用,得到的样条函数具有<span class="math inline">\(2\)</span>个自由度.自由度的来源无非是端点处边界条件不够完备, 我们只知道边界处的函数值,不知道边界处的导函数或者是二阶导函数的取值,因此需要再引入两个独立的约束方程,具体形式可以研究问题的数学或物理性质得到.</p><h3 id="计算参数">计算参数</h3><p>定义二阶导数在各个支撑点处的取值为 <strong>矩</strong>:</p><p><span class="math display">\[M_j=S&#39;&#39;(x_j)\ ,\ j =0,1,\cdots,n\]</span></p><p>三次多项式的二阶导数是一次函数, 因而对于每一段<spanclass="math inline">\([x_j,x_{j+1}], \ j=0,1,\cdots,n-1\)</span>,不难写出<span class="math inline">\(S&#39;&#39;\)</span>的表达式</p><p><span class="math display">\[S&#39;&#39;(x)=\frac{M_j(x_{j+1}-x)+M_{j+1}(x-x_j)}{x_{j+1}-x_j}\]</span></p><p>连续两次积分, 得到</p><p><span class="math display">\[S(x)=\frac{M_j(x_{j+1}-x)^3}{6(x_{j+1}-x_j)}+\frac{M_{j+1}(x-x_j)^3}{6(x_{j+1}-x_j)}+A_j(x-x_j)+B_j\, x\in[x_j,x_{j+1}]\]</span></p><p>这里<span class="math inline">\(A, B, M\)</span>一共是<spanclass="math inline">\(3n+1\)</span>个参数<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="为什么不是 $4n$ 个? 因为提前使用了二阶导连续的条件, 消去了 $n-1$ 个系数">[1]</span></a></sup>,考虑<span class="math inline">\(x_j\)</span>处函数值连续, 有</p><p><span class="math display">\[\frac{M_j(x_{j+1}-x_j)^2}{6}+B_j=\frac{M_j(x_{j}-x_{j-1})^2}{6}+A_{j-1}(x_j-x_{j-1})+B_{j-1}=y_j\]</span></p><p>得到</p><p><span class="math display">\[\boxed{\begin{aligned}B_j&amp;=y_j-\frac{M_j(x_{j+1}-x_j)^2}{6}\newlineA_j&amp;=\frac{y_{j+1}-y_j}{x_{j+1}-x_j}-\frac{M_{j+1}-M_j}{6}(x_{j+1}-x_j)\end{aligned}}\]</span></p><p>现在只剩<span class="math inline">\(n+1\)</span>个待定参数了, 同样地,内部限制条件只有<spanclass="math inline">\(n-1\)</span>个支撑点处的导数连续.</p><p><span class="math display">\[S&#39;(x)=-\frac{M_j(x_{j+1}-x)^2}{2(x_{j+1}-x_j)}+\frac{M_{j+1}(x-x_j)^2}{2(x_{j+1}-x_j)}+A_j\, x\in[x_j,x_{j+1}]\]</span></p><p>考虑<span class="math inline">\(x_j\)</span>处的导函数连续, 有</p><p><span class="math display">\[-\frac{M_j(x_{j+1}-x_j)}{2}+A_j=\frac{M_j(x_j-x_{j-1})}{2}+A_{j-1}\]</span></p><p>代入整理, 最终得到</p><p><span class="math display">\[\boxed{    \frac{x_{j+1}-x_j}{6}M_{j+1}+\frac{x_{j+1}-x_j}{3}M_j+\frac{x_j-x_{j-1}}{6}M_{j-1}=\frac{y_{j+1}-y_j}{x_{j+1}-x_j}-\frac{y_j-y_{j-1}}{x_j-x_{j-1}}}\]</span></p><p>这些式子给出全部的支撑点的约束方程,只要再给边界上<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="事实上可以是任两个无关且独立于之前所有约束方程的方程即可, 但实际问题中常常更容易得知边界处的条件">[2]</span></a></sup>引入两个独立约束即可.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>为什么不是 <spanclass="math inline">(4n)</span> 个? 因为提前使用了二阶导连续的条件,消去了 <span class="math inline">(n-1)</span> 个系数<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2"class="footnote-text"><span>事实上可以是任两个无关且独立于之前所有约束方程的方程即可,但实际问题中常常更容易得知边界处的条件<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>函数数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>插值法</tag>
      
      <tag>有理函数插值</tag>
      
      <tag>样条函数插值法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>函数数值计算(01)：多项式插值</title>
    <link href="/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(01)%EF%BC%9A%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%8F%92%E5%80%BC/"/>
    <url>/posts/%E5%87%BD%E6%95%B0%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97(01)%EF%BC%9A%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%8F%92%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="lagrange-插值法">Lagrange 插值法</h2><p>考虑区间<spanclass="math inline">\([x_0,x_n]\)</span>上的n次多项式内插</p><p><span class="math display">\[P_n(x)=a_0+a_1x+\cdots+a_nx^n\]</span></p><p>已知的点为<spanclass="math inline">\((x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)\)</span>.内插要求多项式的曲线通过这些点:</p><p><span class="math display">\[P_n(x_j)=y_j\ ,\ j = 0, 1, \cdots, n\]</span></p><p>为了求出这个问题的一般解, 我们将<spanclass="math inline">\(P_n\)</span>写成多项式的和:</p><p><span class="math display">\[P_n(x) = \sum_jp_{nj}(x)\]</span></p><p>其中, <spanclass="math inline">\(p_{nj}(x_k)=y_j\delta_{jk}\)</span>.</p><p>由于<span class="math inline">\(p_{nj}\)</span>具有<spanclass="math inline">\(n\)</span>个零点, 故它必然能写成</p><p><span class="math display">\[p_{nj}(x)=a_{nj}\prod_{m=0且m\ne j}^{n}(x-x_m)\]</span></p><p><span class="math inline">\(a_{nj}\)</span>只是系数, 因为<spanclass="math inline">\(n\)</span>个零点已经构成了<spanclass="math inline">\(n\)</span>次多项式. 代入<spanclass="math inline">\((x_j, y_j)\)</span>得到</p><p><span class="math display">\[a_{nj}=\frac{y_j}{\prod_{m=0且m\ne j}^{n}(x_j-x_m)}\]</span></p><p>最终我们得到</p><p><span class="math display">\[\boxed{P_n(x)=\sum_jy_jL_j(x)}\newline \ \newline\text{其中, } \boxed{L_j(x)=\prod_{m\ne j}\frac{x-x_m}{x_j-x_m}}\]</span></p><p>这个结果被称作 <strong>Lagrange多项式</strong>, 也称<strong>Lagrange内插公式</strong>.</p><h2 id="newton-插值法">Newton 插值法</h2><p>Newton 的多项式内插法是一种递推方法:</p><p><span class="math display">\[N(x)=\sum_{j=0}^{n}a_jn_j(x)\newline\text{其中, }n_j(x)=\prod_{k=0}^{j-1}(x-x_k),\ n_0(x)=1\]</span></p><p>好处是如果增加一个支撑点, 不破坏之前所有支撑条件, 仅需计算<spanclass="math inline">\(a_{n+1}\)</span>和<spanclass="math inline">\(n_{n+1}(x)\)</span>:</p><p><span class="math display">\[a_0+\sum_{j=1}^{n+1}a_j\cdot\prod_{k=0}^{j-1}(x_{n+1}-x_k) = y_{n+1}\]</span></p><p>如何求解系数呢? 上式相当于一个方程组</p><p><span class="math display">\[\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; \cdots &amp; 0\\1 &amp; x_1-x_0 &amp; 0 &amp; \cdots &amp; 0\\1 &amp; x_2-x_0 &amp; (x_2-x_0)(x_2-x_1) &amp; \cdots &amp; 0\\\cdots &amp; \cdots &amp; \cdots &amp; \cdots &amp; 0\\1 &amp; x_n-x_0 &amp; (x_n-x_0)(x_n-x_1) &amp; \cdots &amp;\prod_{j=0}^{n-1}(x_n-x_j)\end{pmatrix}\begin{pmatrix}a_0 \\ a_1 \\ a_2 \\ \cdots \\ a_n\end{pmatrix}=\begin{pmatrix}y_0 \\ y_1 \\ y_2 \\ \cdots \\ y_n\end{pmatrix}\]</span></p><p>解这个下三角矩阵描述的线性方程组问题, 即得各项系数.</p><h2 id="neville-迭代法">Neville 迭代法</h2><p>先构造<span class="math inline">\(n+1\)</span>个常数函数:</p><p><span class="math display">\[Q_i(x)=y_i\]</span></p><p>按指标大小顺序排列<span class="math inline">\(Q_i\)</span>,再用每对相邻的函数构造更高阶函数, 并且用双下标做记号:</p><p><span class="math display">\[P_{ij}=\frac{(x-x_i)Q_j-(x-x_j)Q_i}{x_j-x_i}\]</span></p><p>现在得到<span class="math inline">\(n\)</span>个双下标的一次函数,按第一指标顺序排列, 再用相邻的函数对构造二次函数:</p><p><span class="math display">\[P_{ijk}=\frac{(x-x_i)P_{jk}-(x-x_k)P_{ij}}{x_k-x_i}\]</span></p><p>至于下标, 略去重复数字, 为三下标. 如法炮制, 最终得到单个<spanclass="math inline">\(n\)</span>次函数.</p><h2 id="runge-现象">Runge 现象</h2><p>一般情况下, 多项式的次数越多, 需要的数据就越多, 而预测也就越准确.但也存在插值次数越高, 插值结果越偏离原函数的现象,特别常发生在区间的端点处, 称为 <strong>Runge现象</strong><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="关于 Runge 现象的定性介绍, 可以参见[它的维基百科](https://zh.wikipedia.org/wiki/龙格现象).">[1]</span></a></sup>.</p><p>特别地, 考虑函数</p><p><span class="math display">\[f(x)=\frac{1}{1+25x^2}\]</span></p><p>称为 <strong>Runge 函数</strong>. 在区间<spanclass="math inline">\([-1, 1]\)</span>上, 以<spanclass="math inline">\(\frac{2}{n}\)</span>为步长选取支撑点进行 Lagrange插值, 得到的结果如下所示:</p><figure><img src="../img/runge&#39;s_phenomenon.png" alt="Runge 现象" /><figcaption aria-hidden="true">Runge 现象</figcaption></figure><p>造成这种现象的主要原因是，拉格朗日插值使用的函数基组<spanclass="math inline">\(1,𝑥,𝑥^2,\cdots\)</span>​并不是正交基,插值结果十分病态, 可以考虑对基函数进行 Schmidt 正交化,但更方便的方案是选取既正交又简单的非多项式基,或者干脆不使用这种内插方案, 这是下一节将要讨论到的.</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>关于 Runge 现象的定性介绍,可以参见<ahref="https://zh.wikipedia.org/wiki/龙格现象">它的维基百科</a>.<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>计算物理</category>
      
      <category>函数数值计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数值计算</tag>
      
      <tag>插值法</tag>
      
      <tag>多项式插值</tag>
      
      <tag>Lagrange 插值法</tag>
      
      <tag>Newton 插值法</tag>
      
      <tag>Neville 迭代法</tag>
      
      <tag>Runge 现象</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
